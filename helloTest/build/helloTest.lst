ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"helloTest.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.__tcf_0,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	__tcf_0:
  26              	.LFB5338:
  27              		.file 1 "helloTest.cpp"
   1:helloTest.cpp **** #include "daisy_seed.h"
   2:helloTest.cpp **** #include "daisysp.h"
   3:helloTest.cpp **** #include "daisy_common.h"
   4:helloTest.cpp **** 
   5:helloTest.cpp **** using namespace daisy;
   6:helloTest.cpp **** using namespace daisysp;
   7:helloTest.cpp **** using namespace daisy::seed;
   8:helloTest.cpp **** 
   9:helloTest.cpp **** daisyCommon board;
  10:helloTest.cpp **** 
  11:helloTest.cpp **** Oscillator osc[2];
  28              		.loc 1 11 12 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              		.loc 1 11 12 is_stmt 0 view .LVU1
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE5338:
  38 0002 00BF     		.section	.text._ZN5daisy11daisyCommonD2Ev,"axG",%progbits,_ZN5daisy11daisyCommonD5Ev,comdat
  39              		.align	1
  40              		.p2align 2,,3
  41              		.weak	_ZN5daisy11daisyCommonD2Ev
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv5-d16
  47              	_ZN5daisy11daisyCommonD2Ev:
  48              	.LVL0:
  49              	.LFB4708:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 2


  50              		.file 2 "daisy_common.h"
   1:daisy_common.h **** #include "daisy_seed.h"
   2:daisy_common.h **** #include <vector>
   3:daisy_common.h **** using namespace daisy::seed;
   4:daisy_common.h **** using namespace daisy;
   5:daisy_common.h **** 
   6:daisy_common.h **** struct cv
   7:daisy_common.h **** {
   8:daisy_common.h ****     int user_name;
   9:daisy_common.h ****     int jack;
  10:daisy_common.h ****     int adc_channel_num;
  11:daisy_common.h ****     Pin pin;
  12:daisy_common.h ****     float cv_value;
  13:daisy_common.h **** };
  14:daisy_common.h **** struct jack_gpio
  15:daisy_common.h **** {
  16:daisy_common.h ****     int user_name;
  17:daisy_common.h ****     int jack;
  18:daisy_common.h ****     int direction;
  19:daisy_common.h ****     Pin pin;
  20:daisy_common.h ****     GPIO gpio;
  21:daisy_common.h **** };
  22:daisy_common.h **** 
  23:daisy_common.h **** namespace daisy
  24:daisy_common.h **** {
  25:daisy_common.h **** 
  26:daisy_common.h **** class daisyCommon
  27:daisy_common.h **** {
  28:daisy_common.h ****     public:
  29:daisy_common.h ****     daisyCommon() {}
  30:daisy_common.h ****     ~daisyCommon() {}
  51              		.loc 2 30 5 is_stmt 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		.loc 2 30 5 is_stmt 0 view .LVU3
  56 0000 10B5     		push	{r4, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 4, -8
  59              		.cfi_offset 14, -4
  60              		.loc 2 30 5 view .LVU4
  61 0002 0446     		mov	r4, r0
  62              	.LVL1:
  63              	.LBB483:
  64              	.LBI483:
  65              		.file 3 "../../DaisyExamples/libDaisy//src/daisy_seed.h"
   1:../../DaisyExamples/libDaisy//src/daisy_seed.h **** #pragma once
   2:../../DaisyExamples/libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../DaisyExamples/libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
   5:../../DaisyExamples/libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
   7:../../DaisyExamples/libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../DaisyExamples/libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  10:../../DaisyExamples/libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../DaisyExamples/libDaisy//src/daisy_seed.h **** {
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 3


  12:../../DaisyExamples/libDaisy//src/daisy_seed.h **** /**
  13:../../DaisyExamples/libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  16:../../DaisyExamples/libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../DaisyExamples/libDaisy//src/daisy_seed.h **** */
  18:../../DaisyExamples/libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../DaisyExamples/libDaisy//src/daisy_seed.h **** {
  20:../../DaisyExamples/libDaisy//src/daisy_seed.h ****   public:
  21:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
  66              		.loc 3 22 5 is_stmt 1 view .LVU5
  67              	.LBB484:
  68              	.LBI484:
  69              		.file 4 "../../DaisyExamples/libDaisy//src/sys/system.h"
   1:../../DaisyExamples/libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../DaisyExamples/libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../DaisyExamples/libDaisy//src/sys/system.h **** 
   4:../../DaisyExamples/libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../DaisyExamples/libDaisy//src/sys/system.h **** 
   6:../../DaisyExamples/libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../DaisyExamples/libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../DaisyExamples/libDaisy//src/sys/system.h **** 
   9:../../DaisyExamples/libDaisy//src/sys/system.h **** namespace daisy
  10:../../DaisyExamples/libDaisy//src/sys/system.h **** {
  11:../../DaisyExamples/libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../DaisyExamples/libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../DaisyExamples/libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../DaisyExamples/libDaisy//src/sys/system.h ****  **
  15:../../DaisyExamples/libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../DaisyExamples/libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../DaisyExamples/libDaisy//src/sys/system.h ****  */
  18:../../DaisyExamples/libDaisy//src/sys/system.h **** class System
  19:../../DaisyExamples/libDaisy//src/sys/system.h **** {
  20:../../DaisyExamples/libDaisy//src/sys/system.h ****   public:
  21:../../DaisyExamples/libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../DaisyExamples/libDaisy//src/sys/system.h ****     struct Config
  23:../../DaisyExamples/libDaisy//src/sys/system.h ****     {
  24:../../DaisyExamples/libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../DaisyExamples/libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../DaisyExamples/libDaisy//src/sys/system.h ****         {
  27:../../DaisyExamples/libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../DaisyExamples/libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../DaisyExamples/libDaisy//src/sys/system.h ****         };
  30:../../DaisyExamples/libDaisy//src/sys/system.h **** 
  31:../../DaisyExamples/libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../DaisyExamples/libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../DaisyExamples/libDaisy//src/sys/system.h ****          ** Cache Enabled
  34:../../DaisyExamples/libDaisy//src/sys/system.h ****          ** */
  35:../../DaisyExamples/libDaisy//src/sys/system.h ****         void Defaults()
  36:../../DaisyExamples/libDaisy//src/sys/system.h ****         {
  37:../../DaisyExamples/libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../DaisyExamples/libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../DaisyExamples/libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../DaisyExamples/libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../DaisyExamples/libDaisy//src/sys/system.h ****         }
  42:../../DaisyExamples/libDaisy//src/sys/system.h **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 4


  43:../../DaisyExamples/libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../DaisyExamples/libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../DaisyExamples/libDaisy//src/sys/system.h ****          ** Cache Enabled
  46:../../DaisyExamples/libDaisy//src/sys/system.h ****          ** */
  47:../../DaisyExamples/libDaisy//src/sys/system.h ****         void Boost()
  48:../../DaisyExamples/libDaisy//src/sys/system.h ****         {
  49:../../DaisyExamples/libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../DaisyExamples/libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../DaisyExamples/libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../DaisyExamples/libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../DaisyExamples/libDaisy//src/sys/system.h ****         }
  54:../../DaisyExamples/libDaisy//src/sys/system.h **** 
  55:../../DaisyExamples/libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../DaisyExamples/libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../DaisyExamples/libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../DaisyExamples/libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../DaisyExamples/libDaisy//src/sys/system.h ****     };
  60:../../DaisyExamples/libDaisy//src/sys/system.h **** 
  61:../../DaisyExamples/libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../DaisyExamples/libDaisy//src/sys/system.h ****     enum MemoryRegion
  63:../../DaisyExamples/libDaisy//src/sys/system.h ****     {
  64:../../DaisyExamples/libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../DaisyExamples/libDaisy//src/sys/system.h ****         ITCMRAM,
  66:../../DaisyExamples/libDaisy//src/sys/system.h ****         DTCMRAM,
  67:../../DaisyExamples/libDaisy//src/sys/system.h ****         SRAM_D1,
  68:../../DaisyExamples/libDaisy//src/sys/system.h ****         SRAM_D2,
  69:../../DaisyExamples/libDaisy//src/sys/system.h ****         SRAM_D3,
  70:../../DaisyExamples/libDaisy//src/sys/system.h ****         SDRAM,
  71:../../DaisyExamples/libDaisy//src/sys/system.h ****         QSPI,
  72:../../DaisyExamples/libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  73:../../DaisyExamples/libDaisy//src/sys/system.h ****     };
  74:../../DaisyExamples/libDaisy//src/sys/system.h **** 
  75:../../DaisyExamples/libDaisy//src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../DaisyExamples/libDaisy//src/sys/system.h ****     struct BootInfo
  77:../../DaisyExamples/libDaisy//src/sys/system.h ****     {
  78:../../DaisyExamples/libDaisy//src/sys/system.h ****         enum class Type : uint32_t
  79:../../DaisyExamples/libDaisy//src/sys/system.h ****         {
  80:../../DaisyExamples/libDaisy//src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../DaisyExamples/libDaisy//src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../DaisyExamples/libDaisy//src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../DaisyExamples/libDaisy//src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../DaisyExamples/libDaisy//src/sys/system.h ****         } status;
  85:../../DaisyExamples/libDaisy//src/sys/system.h ****         uint32_t data;
  86:../../DaisyExamples/libDaisy//src/sys/system.h ****         enum class Version : uint32_t
  87:../../DaisyExamples/libDaisy//src/sys/system.h ****         {
  88:../../DaisyExamples/libDaisy//src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../DaisyExamples/libDaisy//src/sys/system.h ****             NONE,        // No bootloader present
  90:../../DaisyExamples/libDaisy//src/sys/system.h ****             v6_0,        // v6.0
  91:../../DaisyExamples/libDaisy//src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../DaisyExamples/libDaisy//src/sys/system.h ****             LAST
  93:../../DaisyExamples/libDaisy//src/sys/system.h ****         } version;
  94:../../DaisyExamples/libDaisy//src/sys/system.h ****     };
  95:../../DaisyExamples/libDaisy//src/sys/system.h **** 
  96:../../DaisyExamples/libDaisy//src/sys/system.h ****     System() {}
  97:../../DaisyExamples/libDaisy//src/sys/system.h ****     ~System() {}
  70              		.loc 4 97 5 view .LVU6
  71              		.loc 4 97 5 is_stmt 0 view .LVU7
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 5


  72              	.LBE484:
  73              	.LBB485:
  74              	.LBI485:
  75              		.file 5 "../../DaisyExamples/libDaisy//src/hid/usb.h"
   1:../../DaisyExamples/libDaisy//src/hid/usb.h **** #pragma once
   2:../../DaisyExamples/libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../DaisyExamples/libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../DaisyExamples/libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../DaisyExamples/libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../DaisyExamples/libDaisy//src/hid/usb.h **** 
   7:../../DaisyExamples/libDaisy//src/hid/usb.h **** namespace daisy
   8:../../DaisyExamples/libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../DaisyExamples/libDaisy//src/hid/usb.h ****     @{
  10:../../DaisyExamples/libDaisy//src/hid/usb.h **** */
  11:../../DaisyExamples/libDaisy//src/hid/usb.h **** 
  12:../../DaisyExamples/libDaisy//src/hid/usb.h **** {
  13:../../DaisyExamples/libDaisy//src/hid/usb.h **** /** 
  14:../../DaisyExamples/libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../DaisyExamples/libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../DaisyExamples/libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../DaisyExamples/libDaisy//src/hid/usb.h **** */
  18:../../DaisyExamples/libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../DaisyExamples/libDaisy//src/hid/usb.h **** {
  20:../../DaisyExamples/libDaisy//src/hid/usb.h ****   public:
  21:../../DaisyExamples/libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../DaisyExamples/libDaisy//src/hid/usb.h ****     enum class Result
  23:../../DaisyExamples/libDaisy//src/hid/usb.h ****     {
  24:../../DaisyExamples/libDaisy//src/hid/usb.h ****         OK,
  25:../../DaisyExamples/libDaisy//src/hid/usb.h ****         ERR,
  26:../../DaisyExamples/libDaisy//src/hid/usb.h ****     };
  27:../../DaisyExamples/libDaisy//src/hid/usb.h **** 
  28:../../DaisyExamples/libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../DaisyExamples/libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../DaisyExamples/libDaisy//src/hid/usb.h ****     {
  31:../../DaisyExamples/libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../DaisyExamples/libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../DaisyExamples/libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../DaisyExamples/libDaisy//src/hid/usb.h ****     };
  35:../../DaisyExamples/libDaisy//src/hid/usb.h **** 
  36:../../DaisyExamples/libDaisy//src/hid/usb.h **** 
  37:../../DaisyExamples/libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../DaisyExamples/libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../DaisyExamples/libDaisy//src/hid/usb.h **** 
  40:../../DaisyExamples/libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../DaisyExamples/libDaisy//src/hid/usb.h **** 
  42:../../DaisyExamples/libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
  76              		.loc 5 42 5 is_stmt 1 view .LVU8
  77              		.loc 5 42 5 is_stmt 0 view .LVU9
  78              	.LBE485:
  79              	.LBB486:
  80              	.LBI486:
  81              		.file 6 "../../DaisyExamples/libDaisy//src/per/adc.h"
   1:../../DaisyExamples/libDaisy//src/per/adc.h **** #pragma once
   2:../../DaisyExamples/libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../DaisyExamples/libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../DaisyExamples/libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../DaisyExamples/libDaisy//src/per/adc.h **** #include <stdlib.h>
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 6


   6:../../DaisyExamples/libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../DaisyExamples/libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../DaisyExamples/libDaisy//src/per/adc.h **** 
   9:../../DaisyExamples/libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../DaisyExamples/libDaisy//src/per/adc.h **** 
  11:../../DaisyExamples/libDaisy//src/per/adc.h **** namespace daisy
  12:../../DaisyExamples/libDaisy//src/per/adc.h **** {
  13:../../DaisyExamples/libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../DaisyExamples/libDaisy//src/per/adc.h ****     @{
  15:../../DaisyExamples/libDaisy//src/per/adc.h **** */
  16:../../DaisyExamples/libDaisy//src/per/adc.h **** 
  17:../../DaisyExamples/libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../DaisyExamples/libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../DaisyExamples/libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../DaisyExamples/libDaisy//src/per/adc.h **** */
  21:../../DaisyExamples/libDaisy//src/per/adc.h **** 
  22:../../DaisyExamples/libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../DaisyExamples/libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../DaisyExamples/libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../DaisyExamples/libDaisy//src/per/adc.h ****  *           one channel.
  26:../../DaisyExamples/libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../DaisyExamples/libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../DaisyExamples/libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../DaisyExamples/libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../DaisyExamples/libDaisy//src/per/adc.h **** */
  31:../../DaisyExamples/libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../DaisyExamples/libDaisy//src/per/adc.h **** {
  33:../../DaisyExamples/libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../DaisyExamples/libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../DaisyExamples/libDaisy//src/per/adc.h ****     {
  36:../../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../DaisyExamples/libDaisy//src/per/adc.h ****     };
  41:../../DaisyExamples/libDaisy//src/per/adc.h **** 
  42:../../DaisyExamples/libDaisy//src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../DaisyExamples/libDaisy//src/per/adc.h ****     enum ConversionSpeed
  44:../../DaisyExamples/libDaisy//src/per/adc.h ****     {
  45:../../DaisyExamples/libDaisy//src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../DaisyExamples/libDaisy//src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../DaisyExamples/libDaisy//src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../DaisyExamples/libDaisy//src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../DaisyExamples/libDaisy//src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../DaisyExamples/libDaisy//src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../DaisyExamples/libDaisy//src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../DaisyExamples/libDaisy//src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../DaisyExamples/libDaisy//src/per/adc.h ****     };
  54:../../DaisyExamples/libDaisy//src/per/adc.h **** 
  55:../../DaisyExamples/libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../DaisyExamples/libDaisy//src/per/adc.h ****     \param pin Pin to init.
  57:../../DaisyExamples/libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../DaisyExamples/libDaisy//src/per/adc.h ****      */
  59:../../DaisyExamples/libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../DaisyExamples/libDaisy//src/per/adc.h **** 
  61:../../DaisyExamples/libDaisy//src/per/adc.h ****     /** 
  62:../../DaisyExamples/libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 7


  63:../../DaisyExamples/libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../DaisyExamples/libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../DaisyExamples/libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../DaisyExamples/libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../DaisyExamples/libDaisy//src/per/adc.h ****     \param adc_pin &
  68:../../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  70:../../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../DaisyExamples/libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../DaisyExamples/libDaisy//src/per/adc.h ****     */
  74:../../DaisyExamples/libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../DaisyExamples/libDaisy//src/per/adc.h ****                  size_t          mux_channels,
  76:../../DaisyExamples/libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_0,
  77:../../DaisyExamples/libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../DaisyExamples/libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../DaisyExamples/libDaisy//src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../DaisyExamples/libDaisy//src/per/adc.h **** 
  81:../../DaisyExamples/libDaisy//src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../DaisyExamples/libDaisy//src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../DaisyExamples/libDaisy//src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../DaisyExamples/libDaisy//src/per/adc.h ****     ConversionSpeed speed_;
  85:../../DaisyExamples/libDaisy//src/per/adc.h **** };
  86:../../DaisyExamples/libDaisy//src/per/adc.h **** 
  87:../../DaisyExamples/libDaisy//src/per/adc.h **** /**
  88:../../DaisyExamples/libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../DaisyExamples/libDaisy//src/per/adc.h **** */
  90:../../DaisyExamples/libDaisy//src/per/adc.h **** class AdcHandle
  91:../../DaisyExamples/libDaisy//src/per/adc.h **** {
  92:../../DaisyExamples/libDaisy//src/per/adc.h ****   public:
  93:../../DaisyExamples/libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../DaisyExamples/libDaisy//src/per/adc.h ****     enum OverSampling
  95:../../DaisyExamples/libDaisy//src/per/adc.h ****     {
  96:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  98:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  99:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
 100:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
 101:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
 102:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
 103:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
 104:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
 105:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
 106:../../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../DaisyExamples/libDaisy//src/per/adc.h ****     };
 108:../../DaisyExamples/libDaisy//src/per/adc.h **** 
 109:../../DaisyExamples/libDaisy//src/per/adc.h ****     AdcHandle() {}
 110:../../DaisyExamples/libDaisy//src/per/adc.h ****     ~AdcHandle() {}
  82              		.loc 6 110 5 is_stmt 1 view .LVU10
  83              		.loc 6 110 5 is_stmt 0 view .LVU11
  84              	.LBE486:
  85              	.LBB487:
  86              	.LBI487:
  87              		.file 7 "../../DaisyExamples/libDaisy//src/hid/audio.h"
   1:../../DaisyExamples/libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../DaisyExamples/libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 8


   4:../../DaisyExamples/libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
   6:../../DaisyExamples/libDaisy//src/hid/audio.h **** namespace daisy
   7:../../DaisyExamples/libDaisy//src/hid/audio.h **** {
   8:../../DaisyExamples/libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../DaisyExamples/libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../DaisyExamples/libDaisy//src/hid/audio.h ****  */
  22:../../DaisyExamples/libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../DaisyExamples/libDaisy//src/hid/audio.h **** {
  24:../../DaisyExamples/libDaisy//src/hid/audio.h ****   public:
  25:../../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../DaisyExamples/libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../DaisyExamples/libDaisy//src/hid/audio.h ****     struct Config
  28:../../DaisyExamples/libDaisy//src/hid/audio.h ****     {
  29:../../DaisyExamples/libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../DaisyExamples/libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  32:../../DaisyExamples/libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../DaisyExamples/libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  35:../../DaisyExamples/libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../DaisyExamples/libDaisy//src/hid/audio.h ****         float postgain;
  37:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  38:../../DaisyExamples/libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../DaisyExamples/libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../DaisyExamples/libDaisy//src/hid/audio.h ****          */
  41:../../DaisyExamples/libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  43:../../DaisyExamples/libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../DaisyExamples/libDaisy//src/hid/audio.h ****         Config()
  45:../../DaisyExamples/libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../DaisyExamples/libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../DaisyExamples/libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../DaisyExamples/libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../DaisyExamples/libDaisy//src/hid/audio.h ****         {
  50:../../DaisyExamples/libDaisy//src/hid/audio.h ****         }
  51:../../DaisyExamples/libDaisy//src/hid/audio.h ****     };
  52:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  53:../../DaisyExamples/libDaisy//src/hid/audio.h ****     enum class Result
  54:../../DaisyExamples/libDaisy//src/hid/audio.h ****     {
  55:../../DaisyExamples/libDaisy//src/hid/audio.h ****         OK,
  56:../../DaisyExamples/libDaisy//src/hid/audio.h ****         ERR,
  57:../../DaisyExamples/libDaisy//src/hid/audio.h ****     };
  58:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  59:../../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../DaisyExamples/libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 9


  61:../../DaisyExamples/libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  63:../../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  65:../../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../DaisyExamples/libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  68:../../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  70:../../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../DaisyExamples/libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  73:../../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../DaisyExamples/libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../DaisyExamples/libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  77:../../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../DaisyExamples/libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../DaisyExamples/libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../DaisyExamples/libDaisy//src/hid/audio.h ****     */
  81:../../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  83:../../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../DaisyExamples/libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../DaisyExamples/libDaisy//src/hid/audio.h ****     */
  86:../../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  88:../../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../DaisyExamples/libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  91:../../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../DaisyExamples/libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../DaisyExamples/libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../DaisyExamples/libDaisy//src/hid/audio.h **** 
  95:../../DaisyExamples/libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
  88              		.loc 7 96 5 is_stmt 1 view .LVU12
  89              		.loc 7 96 5 is_stmt 0 view .LVU13
  90              	.LBE487:
  91              	.LBE483:
  92              	.LBB488:
  93              	.LBI488:
  94              		.file 8 "../../DaisyExamples/libDaisy//src/hid/switch.h"
   1:../../DaisyExamples/libDaisy//src/hid/switch.h **** #pragma once
   2:../../DaisyExamples/libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../DaisyExamples/libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../DaisyExamples/libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../DaisyExamples/libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../DaisyExamples/libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../DaisyExamples/libDaisy//src/hid/switch.h **** 
   8:../../DaisyExamples/libDaisy//src/hid/switch.h **** namespace daisy
   9:../../DaisyExamples/libDaisy//src/hid/switch.h **** {
  10:../../DaisyExamples/libDaisy//src/hid/switch.h **** /** 
  11:../../DaisyExamples/libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../DaisyExamples/libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../DaisyExamples/libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../DaisyExamples/libDaisy//src/hid/switch.h ****     @date December 2019
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 10


  15:../../DaisyExamples/libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../DaisyExamples/libDaisy//src/hid/switch.h **** */
  17:../../DaisyExamples/libDaisy//src/hid/switch.h **** class Switch
  18:../../DaisyExamples/libDaisy//src/hid/switch.h **** {
  19:../../DaisyExamples/libDaisy//src/hid/switch.h ****   public:
  20:../../DaisyExamples/libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../DaisyExamples/libDaisy//src/hid/switch.h ****     enum Type
  22:../../DaisyExamples/libDaisy//src/hid/switch.h ****     {
  23:../../DaisyExamples/libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../DaisyExamples/libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../DaisyExamples/libDaisy//src/hid/switch.h ****     };
  26:../../DaisyExamples/libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../DaisyExamples/libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../DaisyExamples/libDaisy//src/hid/switch.h ****     {
  29:../../DaisyExamples/libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../DaisyExamples/libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../DaisyExamples/libDaisy//src/hid/switch.h ****     };
  32:../../DaisyExamples/libDaisy//src/hid/switch.h **** 
  33:../../DaisyExamples/libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../DaisyExamples/libDaisy//src/hid/switch.h ****     enum Pull
  35:../../DaisyExamples/libDaisy//src/hid/switch.h ****     {
  36:../../DaisyExamples/libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../DaisyExamples/libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../DaisyExamples/libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../DaisyExamples/libDaisy//src/hid/switch.h ****     };
  40:../../DaisyExamples/libDaisy//src/hid/switch.h **** 
  41:../../DaisyExamples/libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../DaisyExamples/libDaisy//src/hid/switch.h ****     ~Switch() {}
  95              		.loc 8 42 5 is_stmt 1 view .LVU14
  96              		.loc 8 42 5 is_stmt 0 view .LVU15
  97              	.LBE488:
  98              	.LBB489:
  99              	.LBI489:
 100              		.file 9 "../../DaisyExamples/libDaisy//src/hid/switch3.h"
   1:../../DaisyExamples/libDaisy//src/hid/switch3.h **** #pragma once
   2:../../DaisyExamples/libDaisy//src/hid/switch3.h **** #include "daisy_core.h"
   3:../../DaisyExamples/libDaisy//src/hid/switch3.h **** #include "per/gpio.h"
   4:../../DaisyExamples/libDaisy//src/hid/switch3.h **** 
   5:../../DaisyExamples/libDaisy//src/hid/switch3.h **** namespace daisy
   6:../../DaisyExamples/libDaisy//src/hid/switch3.h **** {
   7:../../DaisyExamples/libDaisy//src/hid/switch3.h **** class Switch3
   8:../../DaisyExamples/libDaisy//src/hid/switch3.h **** {
   9:../../DaisyExamples/libDaisy//src/hid/switch3.h ****   public:
  10:../../DaisyExamples/libDaisy//src/hid/switch3.h ****     enum
  11:../../DaisyExamples/libDaisy//src/hid/switch3.h ****     {
  12:../../DaisyExamples/libDaisy//src/hid/switch3.h ****         POS_CENTER = 0,
  13:../../DaisyExamples/libDaisy//src/hid/switch3.h ****         POS_LEFT   = 1,
  14:../../DaisyExamples/libDaisy//src/hid/switch3.h ****         POS_UP     = 1,
  15:../../DaisyExamples/libDaisy//src/hid/switch3.h ****         POS_RIGHT  = 2,
  16:../../DaisyExamples/libDaisy//src/hid/switch3.h ****         POS_DOWN   = 2,
  17:../../DaisyExamples/libDaisy//src/hid/switch3.h ****     };
  18:../../DaisyExamples/libDaisy//src/hid/switch3.h **** 
  19:../../DaisyExamples/libDaisy//src/hid/switch3.h **** 
  20:../../DaisyExamples/libDaisy//src/hid/switch3.h ****     Switch3() {}
  21:../../DaisyExamples/libDaisy//src/hid/switch3.h ****     ~Switch3() {}
 101              		.loc 9 21 5 is_stmt 1 view .LVU16
 102              		.loc 9 21 5 is_stmt 0 view .LVU17
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 11


 103              	.LBE489:
 104              	.LBB490:
 105              	.LBI490:
 106              		.loc 9 21 5 is_stmt 1 view .LVU18
 107              		.loc 9 21 5 is_stmt 0 view .LVU19
 108              	.LBE490:
 109              	.LBB491:
 110              	.LBI491:
 111              		.file 10 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_vector
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Vector implementation -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1996
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this  software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 12


  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /** @file bits/stl_vector.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifndef _STL_VECTOR_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _STL_VECTOR_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/functexcept.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/concept_check.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <initializer_list>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201703L
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # include <compare>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <debug/assertions.h>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** extern "C" void
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  const void*, const void*);
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc>
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     struct _Vector_base
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        	pointer;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl_data
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_start;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_finish;
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_end_of_storage;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 13


 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_start = __x._M_start;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // information used by TBAA.
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Vector_impl_data __tmp;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __tmp._M_copy_data(*this);
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_copy_data(__x);
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __x._M_copy_data(__tmp);
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type()
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename = _Tp_alloc_type>
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 14


 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type) { }
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename _Up>
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      if (__impl._M_start)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Reinit
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_on_dealloc(_M_impl);
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Reinit()
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		if (_M_impl._M_start)
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 15


 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    _M_impl._M_finish);
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    private:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      size_type _M_n;
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc allocator_type;
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp_alloc_type&
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 16


 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp_alloc_type&
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       allocator_type
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() = default;
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() { }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n)
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl()
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(std::move(__a)) { }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__x.get_allocator() == __a)
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _M_create_storage(__n);
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 17


 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_impl _M_impl;
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pointer
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_allocate(size_t __n)
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__p)
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_create_storage(size_t __n)
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     };
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /**
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  individual elements in any order.
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @ingroup sequences
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Tp  Type of element.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  elements in any order and saves the user from worrying about
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  also provided as with C-style arrays.
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   */
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 18


 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Concept requirements.
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus < 201103L
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Tp					value_type;
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::pointer			pointer;
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator;
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef size_t					size_type;
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef ptrdiff_t					difference_type;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc					allocator_type;
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(true_type)
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(false_type)
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return false; }
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_use_relocate()
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 19


 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return __result; }
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // C++11
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_allocate;
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_deallocate;
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_impl;
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() = default;
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() { }
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator object.
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 20


 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructed elements.
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_default_initialize(__n); }
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value,
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector copy constructor.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x  will not be copied
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x)
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 21


 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move constructor.
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  moved instance.
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector.
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&&) noexcept = default;
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Copy constructor with alternative allocator
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(), __a)
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m, std::move(__rv))
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__rv.get_allocator() == __m)
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (!__rv.empty())
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish =
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  this->_M_impl._M_start,
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __rv.clear();
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Move constructor with alternative allocator
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       noexcept( noexcept(
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 22


 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a __l.
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This will call the element type's copy constructor N times
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(initializer_list<value_type> __l,
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a)
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from a range.
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  An input iterator.
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [first,last).
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  random-access, then this will call the elements' copy
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor, and logN memory reallocations.
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 23


 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  responsibility.
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 112              		.loc 10 678 7 is_stmt 1 view .LVU20
 113              	.LBB492:
 114              	.LBI492:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 115              		.loc 10 276 7 view .LVU21
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 116              		.loc 10 276 7 is_stmt 0 view .LVU22
 117              	.LBE492:
 118              	.LBB493:
 119              	.LBI493:
 120              		.file 11 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\alloc_trai
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** /** @file bits/alloc_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/stl_construct.h>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/memoryfwd.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/allocator.h>
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/ptr_traits.h>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <ext/numeric_traits.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** {
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 24


  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   struct __allocator_traits_base
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up>
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind<_Tp, _Up,
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   protected:
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   };
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Up>
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using __alloc_rebind
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @ingroup allocators
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   */
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef _Alloc allocator_type;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's pointer type.
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 25


 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = _Func<_Alloc>;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT>
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT>
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const pointer type.
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's void pointer type.
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's difference type
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 26


 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's size type
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 27


 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr pointer
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n); }
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct __construct_helper
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename _Alloc2,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static true_type __test(int);
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename>
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static false_type __test(...);
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using __has_construct
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.destroy(__p); }
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 28


 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ std::_Destroy(__p); }
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.max_size())
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.max_size(); }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr size_type
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    / sizeof(value_type);
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr _Alloc2
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a; }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 29


 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  arguments @a __args...
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 30


 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_max_size(__a, 0); }
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_select(__rhs, 0); }
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus > 201703L
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /// Partial specialization for std::allocator.
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using value_type = _Tp;
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's pointer type.
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = _Tp*;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const pointer type.
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = const _Tp*;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's void pointer type.
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = void*;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const void pointer type.
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = const void*;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's difference type
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's size type
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = std::size_t;
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on move assignment
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on swap
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap = false_type;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 31


 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal = true_type;
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n, __hint);
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n);
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *	       an object of type `_Up`.
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 32


 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up, typename... _Args>
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.construct(__p, std::forward<_Args>(__args)...);
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.destroy(__p);
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::destroy_at(__p);
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size()
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.max_size();
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return size_t(-1) / sizeof(value_type);
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 33


 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc& __one, const _Alloc& __two, true_type)
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = __two; }
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_copy_assignment __pocca;
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocca::value)
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = __two;
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_copy(__one, __two, __pocca());
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     constexpr _Alloc
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(const _Alloc& __a)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       return __traits::select_on_container_copy_construction(__a);
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = std::move(__two); }
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_move(_Alloc& __one, _Alloc& __two)
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_move_assignment __pocma;
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocma::value)
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 34


 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = std::move(__two);
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_move(__one, __two, __pocma());
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc& __one, _Alloc& __two, true_type)
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using std::swap;
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       swap(__one, __two);
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc&, _Alloc&, false_type)
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_swap(_Alloc& __one, _Alloc& __two)
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_swap __pocs;
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocs::value)
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using std::swap;
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  swap(__one, __two);
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_swap(__one, __two, __pocs());
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp,
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename _ValueT = __remove_cvref_t<typename _Alloc::value_type>,
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename = void>
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : false_type
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp, typename _ValueT>
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl<_Alloc, _Tp, _ValueT,
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<decltype(allocator_traits<_Alloc>::construct(
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Alloc&>(), std::declval<_ValueT*>(),
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Tp>()))>>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is CopyInsertable into containers using _Alloc
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc,
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 35


 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				 typename _Alloc::value_type const&>::type
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires CopyConstructible
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable<allocator<_Tp>>
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_copy_constructible<_Tp>
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is MoveInsertable into containers using _Alloc
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc, typename _Alloc::value_type>::type
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires MoveConstructible
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable<allocator<_Tp>>
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_move_constructible<_Tp>
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // Trait to detect Allocator-like types.
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename = void>
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator : false_type { };
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator<_Alloc,
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<typename _Alloc::value_type,
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	       decltype(std::declval<_Alloc&>().allocate(size_t{}))>>
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type { };
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireAllocator
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<__is_allocator<_Alloc>::value, _Alloc>::type;
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireNotAllocator
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<!__is_allocator<_Alloc>::value, _Alloc>::type;
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif // C++11
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * Destroy a range of objects using the supplied allocator.  For
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * non-default allocators we do not optimize away invocation of
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * destroy() even if _Tp has a trivial destructor.
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    */
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Allocator>
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     void
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	     _Allocator& __alloc)
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       for (; __first != __last; ++__first)
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201103L
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__alloc.destroy(std::__addressof(*__first));
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 36


 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	allocator_traits<_Allocator>::destroy(__alloc,
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 					      std::__addressof(*__first));
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Tp>
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 121              		.loc 11 735 5 is_stmt 1 view .LVU23
 122              		.loc 11 735 5 is_stmt 0 view .LVU24
 123              	.LBE493:
 124              	.LBB494:
 125              	.LBI494:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 126              		.loc 10 333 7 is_stmt 1 view .LVU25
 127              	.LBB495:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 128              		.loc 10 335 15 is_stmt 0 view .LVU26
 129 0004 C068     		ldr	r0, [r0, #12]
 130              	.LVL2:
 131              	.LBB496:
 132              	.LBI496:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 133              		.loc 10 350 7 is_stmt 1 view .LVU27
 134              	.LBB497:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 135              		.loc 10 353 2 is_stmt 0 view .LVU28
 136 0006 18B1     		cbz	r0, .L4
 137              	.LVL3:
 138              	.LBB498:
 139              	.LBI498:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 140              		.loc 11 491 7 is_stmt 1 view .LVU29
 141              	.LBB499:
 142              	.LBB500:
 143              	.LBI500:
 144              		.file 12 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\new_allocat
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 37


  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/c++config.h>
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <new>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/move.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <type_traits>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** {
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   /**
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @ingroup allocators
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    */
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   template<typename _Tp>
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     class new_allocator
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     {
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     public:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::size_t     size_type;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	struct rebind
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 38


  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       pointer
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       const_pointer
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // about what the return value is when __n == 0.
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (__n > this->_M_max_size())
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       void
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       deallocate(_Tp* __p, size_type __t)
 145              		.loc 12 120 7 view .LVU30
 146              	.LBE500:
 147              	.LBE499:
 148              	.LBE498:
 149              	.LBE497:
 150              	.LBE496:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 151              		.loc 10 336 35 is_stmt 0 view .LVU31
 152 0008 6169     		ldr	r1, [r4, #20]
 153              	.LBB506:
 154              	.LBB505:
 155              	.LBB504:
 156              	.LBB503:
 157              	.LBB502:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 39


 158              	.LBB501:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    ::operator delete(__p,
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # if __cpp_sized_deallocation
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      __t * sizeof(_Tp),
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # endif
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return;
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	::operator delete(__p
 159              		.loc 12 133 19 view .LVU32
 160 000a 091A     		subs	r1, r1, r0
 161 000c FFF7FEFF 		bl	_ZdlPvj
 162              	.LVL4:
 163              	.L4:
 164              		.loc 12 133 19 view .LVU33
 165              	.LBE501:
 166              	.LBE502:
 167              	.LBE503:
 168              	.LBE504:
 169              	.LBE505:
 170              	.LBE506:
 171              	.LBB507:
 172              	.LBI507:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 173              		.loc 10 128 14 is_stmt 1 view .LVU34
 174              	.LBB508:
 175              	.LBI508:
 176              		.file 13 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\allocator.
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Allocators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 40


  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Copyright (c) 1996-1997
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * that both that copyright notice and this permission notice appear
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * representations about the suitability of this software for any
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /** @file bits/allocator.h
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  This is an internal header file, included by other library headers.
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #ifndef _ALLOCATOR_H
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define _ALLOCATOR_H 1
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/memoryfwd.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <type_traits>
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** {
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @addtogroup allocators
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @{
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /// allocator<void> specialization.
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator<void>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void        value_type;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t      size_type;
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t   difference_type;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void*       pointer;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const void* const_pointer;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #else
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() = default;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 41


  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	constexpr
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Up>&) { }
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // ! C++20
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L && __cplusplus <= 201703L
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up, typename... _Args>
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	destroy(_Up* __p)
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ __p->~_Up(); }
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // C++11 to C++17
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     };
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  for further details.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<typename _Tp>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator : public __allocator_base<_Tp>
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp        value_type;
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t     size_type;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t  difference_type;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp*       pointer;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp* const_pointer;
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp&       reference;
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp& const_reference;
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 42


 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // Avoid implicit deprecation.
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator& operator=(const allocator&) = default;
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	_GLIBCXX20_CONSTEXPR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cpp_constexpr_dynamic_alloc
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       constexpr
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 177              		.loc 13 162 7 view .LVU35
 178              	.LBB509:
 179              	.LBI509:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 180              		.loc 12 89 7 view .LVU36
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 181              		.loc 12 89 7 is_stmt 0 view .LVU37
 182              	.LBE509:
 183              	.LBE508:
 184              	.LBE507:
 185              	.LBE495:
 186              	.LBE494:
 187              	.LBE491:
 188              	.LBB510:
 189              	.LBI510:
 190              		.loc 10 678 7 is_stmt 1 view .LVU38
 191              	.LBB511:
 192              	.LBI511:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 193              		.loc 10 276 7 view .LVU39
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 194              		.loc 10 276 7 is_stmt 0 view .LVU40
 195              	.LBE511:
 196              	.LBB512:
 197              	.LBI512:
 198              		.loc 11 735 5 is_stmt 1 view .LVU41
 199              		.loc 11 735 5 is_stmt 0 view .LVU42
 200              	.LBE512:
 201              	.LBB513:
 202              	.LBI513:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 203              		.loc 10 333 7 is_stmt 1 view .LVU43
 204              	.LBB514:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 43


 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 205              		.loc 10 335 15 is_stmt 0 view .LVU44
 206 0010 2068     		ldr	r0, [r4]
 207              	.LVL5:
 208              	.LBB515:
 209              	.LBI515:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 210              		.loc 10 350 7 is_stmt 1 view .LVU45
 211              	.LBB516:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 212              		.loc 10 353 2 is_stmt 0 view .LVU46
 213 0012 18B1     		cbz	r0, .L5
 214              	.LVL6:
 215              	.LBB517:
 216              	.LBI517:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 217              		.loc 11 491 7 is_stmt 1 view .LVU47
 218              	.LBB518:
 219              	.LBB519:
 220              	.LBI519:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 221              		.loc 12 120 7 view .LVU48
 222              	.LBE519:
 223              	.LBE518:
 224              	.LBE517:
 225              	.LBE516:
 226              	.LBE515:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 227              		.loc 10 336 35 is_stmt 0 view .LVU49
 228 0014 A168     		ldr	r1, [r4, #8]
 229              	.LBB525:
 230              	.LBB524:
 231              	.LBB523:
 232              	.LBB522:
 233              	.LBB521:
 234              	.LBB520:
 235              		.loc 12 133 19 view .LVU50
 236 0016 091A     		subs	r1, r1, r0
 237 0018 FFF7FEFF 		bl	_ZdlPvj
 238              	.LVL7:
 239              	.L5:
 240              		.loc 12 133 19 view .LVU51
 241              	.LBE520:
 242              	.LBE521:
 243              	.LBE522:
 244              	.LBE523:
 245              	.LBE524:
 246              	.LBE525:
 247              	.LBB526:
 248              	.LBI526:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 249              		.loc 10 128 14 is_stmt 1 view .LVU52
 250              	.LBB527:
 251              	.LBI527:
 252              		.loc 13 162 7 view .LVU53
 253              	.LBB528:
 254              	.LBI528:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 44


  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 255              		.loc 12 89 7 view .LVU54
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 256              		.loc 12 89 7 is_stmt 0 view .LVU55
 257              	.LBE528:
 258              	.LBE527:
 259              	.LBE526:
 260              	.LBE514:
 261              	.LBE513:
 262              	.LBE510:
 263              		.loc 2 30 21 view .LVU56
 264 001c 2046     		mov	r0, r4
 265 001e 10BD     		pop	{r4, pc}
 266              		.loc 2 30 21 view .LVU57
 267              		.cfi_endproc
 268              	.LFE4708:
 270              		.weak	_ZN5daisy11daisyCommonD1Ev
 271              		.thumb_set _ZN5daisy11daisyCommonD1Ev,_ZN5daisy11daisyCommonD2Ev
 272              		.section	.text.__tcf_2,"ax",%progbits
 273              		.align	1
 274              		.p2align 2,,3
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu fpv5-d16
 280              	__tcf_2:
 281              	.LFB5346:
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286 0000 7047     		bx	lr
 287              		.cfi_endproc
 288              	.LFE5346:
 290 0002 00BF     		.section	.text.__tcf_1,"ax",%progbits
 291              		.align	1
 292              		.p2align 2,,3
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu fpv5-d16
 298              	__tcf_1:
 299              	.LFB5344:
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304 0000 7047     		bx	lr
 305              		.cfi_endproc
 306              	.LFE5344:
 308 0002 00BF     		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 309              		.align	1
 310              		.p2align 2,,3
 311              		.global	_Z13AudioCallbackPKPKfPPfj
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 45


 315              		.fpu fpv5-d16
 317              	_Z13AudioCallbackPKPKfPPfj:
 318              	.LVL8:
 319              	.LFB4710:
  12:helloTest.cpp **** OnePole filter[2];
  13:helloTest.cpp **** Wavefolder folder[2];
  14:helloTest.cpp **** 
  15:helloTest.cpp **** enum
  16:helloTest.cpp **** {
  17:helloTest.cpp **** 	freq_1 = 1, fold_gain_1, filt_1, fold_off_1, freq_2, fold_gain_2, filt_2, fold_off_2
  18:helloTest.cpp **** };
  19:helloTest.cpp **** 
  20:helloTest.cpp **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
  21:helloTest.cpp **** {
 320              		.loc 1 21 1 is_stmt 1 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
  22:helloTest.cpp **** 	float signal[2];
 324              		.loc 1 22 2 view .LVU59
  23:helloTest.cpp **** 
  24:helloTest.cpp **** 	for (size_t i = 0; i < size; i++)
 325              		.loc 1 24 2 view .LVU60
 326              	.LBB534:
 327              		.loc 1 24 23 view .LVU61
 328 0000 002A     		cmp	r2, #0
 329 0002 54D0     		beq	.L33
 330              	.LBE534:
  21:helloTest.cpp **** 	float signal[2];
 331              		.loc 1 21 1 is_stmt 0 view .LVU62
 332 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 333              		.cfi_def_cfa_offset 24
 334              		.cfi_offset 3, -24
 335              		.cfi_offset 4, -20
 336              		.cfi_offset 5, -16
 337              		.cfi_offset 6, -12
 338              		.cfi_offset 7, -8
 339              		.cfi_offset 14, -4
 340 0006 0F46     		mov	r7, r1
 341 0008 1646     		mov	r6, r2
 342              	.LBB545:
 343              		.loc 1 24 14 view .LVU63
 344 000a 0025     		movs	r5, #0
 345 000c 284C     		ldr	r4, .L36
 346              	.LBE545:
  21:helloTest.cpp **** 	float signal[2];
 347              		.loc 1 21 1 view .LVU64
 348 000e 2DED028B 		vpush.64	{d8}
 349              		.cfi_def_cfa_offset 32
 350              		.cfi_offset 80, -32
 351              		.cfi_offset 81, -28
 352              	.LVL9:
 353              	.L19:
 354              	.LBB546:
  25:helloTest.cpp **** 	{
  26:helloTest.cpp **** 		signal[0] = osc[0].Process();
 355              		.loc 1 26 3 is_stmt 1 discriminator 2 view .LVU65
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 46


 356              		.loc 1 26 29 is_stmt 0 discriminator 2 view .LVU66
 357 0012 2848     		ldr	r0, .L36+4
 358 0014 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 359              	.LVL10:
  27:helloTest.cpp **** 		signal[0] = folder[0].Process(signal[0]);
 360              		.loc 1 27 3 is_stmt 1 discriminator 2 view .LVU67
 361              		.loc 1 27 32 is_stmt 0 discriminator 2 view .LVU68
 362 0018 2748     		ldr	r0, .L36+8
 363 001a FFF7FEFF 		bl	_ZN7daisysp10Wavefolder7ProcessEf
 364              	.LVL11:
 365              	.LBB535:
 366              	.LBB536:
 367              		.file 14 "../../DaisyExamples/DaisySP//Source/Filters/onepole.h"
   1:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** /*
   2:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
   4:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** Use of this source code is governed by an MIT-style
   5:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** license that can be found in the LICENSE file or at
   6:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** https://opensource.org/licenses/MIT.
   7:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** */
   8:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
   9:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** #ifndef DSY_ONEPOLE_H
  10:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** #define DSY_ONEPOLE_H
  11:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
  12:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** #include "Utility/dsp.h"
  13:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** #include <cmath>
  14:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** #include <algorithm>
  15:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
  16:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** namespace daisysp
  17:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** {
  18:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** /**         
  19:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     @brief One Pole Lowpass / Highpass Filter
  20:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     @author beserge
  21:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     @date Dec 2023 
  22:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     Ported from pichenettes/stmlib/dsp/filter.h \n 
  23:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     \n to an independent module. \n
  24:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     Original code written by Emilie Gillet. \n
  25:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** */
  26:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** class OnePole
  27:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** {
  28:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****   public:
  29:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     OnePole() {}
  30:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     ~OnePole() {}
  31:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
  32:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     /**
  33:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****      * @brief Operational modes of the filter
  34:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****      * - LOW_PASS = cuts out high frequency sound, lets low frequency sound pass through
  35:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****      * - HIGH_PASS = cuts out low frequency sound, lets high frequency sound pass through
  36:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****      */
  37:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     enum FilterMode
  38:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     {
  39:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         FILTER_MODE_LOW_PASS,
  40:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         FILTER_MODE_HIGH_PASS
  41:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     };
  42:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
  43:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     /** Initializes the module */
  44:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     void Init()
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 47


  45:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     {
  46:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         Reset();
  47:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         mode_ = FILTER_MODE_LOW_PASS;
  48:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     }
  49:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
  50:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     /** Reset the module to its default state */
  51:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     inline void Reset() { state_ = 0.0f; }
  52:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
  53:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     /** Set the filter cutoff frequency
  54:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     *   \param freq Cutoff frequency. Valid range from 0 to .497f
  55:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     */
  56:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     inline void SetFrequency(float freq)
  57:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     {
  58:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         // Clip coefficient to about 100.
  59:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         freq = freq < 0.497f ? freq : 0.497f;
  60:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
  61:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         g_  = tanf(PI_F * freq);
  62:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
  63:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     }
  64:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
  65:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     /** Set the filter mode
  66:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     *   \param mode Filter mode. Can be lowpass or highpass
  67:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     */
  68:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     inline void SetFilterMode(FilterMode mode) { mode_ = mode; }
  69:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
  70:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     /** Process audio through the filter
  71:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     *   \param in The next sample to be processed
  72:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     */
  73:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     inline float Process(float in)
  74:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     {
  75:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         float lp;
  76:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         lp     = (g_ * in + state_) * gi_;
 368              		.loc 14 76 19 discriminator 2 view .LVU69
 369 001e D4ED007A 		vldr.32	s15, [r4]
 370              	.LVL12:
 371              		.loc 14 76 19 discriminator 2 view .LVU70
 372              	.LBE536:
 373              	.LBE535:
  28:helloTest.cpp **** 		signal[0] = filter[0].Process(signal[0]);
 374              		.loc 1 28 3 is_stmt 1 discriminator 2 view .LVU71
 375              	.LBB539:
 376              	.LBI535:
  73:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     {
 377              		.loc 14 73 18 discriminator 2 view .LVU72
 378              	.LBB537:
  75:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         lp     = (g_ * in + state_) * gi_;
 379              		.loc 14 75 9 discriminator 2 view .LVU73
 380              		.loc 14 76 9 discriminator 2 view .LVU74
 381              		.loc 14 76 27 is_stmt 0 discriminator 2 view .LVU75
 382 0022 94ED028A 		vldr.32	s16, [r4, #8]
 383              		.loc 14 76 16 discriminator 2 view .LVU76
 384 0026 D4ED016A 		vldr.32	s13, [r4, #4]
 385              		.loc 14 76 27 discriminator 2 view .LVU77
 386 002a A0EE278A 		vfma.f32	s16, s0, s15
  77:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
  78:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
  79:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         switch(mode_)
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 48


 387              		.loc 14 79 16 discriminator 2 view .LVU78
 388 002e 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 389              	.LBE537:
 390              	.LBE539:
  29:helloTest.cpp **** 
  30:helloTest.cpp **** 		signal[1] = osc[1].Process();
 391              		.loc 1 30 29 discriminator 2 view .LVU79
 392 0030 2248     		ldr	r0, .L36+12
 393              	.LBB540:
 394              	.LBB538:
 395              		.loc 14 79 9 discriminator 2 view .LVU80
 396 0032 9FED237A 		vldr.32	s14, .L36+16
  76:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 397              		.loc 14 76 16 discriminator 2 view .LVU81
 398 0036 28EE268A 		vmul.f32	s16, s16, s13
 399              	.LVL13:
  77:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 400              		.loc 14 77 9 is_stmt 1 discriminator 2 view .LVU82
  77:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 401              		.loc 14 77 27 is_stmt 0 discriminator 2 view .LVU83
 402 003a 30EE480A 		vsub.f32	s0, s0, s16
 403              	.LVL14:
  77:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 404              		.loc 14 77 33 discriminator 2 view .LVU84
 405 003e F0EE486A 		vmov.f32	s13, s16
 406 0042 E7EE806A 		vfma.f32	s13, s15, s0
  77:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 407              		.loc 14 77 16 discriminator 2 view .LVU85
 408 0046 C4ED026A 		vstr.32	s13, [r4, #8]
 409              		.loc 14 79 9 is_stmt 1 discriminator 2 view .LVU86
 410 004a 13B1     		cbz	r3, .L17
 411              		.loc 14 79 9 is_stmt 0 view .LVU87
 412 004c 012B     		cmp	r3, #1
 413 004e 00FE078A 		vseleq.f32	s16, s0, s14
 414              	.LVL15:
 415              	.L17:
 416              		.loc 14 79 9 view .LVU88
 417              	.LBE538:
 418              	.LBE540:
 419              		.loc 1 30 3 is_stmt 1 view .LVU89
 420              		.loc 1 30 29 is_stmt 0 view .LVU90
 421 0052 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 422              	.LVL16:
  31:helloTest.cpp **** 		signal[1] = folder[1].Process(signal[1]);
 423              		.loc 1 31 3 is_stmt 1 view .LVU91
 424              		.loc 1 31 32 is_stmt 0 view .LVU92
 425 0056 1B48     		ldr	r0, .L36+20
 426 0058 FFF7FEFF 		bl	_ZN7daisysp10Wavefolder7ProcessEf
 427              	.LVL17:
 428              	.LBB541:
 429              	.LBB542:
  76:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 430              		.loc 14 76 19 view .LVU93
 431 005c 94ED047A 		vldr.32	s14, [r4, #16]
  76:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 432              		.loc 14 76 27 view .LVU94
 433 0060 D4ED067A 		vldr.32	s15, [r4, #24]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 49


 434              	.LVL18:
  76:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 435              		.loc 14 76 27 view .LVU95
 436              	.LBE542:
 437              	.LBE541:
  32:helloTest.cpp **** 		signal[1] = filter[1].Process(signal[1]);
 438              		.loc 1 32 3 is_stmt 1 view .LVU96
 439              	.LBB544:
 440              	.LBI541:
  73:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     {
 441              		.loc 14 73 18 view .LVU97
 442              	.LBB543:
  75:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         lp     = (g_ * in + state_) * gi_;
 443              		.loc 14 75 9 view .LVU98
  76:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 444              		.loc 14 76 9 view .LVU99
  76:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 445              		.loc 14 76 16 is_stmt 0 view .LVU100
 446 0064 94ED056A 		vldr.32	s12, [r4, #20]
  76:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 447              		.loc 14 76 27 view .LVU101
 448 0068 E0EE077A 		vfma.f32	s15, s0, s14
 449              		.loc 14 79 16 view .LVU102
 450 006c 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 451              		.loc 14 79 9 view .LVU103
 452 006e DFED146A 		vldr.32	s13, .L36+16
  76:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 453              		.loc 14 76 16 view .LVU104
 454 0072 67EE867A 		vmul.f32	s15, s15, s12
 455              	.LVL19:
  77:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 456              		.loc 14 77 9 is_stmt 1 view .LVU105
  77:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 457              		.loc 14 77 27 is_stmt 0 view .LVU106
 458 0076 30EE670A 		vsub.f32	s0, s0, s15
 459              	.LVL20:
  77:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 460              		.loc 14 77 33 view .LVU107
 461 007a B0EE676A 		vmov.f32	s12, s15
 462 007e A7EE006A 		vfma.f32	s12, s14, s0
  77:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 463              		.loc 14 77 16 view .LVU108
 464 0082 84ED066A 		vstr.32	s12, [r4, #24]
 465              		.loc 14 79 9 is_stmt 1 view .LVU109
 466 0086 13B1     		cbz	r3, .L18
 467 0088 012B     		cmp	r3, #1
 468 008a 40FE267A 		vseleq.f32	s15, s0, s13
 469              	.LVL21:
 470              	.L18:
 471              		.loc 14 79 9 is_stmt 0 view .LVU110
 472              	.LBE543:
 473              	.LBE544:
  33:helloTest.cpp **** 
  34:helloTest.cpp **** 		out[0][i] = signal[0];
 474              		.loc 1 34 3 is_stmt 1 view .LVU111
  35:helloTest.cpp **** 		out[1][i] = signal[1];
 475              		.loc 1 35 13 is_stmt 0 view .LVU112
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 50


 476 008e D7E90003 		ldrd	r0, r3, [r7]
  34:helloTest.cpp **** 		out[1][i] = signal[1];
 477              		.loc 1 34 13 view .LVU113
 478 0092 00EB8500 		add	r0, r0, r5, lsl #2
 479              		.loc 1 35 13 view .LVU114
 480 0096 03EB8503 		add	r3, r3, r5, lsl #2
  24:helloTest.cpp **** 	{
 481              		.loc 1 24 2 view .LVU115
 482 009a 0135     		adds	r5, r5, #1
 483              	.LVL22:
  34:helloTest.cpp **** 		out[1][i] = signal[1];
 484              		.loc 1 34 13 view .LVU116
 485 009c 80ED008A 		vstr.32	s16, [r0]
 486              		.loc 1 35 3 is_stmt 1 view .LVU117
  24:helloTest.cpp **** 	{
 487              		.loc 1 24 23 is_stmt 0 view .LVU118
 488 00a0 AE42     		cmp	r6, r5
 489              		.loc 1 35 13 view .LVU119
 490 00a2 C3ED007A 		vstr.32	s15, [r3]
  24:helloTest.cpp **** 	{
 491              		.loc 1 24 2 is_stmt 1 view .LVU120
 492              	.LVL23:
  24:helloTest.cpp **** 	{
 493              		.loc 1 24 23 view .LVU121
 494 00a6 B4D1     		bne	.L19
 495              	.LBE546:
  36:helloTest.cpp **** 	}
  37:helloTest.cpp **** }
 496              		.loc 1 37 1 is_stmt 0 view .LVU122
 497 00a8 BDEC028B 		vldm	sp!, {d8}
 498              		.cfi_restore 80
 499              		.cfi_restore 81
 500              		.cfi_def_cfa_offset 24
 501              	.LVL24:
 502              		.loc 1 37 1 view .LVU123
 503 00ac F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 504              	.LVL25:
 505              	.L33:
 506              		.cfi_def_cfa_offset 0
 507              		.cfi_restore 3
 508              		.cfi_restore 4
 509              		.cfi_restore 5
 510              		.cfi_restore 6
 511              		.cfi_restore 7
 512              		.cfi_restore 14
 513              		.loc 1 37 1 view .LVU124
 514 00ae 7047     		bx	lr
 515              	.L37:
 516              		.align	2
 517              	.L36:
 518 00b0 00000000 		.word	.LANCHOR2
 519 00b4 00000000 		.word	.LANCHOR0
 520 00b8 00000000 		.word	.LANCHOR1
 521 00bc 2C000000 		.word	.LANCHOR0+44
 522 00c0 00000000 		.word	0
 523 00c4 08000000 		.word	.LANCHOR1+8
 524              		.cfi_endproc
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 51


 525              	.LFE4710:
 527              		.section	.text.startup.main,"ax",%progbits
 528              		.align	1
 529              		.p2align 2,,3
 530              		.global	main
 531              		.syntax unified
 532              		.thumb
 533              		.thumb_func
 534              		.fpu fpv5-d16
 536              	main:
 537              	.LFB4711:
  38:helloTest.cpp **** 
  39:helloTest.cpp **** int main(void)
  40:helloTest.cpp **** {
 538              		.loc 1 40 1 is_stmt 1 view -0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
  41:helloTest.cpp **** 	board.Init();
 542              		.loc 1 41 2 view .LVU126
  40:helloTest.cpp **** 	board.Init();
 543              		.loc 1 40 1 is_stmt 0 view .LVU127
 544 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 545              		.cfi_def_cfa_offset 24
 546              		.cfi_offset 3, -24
 547              		.cfi_offset 4, -20
 548              		.cfi_offset 5, -16
 549              		.cfi_offset 6, -12
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552              		.loc 1 41 12 view .LVU128
 553 0002 0021     		movs	r1, #0
 554 0004 CC48     		ldr	r0, .L57
 555              	.LBB616:
 556              	.LBB617:
 557              		.file 15 "../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h"
   1:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** /*
   2:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** 
   4:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** Use of this source code is governed by an MIT-style
   5:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** license that can be found in the LICENSE file or at
   6:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** https://opensource.org/licenses/MIT.
   7:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** */
   8:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** 
   9:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** #pragma once
  10:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
  11:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
  12:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** #include <stdint.h>
  13:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
  14:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** #ifdef __cplusplus
  15:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** 
  16:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** namespace daisysp
  17:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** {
  18:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  19:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** */
  20:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** class Oscillator
  21:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** {
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 52


  22:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****   public:
  23:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     Oscillator() {}
  24:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
  25:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  26:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     */
  27:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     enum
  28:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     {
  29:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SIN,
  30:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         WAVE_TRI,
  31:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SAW,
  32:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  33:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  34:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  35:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  36:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  37:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         WAVE_LAST,
  38:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     };
  39:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** 
  40:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** 
  41:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  42:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** 
  43:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  44:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** 
  45:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         Defaults:
  46:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  47:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  48:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  49:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     */
  50:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  51:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     {
  52:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
 558              		.loc 15 52 20 view .LVU129
 559 0006 CD4C     		ldr	r4, .L57+4
  53:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  54:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  55:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 560              		.loc 15 55 20 view .LVU130
 561 0008 4FF07C55 		mov	r5, #1056964608
  56:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
  57:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 562              		.loc 15 57 20 view .LVU131
 563 000c 0026     		movs	r6, #0
  58:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  59:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  60:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
  61:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 564              		.loc 15 61 20 view .LVU132
 565 000e 40F20117 		movw	r7, #257
 566              	.LBE617:
 567              	.LBE616:
  40:helloTest.cpp **** 	board.Init();
 568              		.loc 1 40 1 view .LVU133
 569 0012 2DED088B 		vpush.64	{d8, d9, d10, d11}
 570              		.cfi_def_cfa_offset 56
 571              		.cfi_offset 80, -56
 572              		.cfi_offset 81, -52
 573              		.cfi_offset 82, -48
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 53


 574              		.cfi_offset 83, -44
 575              		.cfi_offset 84, -40
 576              		.cfi_offset 85, -36
 577              		.cfi_offset 86, -32
 578              		.cfi_offset 87, -28
 579              		.loc 1 41 12 view .LVU134
 580 0016 FFF7FEFF 		bl	_ZN5daisy11daisyCommon4InitEb
 581              	.LVL26:
  42:helloTest.cpp **** 	board.seed.SetAudioBlockSize(4); // number of samples handled per callback
 582              		.loc 1 42 2 is_stmt 1 view .LVU135
 583              		.loc 1 42 30 is_stmt 0 view .LVU136
 584 001a 0421     		movs	r1, #4
 585 001c C848     		ldr	r0, .L57+8
 586              	.LBB623:
 587              	.LBB618:
  53:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 588              		.loc 15 53 27 view .LVU137
 589 001e F7EE009A 		vmov.f32	s19, #1.0e+0
 590              	.LBE618:
 591              	.LBE623:
 592              		.loc 1 42 30 view .LVU138
 593 0022 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 594              	.LVL27:
  43:helloTest.cpp **** 	board.seed.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 595              		.loc 1 43 2 is_stmt 1 view .LVU139
 596              		.loc 1 43 31 is_stmt 0 view .LVU140
 597 0026 0321     		movs	r1, #3
 598 0028 C548     		ldr	r0, .L57+8
 599 002a FFF7FEFF 		bl	_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 600              	.LVL28:
  44:helloTest.cpp **** 	board.seed.StartAudio(AudioCallback);
 601              		.loc 1 44 2 is_stmt 1 view .LVU141
 602              		.loc 1 44 23 is_stmt 0 view .LVU142
 603 002e C549     		ldr	r1, .L57+12
 604 0030 C348     		ldr	r0, .L57+8
 605 0032 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 606              	.LVL29:
  45:helloTest.cpp **** 
  46:helloTest.cpp **** 	//board.seed.StartLog();
  47:helloTest.cpp **** 	//board.seed.PrintLine("hello world");
  48:helloTest.cpp **** 	board.add_knob(freq_1, board.knob_2);
 607              		.loc 1 48 2 is_stmt 1 view .LVU143
 608              		.loc 1 48 16 is_stmt 0 view .LVU144
 609 0036 0122     		movs	r2, #1
 610 0038 BF48     		ldr	r0, .L57
 611 003a 1146     		mov	r1, r2
 612              	.LBB624:
 613              	.LBB619:
  54:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 614              		.loc 15 54 20 view .LVU145
 615 003c 9FEDC29A 		vldr.32	s18, .L57+16
 616              	.LBE619:
 617              	.LBE624:
 618              		.loc 1 48 16 view .LVU146
 619 0040 FFF7FEFF 		bl	_ZN5daisy11daisyCommon8add_knobEii
 620              	.LVL30:
  49:helloTest.cpp **** 	board.add_knob(freq_2, board.knob_7);
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 54


 621              		.loc 1 49 2 is_stmt 1 view .LVU147
 622              		.loc 1 49 16 is_stmt 0 view .LVU148
 623 0044 0622     		movs	r2, #6
 624 0046 0521     		movs	r1, #5
 625 0048 BB48     		ldr	r0, .L57
 626 004a FFF7FEFF 		bl	_ZN5daisy11daisyCommon8add_knobEii
 627              	.LVL31:
  50:helloTest.cpp **** 	board.add_knob(fold_off_1, board.knob_4);
 628              		.loc 1 50 2 is_stmt 1 view .LVU149
 629              		.loc 1 50 16 is_stmt 0 view .LVU150
 630 004e 0322     		movs	r2, #3
 631 0050 0421     		movs	r1, #4
 632 0052 B948     		ldr	r0, .L57
 633 0054 FFF7FEFF 		bl	_ZN5daisy11daisyCommon8add_knobEii
 634              	.LVL32:
  51:helloTest.cpp **** 	board.add_knob(fold_off_2, board.knob_5);
 635              		.loc 1 51 2 is_stmt 1 view .LVU151
 636              		.loc 1 51 16 is_stmt 0 view .LVU152
 637 0058 0422     		movs	r2, #4
 638 005a 0821     		movs	r1, #8
 639 005c B648     		ldr	r0, .L57
 640 005e FFF7FEFF 		bl	_ZN5daisy11daisyCommon8add_knobEii
 641              	.LVL33:
  52:helloTest.cpp **** 	board.add_knob(filt_1, board.knob_1);
 642              		.loc 1 52 2 is_stmt 1 view .LVU153
 643              		.loc 1 52 16 is_stmt 0 view .LVU154
 644 0062 0022     		movs	r2, #0
 645 0064 0321     		movs	r1, #3
 646 0066 B448     		ldr	r0, .L57
 647 0068 FFF7FEFF 		bl	_ZN5daisy11daisyCommon8add_knobEii
 648              	.LVL34:
  53:helloTest.cpp **** 	board.add_knob(filt_2, board.knob_6);
 649              		.loc 1 53 2 is_stmt 1 view .LVU155
 650              		.loc 1 53 16 is_stmt 0 view .LVU156
 651 006c 0522     		movs	r2, #5
 652 006e 0721     		movs	r1, #7
 653 0070 B148     		ldr	r0, .L57
 654 0072 FFF7FEFF 		bl	_ZN5daisy11daisyCommon8add_knobEii
 655              	.LVL35:
  54:helloTest.cpp **** 	board.add_knob(fold_gain_1, board.knob_3);
 656              		.loc 1 54 2 is_stmt 1 view .LVU157
 657              		.loc 1 54 16 is_stmt 0 view .LVU158
 658 0076 0222     		movs	r2, #2
 659 0078 AF48     		ldr	r0, .L57
 660 007a 1146     		mov	r1, r2
 661              	.LBB625:
 662              	.LBB626:
  62:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
  63:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** 
  64:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** 
  65:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  66:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     */
  67:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  68:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     {
  69:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         freq_      = f;
 663              		.loc 15 69 20 view .LVU159
 664 007c DFEDB38A 		vldr.32	s17, .L57+20
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 55


 665              	.LBE626:
 666              	.LBE625:
 667              		.loc 1 54 16 view .LVU160
 668 0080 FFF7FEFF 		bl	_ZN5daisy11daisyCommon8add_knobEii
 669              	.LVL36:
  55:helloTest.cpp **** 	board.add_knob(fold_gain_2, board.knob_8);
 670              		.loc 1 55 2 is_stmt 1 view .LVU161
 671              		.loc 1 55 16 is_stmt 0 view .LVU162
 672 0084 0722     		movs	r2, #7
 673 0086 0621     		movs	r1, #6
 674 0088 AB48     		ldr	r0, .L57
 675 008a FFF7FEFF 		bl	_ZN5daisy11daisyCommon8add_knobEii
 676              	.LVL37:
  56:helloTest.cpp **** 
  57:helloTest.cpp **** 	//board.print_knob();
  58:helloTest.cpp **** 	
  59:helloTest.cpp **** 	float samplerate = board.seed.AudioSampleRate();
 677              		.loc 1 59 2 is_stmt 1 view .LVU163
 678              		.loc 1 59 47 is_stmt 0 view .LVU164
 679 008e AC48     		ldr	r0, .L57+8
 680 0090 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 681              	.LVL38:
 682 0094 B0EE408A 		vmov.f32	s16, s0
 683              	.LVL39:
  60:helloTest.cpp **** 	osc[0].Init(samplerate);
 684              		.loc 1 60 2 is_stmt 1 view .LVU165
 685              	.LBB631:
 686              	.LBI616:
  50:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     {
 687              		.loc 15 50 10 view .LVU166
 688              	.LBB620:
  52:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 689              		.loc 15 52 9 view .LVU167
  58:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 690              		.loc 15 58 34 is_stmt 0 view .LVU168
 691 0098 2046     		mov	r0, r4
 692 009a B0EE490A 		vmov.f32	s0, s18
 693              	.LVL40:
  55:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 694              		.loc 15 55 20 view .LVU169
 695 009e 6560     		str	r5, [r4, #4]	@ float
  53:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 696              		.loc 15 53 27 view .LVU170
 697 00a0 89EE88AA 		vdiv.f32	s20, s19, s16
  56:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 698              		.loc 15 56 20 view .LVU171
 699 00a4 E560     		str	r5, [r4, #12]	@ float
  57:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 700              		.loc 15 57 20 view .LVU172
 701 00a6 A661     		str	r6, [r4, #24]	@ float
  54:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 702              		.loc 15 54 20 view .LVU173
 703 00a8 84ED029A 		vstr.32	s18, [r4, #8]
  52:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 704              		.loc 15 52 20 view .LVU174
 705 00ac 84ED048A 		vstr.32	s16, [r4, #16]
  53:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 56


 706              		.loc 15 53 9 is_stmt 1 view .LVU175
  53:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 707              		.loc 15 53 20 is_stmt 0 view .LVU176
 708 00b0 84ED05AA 		vstr.32	s20, [r4, #20]
  54:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 709              		.loc 15 54 9 is_stmt 1 view .LVU177
  55:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 710              		.loc 15 55 9 view .LVU178
  56:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 711              		.loc 15 56 9 view .LVU179
  57:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 712              		.loc 15 57 9 view .LVU180
  58:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 713              		.loc 15 58 9 view .LVU181
  58:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 714              		.loc 15 58 34 is_stmt 0 view .LVU182
 715 00b4 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 716              	.LVL41:
 717 00b8 F0EE407A 		vmov.f32	s15, s0
 718              	.LBE620:
 719              	.LBE631:
 720              	.LBB632:
 721              	.LBB633:
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
  71:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
  72:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** 
  73:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h **** 
  74:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  75:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     */
  76:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  77:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  78:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     */
  79:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  80:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     {
  81:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 722              		.loc 15 81 19 view .LVU183
 723 00bc 0523     		movs	r3, #5
 724              	.LBE633:
 725              	.LBE632:
 726              	.LBB636:
 727              	.LBB627:
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 728              		.loc 15 70 34 view .LVU184
 729 00be 2046     		mov	r0, r4
 730 00c0 B0EE680A 		vmov.f32	s0, s17
 731              	.LBE627:
 732              	.LBE636:
 733              	.LBB637:
 734              	.LBB634:
 735              		.loc 15 81 19 view .LVU185
 736 00c4 2370     		strb	r3, [r4]
 737              	.LBE634:
 738              	.LBE637:
 739              	.LBB638:
 740              	.LBB621:
  58:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 741              		.loc 15 58 20 view .LVU186
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 57


 742 00c6 C4ED077A 		vstr.32	s15, [r4, #28]
  59:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
 743              		.loc 15 59 9 is_stmt 1 view .LVU187
  60:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 744              		.loc 15 60 9 view .LVU188
  61:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 745              		.loc 15 61 9 view .LVU189
 746              	.LVL42:
  61:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 747              		.loc 15 61 9 is_stmt 0 view .LVU190
 748              	.LBE621:
 749              	.LBE638:
  61:helloTest.cpp **** 	osc[0].SetWaveform(osc[0].WAVE_POLYBLEP_TRI);
 750              		.loc 1 61 2 is_stmt 1 view .LVU191
 751              	.LBB639:
 752              	.LBI632:
  79:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     {
 753              		.loc 15 79 17 view .LVU192
 754              	.LBB635:
 755              		.loc 15 81 9 view .LVU193
 756              		.loc 15 81 9 is_stmt 0 view .LVU194
 757              	.LBE635:
 758              	.LBE639:
  62:helloTest.cpp **** 	osc[0].SetAmp(1.0f);
 759              		.loc 1 62 2 is_stmt 1 view .LVU195
 760              	.LBB640:
 761              	.LBI640:
  76:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 762              		.loc 15 76 17 view .LVU196
 763              	.LBB641:
  76:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 764              		.loc 15 76 41 view .LVU197
  76:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 765              		.loc 15 76 41 is_stmt 0 view .LVU198
 766              	.LBE641:
 767              	.LBE640:
  63:helloTest.cpp **** 	osc[0].SetFreq(1000);
 768              		.loc 1 63 2 is_stmt 1 view .LVU199
 769              	.LBB643:
 770              	.LBI625:
  67:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     {
 771              		.loc 15 67 17 view .LVU200
 772              	.LBB628:
  69:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 773              		.loc 15 69 9 view .LVU201
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 774              		.loc 15 70 9 view .LVU202
 775              	.LBE628:
 776              	.LBE643:
 777              	.LBB644:
 778              	.LBB622:
  61:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 779              		.loc 15 61 20 is_stmt 0 view .LVU203
 780 00ca 2785     		strh	r7, [r4, #40]	@ movhi
 781              	.LBE622:
 782              	.LBE644:
 783              	.LBB645:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 58


 784              	.LBB642:
  76:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 785              		.loc 15 76 46 view .LVU204
 786 00cc C4ED019A 		vstr.32	s19, [r4, #4]
 787              	.LBE642:
 788              	.LBE645:
 789              	.LBB646:
 790              	.LBB629:
  69:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 791              		.loc 15 69 20 view .LVU205
 792 00d0 C4ED028A 		vstr.32	s17, [r4, #8]
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 793              		.loc 15 70 34 view .LVU206
 794 00d4 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 795              	.LVL43:
 796 00d8 F0EE407A 		vmov.f32	s15, s0
 797              	.LBE629:
 798              	.LBE646:
 799              	.LBB647:
 800              	.LBB648:
  58:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 801              		.loc 15 58 34 view .LVU207
 802 00dc 04F12C00 		add	r0, r4, #44
 803 00e0 B0EE490A 		vmov.f32	s0, s18
  55:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 804              		.loc 15 55 20 view .LVU208
 805 00e4 2563     		str	r5, [r4, #48]	@ float
  56:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 806              		.loc 15 56 20 view .LVU209
 807 00e6 A563     		str	r5, [r4, #56]	@ float
 808              	.LBE648:
 809              	.LBE647:
 810              	.LBB652:
 811              	.LBB630:
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 812              		.loc 15 70 20 view .LVU210
 813 00e8 C4ED077A 		vstr.32	s15, [r4, #28]
 814              	.LVL44:
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 815              		.loc 15 70 20 view .LVU211
 816              	.LBE630:
 817              	.LBE652:
  64:helloTest.cpp **** 
  65:helloTest.cpp **** 	osc[1].Init(samplerate);
 818              		.loc 1 65 2 is_stmt 1 view .LVU212
 819              	.LBB653:
 820              	.LBI647:
  50:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     {
 821              		.loc 15 50 10 view .LVU213
 822              	.LBB649:
  52:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 823              		.loc 15 52 9 view .LVU214
  53:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 824              		.loc 15 53 9 view .LVU215
  57:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 825              		.loc 15 57 20 is_stmt 0 view .LVU216
 826 00ec 6664     		str	r6, [r4, #68]	@ float
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 59


  52:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 827              		.loc 15 52 20 view .LVU217
 828 00ee 84ED0F8A 		vstr.32	s16, [r4, #60]
  53:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 829              		.loc 15 53 20 view .LVU218
 830 00f2 84ED10AA 		vstr.32	s20, [r4, #64]
  54:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 831              		.loc 15 54 9 is_stmt 1 view .LVU219
  54:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 832              		.loc 15 54 20 is_stmt 0 view .LVU220
 833 00f6 84ED0D9A 		vstr.32	s18, [r4, #52]
  55:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 834              		.loc 15 55 9 is_stmt 1 view .LVU221
  56:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 835              		.loc 15 56 9 view .LVU222
  57:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 836              		.loc 15 57 9 view .LVU223
  58:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 837              		.loc 15 58 9 view .LVU224
  58:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 838              		.loc 15 58 34 is_stmt 0 view .LVU225
 839 00fa FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 840              	.LVL45:
 841 00fe F0EE407A 		vmov.f32	s15, s0
 842              	.LBE649:
 843              	.LBE653:
 844              	.LBB654:
 845              	.LBB655:
 846              		.loc 15 81 19 view .LVU226
 847 0102 0623     		movs	r3, #6
 848              	.LBE655:
 849              	.LBE654:
 850              	.LBB657:
 851              	.LBB658:
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 852              		.loc 15 70 34 view .LVU227
 853 0104 04F12C00 		add	r0, r4, #44
 854 0108 B0EE680A 		vmov.f32	s0, s17
 855              	.LBE658:
 856              	.LBE657:
 857              	.LBB661:
 858              	.LBB662:
 859              	.LBB663:
 860              	.LBB664:
  51:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 861              		.loc 14 51 34 view .LVU228
 862 010c 904D     		ldr	r5, .L57+24
 863              	.LBE664:
 864              	.LBE663:
 865              	.LBE662:
 866              	.LBE661:
 867              	.LBB672:
 868              	.LBB650:
  58:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 869              		.loc 15 58 20 view .LVU229
 870 010e C4ED127A 		vstr.32	s15, [r4, #72]
  59:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 60


 871              		.loc 15 59 9 is_stmt 1 view .LVU230
  60:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 872              		.loc 15 60 9 view .LVU231
  61:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 873              		.loc 15 61 9 view .LVU232
 874              	.LVL46:
  61:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 875              		.loc 15 61 9 is_stmt 0 view .LVU233
 876              	.LBE650:
 877              	.LBE672:
  66:helloTest.cpp **** 	osc[1].SetWaveform(osc[1].WAVE_POLYBLEP_SAW);
 878              		.loc 1 66 2 is_stmt 1 view .LVU234
 879              	.LBB673:
 880              	.LBI654:
  79:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     {
 881              		.loc 15 79 17 view .LVU235
 882              	.LBB656:
 883              		.loc 15 81 9 view .LVU236
 884              		.loc 15 81 19 is_stmt 0 view .LVU237
 885 0112 84F82C30 		strb	r3, [r4, #44]
 886              	.LVL47:
 887              		.loc 15 81 19 view .LVU238
 888              	.LBE656:
 889              	.LBE673:
  67:helloTest.cpp **** 	osc[1].SetAmp(1.0f);
 890              		.loc 1 67 2 is_stmt 1 view .LVU239
 891              	.LBB674:
 892              	.LBI674:
  76:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 893              		.loc 15 76 17 view .LVU240
 894              	.LBB675:
  76:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 895              		.loc 15 76 41 view .LVU241
 896              	.LBE675:
 897              	.LBE674:
 898              	.LBB677:
 899              	.LBB651:
  61:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 900              		.loc 15 61 20 is_stmt 0 view .LVU242
 901 0116 A4F85470 		strh	r7, [r4, #84]	@ movhi
 902              	.LBE651:
 903              	.LBE677:
 904              	.LBB678:
 905              	.LBB676:
  76:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 906              		.loc 15 76 46 view .LVU243
 907 011a C4ED0C9A 		vstr.32	s19, [r4, #48]
 908              	.LVL48:
  76:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 909              		.loc 15 76 46 view .LVU244
 910              	.LBE676:
 911              	.LBE678:
  68:helloTest.cpp **** 	osc[1].SetFreq(1000);
 912              		.loc 1 68 2 is_stmt 1 view .LVU245
 913              	.LBB679:
 914              	.LBI657:
  67:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     {
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 61


 915              		.loc 15 67 17 view .LVU246
 916              	.LBB659:
  69:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 917              		.loc 15 69 9 view .LVU247
  69:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 918              		.loc 15 69 20 is_stmt 0 view .LVU248
 919 011e C4ED0D8A 		vstr.32	s17, [r4, #52]
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 920              		.loc 15 70 9 is_stmt 1 view .LVU249
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 921              		.loc 15 70 34 is_stmt 0 view .LVU250
 922 0122 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 923              	.LVL49:
 924              	.LBE659:
 925              	.LBE679:
  69:helloTest.cpp **** 
  70:helloTest.cpp **** 	filter[0].Init();
  71:helloTest.cpp **** 	filter[0].SetFilterMode(filter[0].FILTER_MODE_LOW_PASS);
  72:helloTest.cpp **** 
  73:helloTest.cpp **** 	filter[1].Init();
  74:helloTest.cpp **** 	filter[1].SetFilterMode(filter[1].FILTER_MODE_LOW_PASS);
  75:helloTest.cpp **** 
  76:helloTest.cpp **** 	folder[0].Init();
 926              		.loc 1 76 16 view .LVU251
 927 0126 8B48     		ldr	r0, .L57+28
 928              	.LBB680:
 929              	.LBB669:
  47:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     }
 930              		.loc 14 47 15 view .LVU252
 931 0128 0023     		movs	r3, #0
 932              	.LBB667:
 933              	.LBB665:
  51:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 934              		.loc 14 51 34 view .LVU253
 935 012a AE60     		str	r6, [r5, #8]	@ float
 936              	.LBE665:
 937              	.LBE667:
 938              	.LBE669:
 939              	.LBE680:
 940              	.LBB681:
 941              	.LBB682:
 942              	.LBB683:
 943              	.LBB684:
 944 012c AE61     		str	r6, [r5, #24]	@ float
 945 012e 0646     		mov	r6, r0
 946              	.LBE684:
 947              	.LBE683:
 948              	.LBE682:
 949              	.LBE681:
 950              	.LBB689:
 951              	.LBB670:
  47:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     }
 952              		.loc 14 47 15 view .LVU254
 953 0130 2B73     		strb	r3, [r5, #12]
 954              	.LBE670:
 955              	.LBE689:
 956              	.LBB690:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 62


 957              	.LBB687:
 958 0132 2B77     		strb	r3, [r5, #28]
 959              	.LBE687:
 960              	.LBE690:
 961              	.LBB691:
 962              	.LBB660:
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 963              		.loc 15 70 20 view .LVU255
 964 0134 84ED120A 		vstr.32	s0, [r4, #72]
 965              	.LVL50:
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 966              		.loc 15 70 20 view .LVU256
 967              	.LBE660:
 968              	.LBE691:
  70:helloTest.cpp **** 	filter[0].SetFilterMode(filter[0].FILTER_MODE_LOW_PASS);
 969              		.loc 1 70 2 is_stmt 1 view .LVU257
 970              	.LBB692:
 971              	.LBI661:
  44:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     {
 972              		.loc 14 44 10 view .LVU258
 973              	.LBB671:
  46:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         mode_ = FILTER_MODE_LOW_PASS;
 974              		.loc 14 46 9 view .LVU259
 975              	.LBB668:
 976              	.LBI663:
  51:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 977              		.loc 14 51 17 view .LVU260
 978              	.LBB666:
  51:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 979              		.loc 14 51 27 view .LVU261
  51:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 980              		.loc 14 51 27 is_stmt 0 view .LVU262
 981              	.LBE666:
 982              	.LBE668:
  47:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     }
 983              		.loc 14 47 9 is_stmt 1 view .LVU263
  47:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     }
 984              		.loc 14 47 9 is_stmt 0 view .LVU264
 985              	.LBE671:
 986              	.LBE692:
  71:helloTest.cpp **** 
 987              		.loc 1 71 2 is_stmt 1 view .LVU265
  68:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 988              		.loc 14 68 50 view .LVU266
  73:helloTest.cpp **** 	filter[1].SetFilterMode(filter[1].FILTER_MODE_LOW_PASS);
 989              		.loc 1 73 2 view .LVU267
 990              	.LBB693:
 991              	.LBI681:
  44:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     {
 992              		.loc 14 44 10 view .LVU268
 993              	.LBB688:
  46:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         mode_ = FILTER_MODE_LOW_PASS;
 994              		.loc 14 46 9 view .LVU269
 995              	.LBB686:
 996              	.LBI683:
  51:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 997              		.loc 14 51 17 view .LVU270
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 63


 998              	.LBB685:
  51:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 999              		.loc 14 51 27 view .LVU271
  51:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 1000              		.loc 14 51 27 is_stmt 0 view .LVU272
 1001              	.LBE685:
 1002              	.LBE686:
  47:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     }
 1003              		.loc 14 47 9 is_stmt 1 view .LVU273
  47:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     }
 1004              		.loc 14 47 9 is_stmt 0 view .LVU274
 1005              	.LBE688:
 1006              	.LBE693:
  74:helloTest.cpp **** 
 1007              		.loc 1 74 2 is_stmt 1 view .LVU275
  68:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 1008              		.loc 14 68 50 view .LVU276
 1009              		.loc 1 76 2 view .LVU277
 1010              		.loc 1 76 16 is_stmt 0 view .LVU278
 1011 0138 FFF7FEFF 		bl	_ZN7daisysp10Wavefolder4InitEv
 1012              	.LVL51:
  77:helloTest.cpp **** 	folder[1].Init();
 1013              		.loc 1 77 2 is_stmt 1 view .LVU279
 1014              		.loc 1 77 16 is_stmt 0 view .LVU280
 1015 013c 06F10800 		add	r0, r6, #8
 1016 0140 FFF7FEFF 		bl	_ZN7daisysp10Wavefolder4InitEv
 1017              	.LVL52:
 1018              	.L39:
  78:helloTest.cpp **** 
  79:helloTest.cpp **** 	float osc_freq[2], filt_freq[2];
 1019              		.loc 1 79 2 is_stmt 1 view .LVU281
  80:helloTest.cpp **** 	while(1) {
 1020              		.loc 1 80 2 view .LVU282
 1021              	.LBB694:
  81:helloTest.cpp **** 		bool slow_blink = (System::GetNow() & 1023) < 511;
 1022              		.loc 1 81 3 view .LVU283
 1023              		.loc 1 81 36 is_stmt 0 view .LVU284
 1024 0144 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 1025              	.LVL53:
 1026 0148 0146     		mov	r1, r0
 1027              	.LVL54:
  82:helloTest.cpp **** 		board.seed.SetLed(slow_blink);
 1028              		.loc 1 82 3 is_stmt 1 view .LVU285
 1029              	.LBB695:
 1030              	.LBB696:
 1031              		.file 16 "../../DaisyExamples/DaisySP//Source/Utility/dsp.h"
   1:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** /*
   2:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
   4:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** Use of this source code is governed by an MIT-style
   5:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** license that can be found in the LICENSE file or at
   6:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** https://opensource.org/licenses/MIT.
   7:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** */
   8:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
   9:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
  10:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** */
  11:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #pragma once
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 64


  12:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
  13:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #define DSY_CORE_DSP
  14:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #include <cassert>
  15:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #include <cstdint>
  16:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #include <random>
  17:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #include <cmath>
  18:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
  19:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** /** PIs
  20:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** */
  21:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  22:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  23:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  24:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  25:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  26:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  27:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  28:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
  29:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** namespace daisysp
  30:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
  31:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  32:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  33:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
  34:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  35:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  36:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
  37:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** /** efficient floating point min/max
  38:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** c/o stephen mccaul
  39:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** */
  40:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline float fmax(float a, float b)
  41:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
  42:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     float r;
  43:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  44:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  45:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #else
  46:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  47:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  48:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     return r;
  49:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** }
  50:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
  51:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline float fmin(float a, float b)
  52:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
  53:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     float r;
  54:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  55:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  56:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #else
  57:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  58:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  59:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     return r;
  60:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** }
  61:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
  62:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** /** quick fp clamp
  63:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** */
  64:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  65:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
  66:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  67:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** }
  68:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 65


  69:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  70:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** Original code by Stefan Stenzel
  71:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** These are approximations
  72:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** */
  73:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  74:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
  75:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  76:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  77:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  78:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  79:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     l <<= (n - 1);
  80:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  81:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     *lp = l;
  82:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     return f;
  83:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** }
  84:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
  85:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  86:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
  87:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  88:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  89:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  90:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  91:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     l >>= (n - 1);
  92:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  93:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     *lp = l;
  94:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     return f;
  95:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** }
  96:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
  97:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** /** Significantly more efficient than fmodf(x, 1.0f) for calculating
  98:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****  *  the decimal part of a floating point value.
  99:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****  */
 100:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline float fastmod1f(float x)
 101:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
 102:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     return x - static_cast<int>(x);
 103:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** }
 104:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
 105:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
 106:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
 107:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** */
 108:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline float pow10f(float f)
 109:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
 110:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
 111:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** }
 112:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
 113:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
 114:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** About 25% performance increase over std::log10f
 115:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** */
 116:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline float fastlog2f(float f)
 117:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
 118:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     float frac;
 119:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     int   exp;
 120:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 121:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 122:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     f *= frac;
 123:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     f += -4.11852516267426f;
 124:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     f *= frac;
 125:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     f += 6.02197014179219f;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 66


 126:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     f *= frac;
 127:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     f += -3.13396450166353f;
 128:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     f += exp;
 129:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     return (f);
 130:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** }
 131:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
 132:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline float fastlog10f(float f)
 133:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
 134:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 135:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** }
 136:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
 137:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** /** Midi to frequency helper
 138:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** */
 139:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline float mtof(float m)
 140:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
 141:../../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 1032              		.loc 16 141 23 is_stmt 0 view .LVU286
 1033 014a DFED838A 		vldr.32	s17, .L57+32
 1034              		.loc 16 141 16 view .LVU287
 1035 014e F2EE089A 		vmov.f32	s19, #1.2e+1
 1036              	.LBE696:
 1037              	.LBE695:
  81:helloTest.cpp **** 		board.seed.SetLed(slow_blink);
 1038              		.loc 1 81 39 view .LVU288
 1039 0152 C1F30901 		ubfx	r1, r1, #0, #10
 1040              		.loc 1 82 20 view .LVU289
 1041 0156 7A48     		ldr	r0, .L57+8
 1042              	.LVL55:
 1043              	.LBB702:
 1044              	.LBB697:
 1045              		.loc 16 141 23 view .LVU290
 1046 0158 9FED80AA 		vldr.32	s20, .L57+36
 1047              	.LBE697:
 1048              	.LBE702:
 1049              		.loc 1 82 20 view .LVU291
 1050 015c B1F5FF7F 		cmp	r1, #510
 1051              	.LBB703:
 1052              	.LBB698:
 1053              		.loc 16 141 43 view .LVU292
 1054 0160 9FED7F8A 		vldr.32	s16, .L57+40
 1055              	.LBE698:
 1056              	.LBE703:
 1057              		.loc 1 82 20 view .LVU293
 1058 0164 8CBF     		ite	hi
 1059 0166 0021     		movhi	r1, #0
 1060 0168 0121     		movls	r1, #1
 1061 016a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6SetLedEb
 1062              	.LVL56:
  83:helloTest.cpp **** 
  84:helloTest.cpp **** 		filt_freq[0] = mtof(board.get_knob_value(filt_1)*127);
 1063              		.loc 1 84 3 is_stmt 1 view .LVU294
 1064              		.loc 1 84 43 is_stmt 0 view .LVU295
 1065 016e 0321     		movs	r1, #3
 1066 0170 7148     		ldr	r0, .L57
 1067 0172 FFF7FEFF 		bl	_ZN5daisy11daisyCommon14get_knob_valueEi
 1068              	.LVL57:
 1069              	.LBB704:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 67


 1070              	.LBB699:
 1071              		.loc 16 141 23 view .LVU296
 1072 0176 F0EE680A 		vmov.f32	s1, s17
 1073              	.LBE699:
 1074              	.LBE704:
 1075              		.loc 1 84 43 view .LVU297
 1076 017a F0EE407A 		vmov.f32	s15, s0
 1077              	.LVL58:
 1078              	.LBB705:
 1079              	.LBI695:
 139:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
 1080              		.loc 16 139 14 is_stmt 1 view .LVU298
 1081              	.LBB700:
 1082              		.loc 16 141 5 view .LVU299
 1083              		.loc 16 141 16 is_stmt 0 view .LVU300
 1084 017e B0EE000A 		vmov.f32	s0, #2.0e+0
 1085              	.LVL59:
 1086              		.loc 16 141 23 view .LVU301
 1087 0182 E7EE8A0A 		vfma.f32	s1, s15, s20
 1088              		.loc 16 141 16 view .LVU302
 1089 0186 C0EEA90A 		vdiv.f32	s1, s1, s19
 1090 018a FFF7FEFF 		bl	powf
 1091              	.LVL60:
 1092              		.loc 16 141 16 view .LVU303
 1093              	.LBE700:
 1094              	.LBE705:
  85:helloTest.cpp **** 		filt_freq[1] = mtof(board.get_knob_value(filt_2)*127);
 1095              		.loc 1 85 43 view .LVU304
 1096 018e 0721     		movs	r1, #7
 1097 0190 6948     		ldr	r0, .L57
 1098              	.LBB706:
 1099              	.LBB701:
 1100              		.loc 16 141 43 view .LVU305
 1101 0192 20EE089A 		vmul.f32	s18, s0, s16
 1102              	.LVL61:
 1103              		.loc 16 141 43 view .LVU306
 1104              	.LBE701:
 1105              	.LBE706:
 1106              		.loc 1 85 3 is_stmt 1 view .LVU307
 1107              		.loc 1 85 43 is_stmt 0 view .LVU308
 1108 0196 FFF7FEFF 		bl	_ZN5daisy11daisyCommon14get_knob_valueEi
 1109              	.LVL62:
 1110 019a F0EE407A 		vmov.f32	s15, s0
 1111              	.LVL63:
 1112              	.LBB707:
 1113              	.LBI707:
 139:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
 1114              		.loc 16 139 14 is_stmt 1 view .LVU309
 1115              	.LBB708:
 1116              		.loc 16 141 5 view .LVU310
 1117              		.loc 16 141 16 is_stmt 0 view .LVU311
 1118 019e B0EE000A 		vmov.f32	s0, #2.0e+0
 1119              	.LVL64:
 1120              		.loc 16 141 23 view .LVU312
 1121 01a2 E7EE8A8A 		vfma.f32	s17, s15, s20
 1122              		.loc 16 141 16 view .LVU313
 1123 01a6 C8EEA90A 		vdiv.f32	s1, s17, s19
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 68


 1124 01aa FFF7FEFF 		bl	powf
 1125              	.LVL65:
 1126              		.loc 16 141 16 view .LVU314
 1127              	.LBE708:
 1128              	.LBE707:
 1129              	.LBB710:
 1130              	.LBB711:
  59:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 1131              		.loc 14 59 30 view .LVU315
 1132 01ae DFED6D7A 		vldr.32	s15, .L57+44
 1133 01b2 B4EEE79A 		vcmpe.f32	s18, s15
 1134              	.LBE711:
 1135              	.LBE710:
 1136              	.LBB715:
 1137              	.LBB709:
 1138              		.loc 16 141 43 view .LVU316
 1139 01b6 20EE088A 		vmul.f32	s16, s0, s16
 1140              	.LVL66:
 1141              		.loc 16 141 43 view .LVU317
 1142              	.LBE709:
 1143              	.LBE715:
  86:helloTest.cpp **** 		filter[0].SetFrequency(filt_freq[0]);
 1144              		.loc 1 86 3 is_stmt 1 view .LVU318
 1145              	.LBB716:
 1146              	.LBI710:
  56:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     {
 1147              		.loc 14 56 17 view .LVU319
 1148              	.LBB712:
  59:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 1149              		.loc 14 59 9 view .LVU320
  59:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 1150              		.loc 14 59 30 is_stmt 0 view .LVU321
 1151 01ba F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1152 01be 40F1AE80 		bpl	.L54
  61:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 1153              		.loc 14 61 19 view .LVU322
 1154 01c2 9FED690A 		vldr.32	s0, .L57+48
 1155 01c6 29EE000A 		vmul.f32	s0, s18, s0
 1156 01ca FFF7FEFF 		bl	tanf
 1157              	.LVL67:
  62:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     }
 1158              		.loc 14 62 26 view .LVU323
 1159 01ce F7EE007A 		vmov.f32	s15, #1.0e+0
 1160 01d2 70EE276A 		vadd.f32	s13, s0, s15
  62:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     }
 1161              		.loc 14 62 19 view .LVU324
 1162 01d6 87EEA67A 		vdiv.f32	s14, s15, s13
 1163              	.L40:
 1164              	.LVL68:
  61:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 1165              		.loc 14 61 9 is_stmt 1 view .LVU325
 1166              	.LBE712:
 1167              	.LBE716:
 1168              	.LBB717:
 1169              	.LBB718:
  59:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 1170              		.loc 14 59 30 is_stmt 0 view .LVU326
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 69


 1171 01da DFED627A 		vldr.32	s15, .L57+44
 1172              	.LBE718:
 1173              	.LBE717:
 1174              	.LBB722:
 1175              	.LBB713:
  61:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 1176              		.loc 14 61 13 view .LVU327
 1177 01de 85ED000A 		vstr.32	s0, [r5]
  62:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     }
 1178              		.loc 14 62 9 is_stmt 1 view .LVU328
  62:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     }
 1179              		.loc 14 62 13 is_stmt 0 view .LVU329
 1180 01e2 85ED017A 		vstr.32	s14, [r5, #4]
 1181              	.LVL69:
  62:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     }
 1182              		.loc 14 62 13 view .LVU330
 1183              	.LBE713:
 1184              	.LBE722:
  87:helloTest.cpp **** 		filter[1].SetFrequency(filt_freq[1]);
 1185              		.loc 1 87 3 is_stmt 1 view .LVU331
 1186              	.LBB723:
 1187              	.LBI717:
  56:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     {
 1188              		.loc 14 56 17 view .LVU332
 1189              	.LBB719:
  59:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 1190              		.loc 14 59 9 view .LVU333
  59:../../DaisyExamples/DaisySP//Source/Filters/onepole.h **** 
 1191              		.loc 14 59 30 is_stmt 0 view .LVU334
 1192 01e6 B4EEE78A 		vcmpe.f32	s16, s15
 1193 01ea F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1194 01ee 40F18A80 		bpl	.L55
  61:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 1195              		.loc 14 61 19 view .LVU335
 1196 01f2 9FED5D0A 		vldr.32	s0, .L57+48
 1197 01f6 28EE000A 		vmul.f32	s0, s16, s0
 1198 01fa FFF7FEFF 		bl	tanf
 1199              	.LVL70:
  62:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     }
 1200              		.loc 14 62 26 view .LVU336
 1201 01fe B7EE007A 		vmov.f32	s14, #1.0e+0
 1202 0202 70EE076A 		vadd.f32	s13, s0, s14
  62:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     }
 1203              		.loc 14 62 19 view .LVU337
 1204 0206 C7EE267A 		vdiv.f32	s15, s14, s13
 1205              	.L42:
 1206              	.LVL71:
  61:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 1207              		.loc 14 61 9 is_stmt 1 view .LVU338
 1208              	.LBE719:
 1209              	.LBE723:
  88:helloTest.cpp **** 
  89:helloTest.cpp **** 		folder[0].SetGain(board.get_knob_value(fold_gain_1)*10.0f+1.0f);
 1210              		.loc 1 89 41 is_stmt 0 view .LVU339
 1211 020a 0221     		movs	r1, #2
 1212 020c 4A48     		ldr	r0, .L57
 1213              	.LBB724:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 70


 1214              	.LBB720:
  62:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     }
 1215              		.loc 14 62 13 view .LVU340
 1216 020e C5ED057A 		vstr.32	s15, [r5, #20]
  61:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 1217              		.loc 14 61 13 view .LVU341
 1218 0212 85ED040A 		vstr.32	s0, [r5, #16]
  62:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     }
 1219              		.loc 14 62 9 is_stmt 1 view .LVU342
 1220              	.LVL72:
  62:../../DaisyExamples/DaisySP//Source/Filters/onepole.h ****     }
 1221              		.loc 14 62 9 is_stmt 0 view .LVU343
 1222              	.LBE720:
 1223              	.LBE724:
 1224              		.loc 1 89 3 is_stmt 1 view .LVU344
 1225              		.loc 1 89 41 is_stmt 0 view .LVU345
 1226 0216 FFF7FEFF 		bl	_ZN5daisy11daisyCommon14get_knob_valueEi
 1227              	.LVL73:
  90:helloTest.cpp **** 		folder[0].SetOffset(board.get_knob_value(fold_off_1)*2.0f-1.0f);
 1228              		.loc 1 90 43 view .LVU346
 1229 021a 0421     		movs	r1, #4
  89:helloTest.cpp **** 		folder[0].SetOffset(board.get_knob_value(fold_off_1)*2.0f-1.0f);
 1230              		.loc 1 89 20 view .LVU347
 1231 021c F7EE009A 		vmov.f32	s19, #1.0e+0
 1232              		.loc 1 90 43 view .LVU348
 1233 0220 4548     		ldr	r0, .L57
  89:helloTest.cpp **** 		folder[0].SetOffset(board.get_knob_value(fold_off_1)*2.0f-1.0f);
 1234              		.loc 1 89 20 view .LVU349
 1235 0222 F2EE04BA 		vmov.f32	s23, #1.0e+1
 1236              	.LBB725:
 1237              	.LBB726:
 1238              		.loc 16 141 23 view .LVU350
 1239 0226 9FED4C8A 		vldr.32	s16, .L57+32
 1240              	.LVL74:
 1241              		.loc 16 141 23 view .LVU351
 1242              	.LBE726:
 1243              	.LBE725:
 1244              		.loc 1 90 22 view .LVU352
 1245 022a BFEE009A 		vmov.f32	s18, #-1.0e+0
 1246              	.LVL75:
 1247              	.LBB733:
 1248              	.LBB727:
 1249              		.loc 16 141 23 view .LVU353
 1250 022e 9FED4BBA 		vldr.32	s22, .L57+36
 1251              	.LBE727:
 1252              	.LBE733:
  89:helloTest.cpp **** 		folder[0].SetOffset(board.get_knob_value(fold_off_1)*2.0f-1.0f);
 1253              		.loc 1 89 20 view .LVU354
 1254 0232 F0EE697A 		vmov.f32	s15, s19
 1255              	.LBB734:
 1256              	.LBB728:
 1257              		.loc 16 141 43 view .LVU355
 1258 0236 9FED4AAA 		vldr.32	s20, .L57+40
 1259              	.LBE728:
 1260              	.LBE734:
 1261              		.loc 1 90 22 view .LVU356
 1262 023a F0EE008A 		vmov.f32	s17, #2.0e+0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 71


 1263              	.LBB735:
 1264              	.LBB729:
 1265              		.loc 16 141 16 view .LVU357
 1266 023e F2EE08AA 		vmov.f32	s21, #1.2e+1
 1267              	.LBE729:
 1268              	.LBE735:
  89:helloTest.cpp **** 		folder[0].SetOffset(board.get_knob_value(fold_off_1)*2.0f-1.0f);
 1269              		.loc 1 89 20 view .LVU358
 1270 0242 E0EE2B7A 		vfma.f32	s15, s0, s23
 1271              	.LVL76:
 1272              	.LBB736:
 1273              	.LBI736:
 1274              		.file 17 "../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h"
   1:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** /*
   2:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** Copyright (c) 2020 Electrosmith, Corp, Nick Donaldson
   3:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** 
   4:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** Use of this source code is governed by an MIT-style
   5:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** license that can be found in the LICENSE file or at
   6:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** https://opensource.org/licenses/MIT.
   7:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** */
   8:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** 
   9:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** #pragma once
  10:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** #ifndef DSY_WAVEFOFOLDER_H
  11:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** #define DSY_WAVEFOFOLDER_H
  12:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** 
  13:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** #include <stdint.h>
  14:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** #include "Utility/dcblock.h"
  15:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** #ifdef __cplusplus
  16:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** 
  17:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** namespace daisysp
  18:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** {
  19:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** /** Basic wavefolder module.
  20:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** 
  21:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** Amplitude of input determines level of folding.
  22:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** Amplitudes of magnitude > 1.0 will start to fold.
  23:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** 
  24:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** Original author(s) : Nick Donaldson
  25:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** Year : 2022
  26:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** */
  27:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** class Wavefolder
  28:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h **** {
  29:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****   public:
  30:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****     Wavefolder() {}
  31:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****     ~Wavefolder() {}
  32:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****     /** Initializes the wavefolder module.
  33:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****     */
  34:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****     void Init();
  35:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****     /** applies wavefolding to input 
  36:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****     */
  37:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****     float Process(float in);
  38:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****     /** 
  39:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****         \param gain Set input gain.
  40:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****         Supports negative values for thru-zero
  41:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****     */
  42:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****     inline void SetGain(float gain) { gain_ = gain; }
 1275              		.loc 17 42 17 is_stmt 1 view .LVU359
 1276              	.LBB737:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 72


 1277              		.loc 17 42 39 view .LVU360
 1278              		.loc 17 42 45 is_stmt 0 view .LVU361
 1279 0246 C6ED007A 		vstr.32	s15, [r6]
 1280              	.LVL77:
 1281              		.loc 17 42 45 view .LVU362
 1282              	.LBE737:
 1283              	.LBE736:
 1284              		.loc 1 90 3 is_stmt 1 view .LVU363
 1285              		.loc 1 90 43 is_stmt 0 view .LVU364
 1286 024a FFF7FEFF 		bl	_ZN5daisy11daisyCommon14get_knob_valueEi
 1287              	.LVL78:
 1288              		.loc 1 90 22 view .LVU365
 1289 024e F0EE497A 		vmov.f32	s15, s18
  91:helloTest.cpp **** 		folder[1].SetGain(board.get_knob_value(fold_gain_2)*10.0f+1.0f);
 1290              		.loc 1 91 41 view .LVU366
 1291 0252 0621     		movs	r1, #6
 1292 0254 3848     		ldr	r0, .L57
  90:helloTest.cpp **** 		folder[1].SetGain(board.get_knob_value(fold_gain_2)*10.0f+1.0f);
 1293              		.loc 1 90 22 view .LVU367
 1294 0256 E0EE287A 		vfma.f32	s15, s0, s17
 1295              	.LVL79:
 1296              	.LBB738:
 1297              	.LBI738:
  43:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****     /** 
  44:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****         \param offset Offset odded to input (pre-gain) for asymmetrical folding.
  45:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****     */
  46:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****     inline void SetOffset(float offset) { offset_ = offset; }
 1298              		.loc 17 46 17 is_stmt 1 view .LVU368
 1299              	.LBB739:
 1300              		.loc 17 46 43 view .LVU369
 1301              		.loc 17 46 51 is_stmt 0 view .LVU370
 1302 025a C6ED017A 		vstr.32	s15, [r6, #4]
 1303              	.LVL80:
 1304              		.loc 17 46 51 view .LVU371
 1305              	.LBE739:
 1306              	.LBE738:
 1307              		.loc 1 91 3 is_stmt 1 view .LVU372
 1308              		.loc 1 91 41 is_stmt 0 view .LVU373
 1309 025e FFF7FEFF 		bl	_ZN5daisy11daisyCommon14get_knob_valueEi
 1310              	.LVL81:
 1311              		.loc 1 91 20 view .LVU374
 1312 0262 E0EE2B9A 		vfma.f32	s19, s0, s23
 1313              	.LVL82:
 1314              	.LBB740:
 1315              	.LBI740:
  42:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****     /** 
 1316              		.loc 17 42 17 is_stmt 1 view .LVU375
 1317              	.LBB741:
  42:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****     /** 
 1318              		.loc 17 42 39 view .LVU376
 1319              	.LBE741:
 1320              	.LBE740:
  92:helloTest.cpp **** 		folder[1].SetOffset(board.get_knob_value(fold_off_2)*2.0f-1.0f);
 1321              		.loc 1 92 43 is_stmt 0 view .LVU377
 1322 0266 0821     		movs	r1, #8
 1323 0268 3348     		ldr	r0, .L57
 1324              	.LBB743:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 73


 1325              	.LBB742:
  42:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****     /** 
 1326              		.loc 17 42 45 view .LVU378
 1327 026a C6ED029A 		vstr.32	s19, [r6, #8]
 1328              	.LVL83:
  42:../../DaisyExamples/DaisySP//Source/Effects/wavefolder.h ****     /** 
 1329              		.loc 17 42 45 view .LVU379
 1330              	.LBE742:
 1331              	.LBE743:
 1332              		.loc 1 92 3 is_stmt 1 view .LVU380
 1333              		.loc 1 92 43 is_stmt 0 view .LVU381
 1334 026e FFF7FEFF 		bl	_ZN5daisy11daisyCommon14get_knob_valueEi
 1335              	.LVL84:
 1336              		.loc 1 92 22 view .LVU382
 1337 0272 A0EE289A 		vfma.f32	s18, s0, s17
 1338              	.LVL85:
 1339              	.LBB744:
 1340              	.LBI744:
 1341              		.loc 17 46 17 is_stmt 1 view .LVU383
 1342              	.LBB745:
 1343              		.loc 17 46 43 view .LVU384
 1344              	.LBE745:
 1345              	.LBE744:
  93:helloTest.cpp **** 
  94:helloTest.cpp **** 		osc_freq[0] = mtof(board.get_knob_value(freq_1)*127);
 1346              		.loc 1 94 42 is_stmt 0 view .LVU385
 1347 0276 0121     		movs	r1, #1
 1348 0278 2F48     		ldr	r0, .L57
 1349              	.LBB747:
 1350              	.LBB746:
 1351              		.loc 17 46 51 view .LVU386
 1352 027a 86ED039A 		vstr.32	s18, [r6, #12]
 1353              	.LVL86:
 1354              		.loc 17 46 51 view .LVU387
 1355              	.LBE746:
 1356              	.LBE747:
 1357              		.loc 1 94 3 is_stmt 1 view .LVU388
 1358              		.loc 1 94 42 is_stmt 0 view .LVU389
 1359 027e FFF7FEFF 		bl	_ZN5daisy11daisyCommon14get_knob_valueEi
 1360              	.LVL87:
 1361              	.LBB748:
 1362              	.LBB730:
 1363              		.loc 16 141 23 view .LVU390
 1364 0282 F0EE480A 		vmov.f32	s1, s16
 1365              	.LBE730:
 1366              	.LBE748:
 1367              		.loc 1 94 42 view .LVU391
 1368 0286 F0EE407A 		vmov.f32	s15, s0
 1369              	.LVL88:
 1370              	.LBB749:
 1371              	.LBI725:
 139:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
 1372              		.loc 16 139 14 is_stmt 1 view .LVU392
 1373              	.LBB731:
 1374              		.loc 16 141 5 view .LVU393
 1375              		.loc 16 141 16 is_stmt 0 view .LVU394
 1376 028a B0EE680A 		vmov.f32	s0, s17
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 74


 1377              	.LVL89:
 1378              		.loc 16 141 23 view .LVU395
 1379 028e E7EE8B0A 		vfma.f32	s1, s15, s22
 1380              		.loc 16 141 16 view .LVU396
 1381 0292 C0EEAA0A 		vdiv.f32	s1, s1, s21
 1382 0296 FFF7FEFF 		bl	powf
 1383              	.LVL90:
 1384              		.loc 16 141 16 view .LVU397
 1385              	.LBE731:
 1386              	.LBE749:
 1387              	.LBB750:
 1388              	.LBB751:
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1389              		.loc 15 70 34 view .LVU398
 1390 029a 2848     		ldr	r0, .L57+4
 1391              	.LBE751:
 1392              	.LBE750:
 1393              	.LBB754:
 1394              	.LBB732:
 1395              		.loc 16 141 43 view .LVU399
 1396 029c 20EE0A0A 		vmul.f32	s0, s0, s20
 1397              	.LVL91:
 1398              		.loc 16 141 43 view .LVU400
 1399              	.LBE732:
 1400              	.LBE754:
  95:helloTest.cpp **** 		osc[0].SetFreq(osc_freq[0]);
 1401              		.loc 1 95 3 is_stmt 1 view .LVU401
 1402              	.LBB755:
 1403              	.LBI750:
  67:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     {
 1404              		.loc 15 67 17 view .LVU402
 1405              	.LBB752:
  69:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1406              		.loc 15 69 9 view .LVU403
  69:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1407              		.loc 15 69 20 is_stmt 0 view .LVU404
 1408 02a0 84ED020A 		vstr.32	s0, [r4, #8]
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1409              		.loc 15 70 9 is_stmt 1 view .LVU405
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1410              		.loc 15 70 34 is_stmt 0 view .LVU406
 1411 02a4 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 1412              	.LVL92:
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1413              		.loc 15 70 34 view .LVU407
 1414              	.LBE752:
 1415              	.LBE755:
  96:helloTest.cpp **** 
  97:helloTest.cpp **** 		osc_freq[1] = mtof(board.get_knob_value(freq_2)*127);
 1416              		.loc 1 97 42 view .LVU408
 1417 02a8 0521     		movs	r1, #5
 1418 02aa 2348     		ldr	r0, .L57
 1419              	.LBB756:
 1420              	.LBB753:
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1421              		.loc 15 70 20 view .LVU409
 1422 02ac 84ED070A 		vstr.32	s0, [r4, #28]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 75


 1423              	.LVL93:
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1424              		.loc 15 70 20 view .LVU410
 1425              	.LBE753:
 1426              	.LBE756:
 1427              		.loc 1 97 3 is_stmt 1 view .LVU411
 1428              		.loc 1 97 42 is_stmt 0 view .LVU412
 1429 02b0 FFF7FEFF 		bl	_ZN5daisy11daisyCommon14get_knob_valueEi
 1430              	.LVL94:
 1431 02b4 F0EE407A 		vmov.f32	s15, s0
 1432              	.LVL95:
 1433              	.LBB757:
 1434              	.LBI757:
 139:../../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
 1435              		.loc 16 139 14 is_stmt 1 view .LVU413
 1436              	.LBB758:
 1437              		.loc 16 141 5 view .LVU414
 1438              		.loc 16 141 16 is_stmt 0 view .LVU415
 1439 02b8 B0EE680A 		vmov.f32	s0, s17
 1440              	.LVL96:
 1441              		.loc 16 141 23 view .LVU416
 1442 02bc A7EE8B8A 		vfma.f32	s16, s15, s22
 1443              		.loc 16 141 16 view .LVU417
 1444 02c0 C8EE2A0A 		vdiv.f32	s1, s16, s21
 1445 02c4 FFF7FEFF 		bl	powf
 1446              	.LVL97:
 1447              		.loc 16 141 16 view .LVU418
 1448              	.LBE758:
 1449              	.LBE757:
 1450              	.LBB760:
 1451              	.LBB761:
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1452              		.loc 15 70 34 view .LVU419
 1453 02c8 2848     		ldr	r0, .L57+52
 1454              	.LBE761:
 1455              	.LBE760:
 1456              	.LBB764:
 1457              	.LBB759:
 1458              		.loc 16 141 43 view .LVU420
 1459 02ca 20EE0A0A 		vmul.f32	s0, s0, s20
 1460              	.LVL98:
 1461              		.loc 16 141 43 view .LVU421
 1462              	.LBE759:
 1463              	.LBE764:
  98:helloTest.cpp **** 		osc[1].SetFreq(osc_freq[1]);	
 1464              		.loc 1 98 3 is_stmt 1 view .LVU422
 1465              	.LBB765:
 1466              	.LBI760:
  67:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     {
 1467              		.loc 15 67 17 view .LVU423
 1468              	.LBB762:
  69:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1469              		.loc 15 69 9 view .LVU424
  69:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1470              		.loc 15 69 20 is_stmt 0 view .LVU425
 1471 02ce 84ED0D0A 		vstr.32	s0, [r4, #52]
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 76


 1472              		.loc 15 70 9 is_stmt 1 view .LVU426
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1473              		.loc 15 70 34 is_stmt 0 view .LVU427
 1474 02d2 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 1475              	.LVL99:
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1476              		.loc 15 70 34 view .LVU428
 1477              	.LBE762:
 1478              	.LBE765:
 1479              	.LBB766:
 1480              	.LBB767:
  22:../../DaisyExamples/libDaisy//src/hid/switch3.h **** 
  23:../../DaisyExamples/libDaisy//src/hid/switch3.h ****     void Init(dsy_gpio_pin pina, dsy_gpio_pin pinb)
  24:../../DaisyExamples/libDaisy//src/hid/switch3.h ****     {
  25:../../DaisyExamples/libDaisy//src/hid/switch3.h ****         pina_gpio_.pin  = pina;
  26:../../DaisyExamples/libDaisy//src/hid/switch3.h ****         pina_gpio_.mode = DSY_GPIO_MODE_INPUT;
  27:../../DaisyExamples/libDaisy//src/hid/switch3.h ****         pina_gpio_.pull = DSY_GPIO_PULLUP;
  28:../../DaisyExamples/libDaisy//src/hid/switch3.h ****         dsy_gpio_init(&pina_gpio_);
  29:../../DaisyExamples/libDaisy//src/hid/switch3.h **** 
  30:../../DaisyExamples/libDaisy//src/hid/switch3.h ****         pinb_gpio_.pin  = pinb;
  31:../../DaisyExamples/libDaisy//src/hid/switch3.h ****         pinb_gpio_.mode = DSY_GPIO_MODE_INPUT;
  32:../../DaisyExamples/libDaisy//src/hid/switch3.h ****         pinb_gpio_.pull = DSY_GPIO_PULLUP;
  33:../../DaisyExamples/libDaisy//src/hid/switch3.h ****         dsy_gpio_init(&pinb_gpio_);
  34:../../DaisyExamples/libDaisy//src/hid/switch3.h ****     }
  35:../../DaisyExamples/libDaisy//src/hid/switch3.h **** 
  36:../../DaisyExamples/libDaisy//src/hid/switch3.h ****     int Read()
  37:../../DaisyExamples/libDaisy//src/hid/switch3.h ****     {
  38:../../DaisyExamples/libDaisy//src/hid/switch3.h ****         if(!dsy_gpio_read(&pina_gpio_))
 1481              		.loc 9 38 26 view .LVU429
 1482 02d6 2648     		ldr	r0, .L57+56
 1483              	.LBE767:
 1484              	.LBE766:
 1485              	.LBB775:
 1486              	.LBB763:
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1487              		.loc 15 70 20 view .LVU430
 1488 02d8 84ED120A 		vstr.32	s0, [r4, #72]
 1489              	.LVL100:
  70:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1490              		.loc 15 70 20 view .LVU431
 1491              	.LBE763:
 1492              	.LBE775:
  99:helloTest.cpp **** 
 100:helloTest.cpp **** 
 101:helloTest.cpp **** 		switch(board.toggle_left.Read())
 1493              		.loc 1 101 3 is_stmt 1 view .LVU432
 1494              	.LBB776:
 1495              	.LBI766:
  36:../../DaisyExamples/libDaisy//src/hid/switch3.h ****     {
 1496              		.loc 9 36 9 view .LVU433
 1497              	.LBB772:
 1498              		.loc 9 38 9 view .LVU434
 1499              		.loc 9 38 26 is_stmt 0 view .LVU435
 1500 02dc FFF7FEFF 		bl	dsy_gpio_read
 1501              	.LVL101:
 1502              		.loc 9 38 9 view .LVU436
 1503 02e0 B0B9     		cbnz	r0, .L44
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 77


 1504              	.LVL102:
 1505              		.loc 9 38 9 view .LVU437
 1506              	.LBE772:
 1507              	.LBE776:
 102:helloTest.cpp **** 		{
 103:helloTest.cpp **** 			case Switch3::POS_UP: osc[0].SetWaveform(osc[0].WAVE_POLYBLEP_TRI); break;
 1508              		.loc 1 103 4 is_stmt 1 view .LVU438
 1509              		.loc 1 103 26 view .LVU439
 1510              	.LBB777:
 1511              	.LBI777:
  79:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     {
 1512              		.loc 15 79 17 view .LVU440
 1513              	.LBB778:
 1514              		.loc 15 81 9 view .LVU441
 1515              		.loc 15 81 19 is_stmt 0 view .LVU442
 1516 02e2 0523     		movs	r3, #5
 1517 02e4 2370     		strb	r3, [r4]
 1518              	.LVL103:
 1519              	.L45:
 1520              		.loc 15 81 19 view .LVU443
 1521              	.LBE778:
 1522              	.LBE777:
 104:helloTest.cpp **** 			case Switch3::POS_CENTER: osc[0].SetWaveform(osc[0].WAVE_POLYBLEP_SQUARE); break;
 105:helloTest.cpp **** 			case Switch3::POS_DOWN: osc[0].SetWaveform(osc[0].WAVE_POLYBLEP_SAW); break;
 106:helloTest.cpp **** 		}
 107:helloTest.cpp **** 
 108:helloTest.cpp **** 		switch(board.toggle_right.Read())
 1523              		.loc 1 108 3 is_stmt 1 view .LVU444
 1524              	.LBB779:
 1525              	.LBI779:
  36:../../DaisyExamples/libDaisy//src/hid/switch3.h ****     {
 1526              		.loc 9 36 9 view .LVU445
 1527              	.LBB780:
 1528              		.loc 9 38 9 view .LVU446
 1529              		.loc 9 38 26 is_stmt 0 view .LVU447
 1530 02e6 2348     		ldr	r0, .L57+60
 1531 02e8 FFF7FEFF 		bl	dsy_gpio_read
 1532              	.LVL104:
 1533              		.loc 9 38 9 view .LVU448
 1534 02ec 38B1     		cbz	r0, .L47
 1535              	.LVL105:
 1536              	.LBB781:
 1537              	.LBI781:
  36:../../DaisyExamples/libDaisy//src/hid/switch3.h ****     {
 1538              		.loc 9 36 9 is_stmt 1 view .LVU449
 1539              	.LBB782:
  39:../../DaisyExamples/libDaisy//src/hid/switch3.h ****             return POS_UP;
  40:../../DaisyExamples/libDaisy//src/hid/switch3.h ****         if(!dsy_gpio_read(&pinb_gpio_))
 1540              		.loc 9 40 9 view .LVU450
 1541              		.loc 9 40 26 is_stmt 0 view .LVU451
 1542 02ee 2248     		ldr	r0, .L57+64
 1543 02f0 FFF7FEFF 		bl	dsy_gpio_read
 1544              	.LVL106:
 1545              		.loc 9 40 9 view .LVU452
 1546 02f4 D8B1     		cbz	r0, .L48
 1547              	.LVL107:
 1548              		.loc 9 40 9 view .LVU453
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 78


 1549              	.LBE782:
 1550              	.LBE781:
 1551              	.LBE780:
 1552              	.LBE779:
 109:helloTest.cpp **** 		{
 110:helloTest.cpp **** 			case Switch3::POS_UP: osc[1].SetWaveform(osc[1].WAVE_POLYBLEP_TRI); break;
 111:helloTest.cpp **** 			case Switch3::POS_CENTER: osc[1].SetWaveform(osc[1].WAVE_POLYBLEP_SQUARE); break;
 1553              		.loc 1 111 4 is_stmt 1 view .LVU454
 1554              		.loc 1 111 30 view .LVU455
 1555              	.LBB786:
 1556              	.LBI786:
  79:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     {
 1557              		.loc 15 79 17 view .LVU456
 1558              	.LBB787:
 1559              		.loc 15 81 9 view .LVU457
 1560              		.loc 15 81 19 is_stmt 0 view .LVU458
 1561 02f6 0723     		movs	r3, #7
 1562 02f8 84F82C30 		strb	r3, [r4, #44]
  82:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1563              		.loc 15 82 5 view .LVU459
 1564 02fc 22E7     		b	.L39
 1565              	.LVL108:
 1566              	.L47:
 1567              		.loc 15 82 5 view .LVU460
 1568              	.LBE787:
 1569              	.LBE786:
 110:helloTest.cpp **** 			case Switch3::POS_CENTER: osc[1].SetWaveform(osc[1].WAVE_POLYBLEP_SQUARE); break;
 1570              		.loc 1 110 4 is_stmt 1 view .LVU461
 110:helloTest.cpp **** 			case Switch3::POS_CENTER: osc[1].SetWaveform(osc[1].WAVE_POLYBLEP_SQUARE); break;
 1571              		.loc 1 110 26 view .LVU462
 1572              	.LBB788:
 1573              	.LBI788:
  79:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     {
 1574              		.loc 15 79 17 view .LVU463
 1575              	.LBB789:
  81:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1576              		.loc 15 81 9 view .LVU464
  81:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1577              		.loc 15 81 19 is_stmt 0 view .LVU465
 1578 02fe 0523     		movs	r3, #5
 1579 0300 84F82C30 		strb	r3, [r4, #44]
 1580              		.loc 15 82 5 view .LVU466
 1581 0304 1EE7     		b	.L39
 1582              	.LVL109:
 1583              	.L55:
 1584              		.loc 15 82 5 view .LVU467
 1585              	.LBE789:
 1586              	.LBE788:
 1587              	.LBB790:
 1588              	.LBB721:
 1589 0306 DFED1D7A 		vldr.32	s15, .L57+68
 1590 030a 9FED1D0A 		vldr.32	s0, .L57+72
 1591 030e 7CE7     		b	.L42
 1592              	.LVL110:
 1593              	.L44:
 1594              		.loc 15 82 5 view .LVU468
 1595              	.LBE721:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 79


 1596              	.LBE790:
 1597              	.LBB791:
 1598              	.LBB773:
 1599              	.LBB768:
 1600              	.LBI768:
  36:../../DaisyExamples/libDaisy//src/hid/switch3.h ****     {
 1601              		.loc 9 36 9 is_stmt 1 view .LVU469
 1602              	.LBB769:
 1603              		.loc 9 40 9 view .LVU470
 1604              		.loc 9 40 26 is_stmt 0 view .LVU471
 1605 0310 1C48     		ldr	r0, .L57+76
 1606 0312 FFF7FEFF 		bl	dsy_gpio_read
 1607              	.LVL111:
 1608              		.loc 9 40 9 view .LVU472
 1609 0316 38B1     		cbz	r0, .L46
 1610              	.LVL112:
 1611              		.loc 9 40 9 view .LVU473
 1612              	.LBE769:
 1613              	.LBE768:
 1614              	.LBE773:
 1615              	.LBE791:
 104:helloTest.cpp **** 			case Switch3::POS_DOWN: osc[0].SetWaveform(osc[0].WAVE_POLYBLEP_SAW); break;
 1616              		.loc 1 104 4 is_stmt 1 view .LVU474
 104:helloTest.cpp **** 			case Switch3::POS_DOWN: osc[0].SetWaveform(osc[0].WAVE_POLYBLEP_SAW); break;
 1617              		.loc 1 104 30 view .LVU475
 1618              	.LBB792:
 1619              	.LBI792:
  79:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     {
 1620              		.loc 15 79 17 view .LVU476
 1621              	.LBB793:
  81:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1622              		.loc 15 81 9 view .LVU477
  81:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1623              		.loc 15 81 19 is_stmt 0 view .LVU478
 1624 0318 0723     		movs	r3, #7
 1625 031a 2370     		strb	r3, [r4]
 1626              		.loc 15 82 5 view .LVU479
 1627 031c E3E7     		b	.L45
 1628              	.LVL113:
 1629              	.L54:
 1630              		.loc 15 82 5 view .LVU480
 1631              	.LBE793:
 1632              	.LBE792:
 1633              	.LBB794:
 1634              	.LBB714:
 1635 031e 9FED177A 		vldr.32	s14, .L57+68
 1636 0322 9FED170A 		vldr.32	s0, .L57+72
 1637 0326 58E7     		b	.L40
 1638              	.LVL114:
 1639              	.L46:
 1640              		.loc 15 82 5 view .LVU481
 1641              	.LBE714:
 1642              	.LBE794:
 1643              	.LBB795:
 1644              	.LBB774:
 1645              	.LBB771:
 1646              	.LBB770:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 80


  41:../../DaisyExamples/libDaisy//src/hid/switch3.h ****             return POS_DOWN;
 1647              		.loc 9 41 13 is_stmt 1 view .LVU482
 1648              		.loc 9 41 13 is_stmt 0 view .LVU483
 1649              	.LBE770:
 1650              	.LBE771:
 1651              	.LBE774:
 1652              	.LBE795:
 105:helloTest.cpp **** 		}
 1653              		.loc 1 105 4 is_stmt 1 view .LVU484
 105:helloTest.cpp **** 		}
 1654              		.loc 1 105 28 view .LVU485
 1655              	.LBB796:
 1656              	.LBI796:
  79:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     {
 1657              		.loc 15 79 17 view .LVU486
 1658              	.LBB797:
  81:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1659              		.loc 15 81 9 view .LVU487
  81:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1660              		.loc 15 81 19 is_stmt 0 view .LVU488
 1661 0328 0623     		movs	r3, #6
 1662 032a 2370     		strb	r3, [r4]
 1663              		.loc 15 82 5 view .LVU489
 1664 032c DBE7     		b	.L45
 1665              	.LVL115:
 1666              	.L48:
 1667              		.loc 15 82 5 view .LVU490
 1668              	.LBE797:
 1669              	.LBE796:
 1670              	.LBB798:
 1671              	.LBB785:
 1672              	.LBB784:
 1673              	.LBB783:
 1674              		.loc 9 41 13 is_stmt 1 view .LVU491
 1675              		.loc 9 41 13 is_stmt 0 view .LVU492
 1676              	.LBE783:
 1677              	.LBE784:
 1678              	.LBE785:
 1679              	.LBE798:
 112:helloTest.cpp **** 			case Switch3::POS_DOWN: osc[1].SetWaveform(osc[1].WAVE_POLYBLEP_SAW); break;
 1680              		.loc 1 112 4 is_stmt 1 view .LVU493
 1681              		.loc 1 112 28 view .LVU494
 1682              	.LBB799:
 1683              	.LBI799:
  79:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     {
 1684              		.loc 15 79 17 view .LVU495
 1685              	.LBB800:
  81:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1686              		.loc 15 81 9 view .LVU496
  81:../../DaisyExamples/DaisySP//Source/Synthesis/oscillator.h ****     }
 1687              		.loc 15 81 19 is_stmt 0 view .LVU497
 1688 032e 0623     		movs	r3, #6
 1689 0330 84F82C30 		strb	r3, [r4, #44]
 1690              		.loc 15 82 5 view .LVU498
 1691 0334 06E7     		b	.L39
 1692              	.L58:
 1693 0336 00BF     		.align	2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 81


 1694              	.L57:
 1695 0338 00000000 		.word	.LANCHOR3
 1696 033c 00000000 		.word	.LANCHOR0
 1697 0340 A8010000 		.word	.LANCHOR3+424
 1698 0344 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 1699 0348 0000C842 		.word	1120403456
 1700 034c 00007A44 		.word	1148846080
 1701 0350 00000000 		.word	.LANCHOR2
 1702 0354 00000000 		.word	.LANCHOR1
 1703 0358 00008AC2 		.word	-1031143424
 1704 035c 0000FE42 		.word	1123942400
 1705 0360 0000DC43 		.word	1138491392
 1706 0364 C976FE3E 		.word	1056863945
 1707 0368 DB0F4940 		.word	1078530011
 1708 036c 2C000000 		.word	.LANCHOR0+44
 1709 0370 84010000 		.word	.LANCHOR3+388
 1710 0374 8C010000 		.word	.LANCHOR3+396
 1711 0378 90010000 		.word	.LANCHOR3+400
 1712 037c 61FA183C 		.word	1008269921
 1713 0380 5F33D442 		.word	1121203039
 1714 0384 88010000 		.word	.LANCHOR3+392
 1715              	.LBE800:
 1716              	.LBE799:
 1717              	.LBE694:
 1718              		.cfi_endproc
 1719              	.LFE4711:
 1721              		.section	.text.startup._GLOBAL__sub_I_board,"ax",%progbits
 1722              		.align	1
 1723              		.p2align 2,,3
 1724              		.syntax unified
 1725              		.thumb
 1726              		.thumb_func
 1727              		.fpu fpv5-d16
 1729              	_GLOBAL__sub_I_board:
 1730              	.LFB5341:
 113:helloTest.cpp **** 		}
 114:helloTest.cpp **** 		//board.seed.PrintLine("hello world");
 115:helloTest.cpp **** 		//System::Delay(1000);
 116:helloTest.cpp **** 	}
 117:helloTest.cpp **** }
 1731              		.loc 1 117 1 is_stmt 1 view -0
 1732              		.cfi_startproc
 1733              		@ args = 0, pretend = 0, frame = 0
 1734              		@ frame_needed = 0, uses_anonymous_args = 0
 1735              	.LBB980:
 1736              	.LBI980:
 1737              		.loc 1 117 1 view .LVU500
 1738              	.LVL116:
 1739              	.LBB981:
 1740              	.LBB982:
 1741              	.LBI982:
  29:daisy_common.h ****     ~daisyCommon() {}
 1742              		.loc 2 29 5 view .LVU501
 1743              	.LBB983:
 1744              	.LBB984:
 1745              	.LBB985:
 1746              	.LBI985:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 82


 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 1747              		.loc 10 487 7 view .LVU502
 1748              	.LBB986:
 1749              	.LBI986:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 1750              		.loc 10 288 7 view .LVU503
 1751              	.LBB987:
 1752              	.LBI987:
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 1753              		.loc 10 131 2 view .LVU504
 1754              	.LBB988:
 1755              	.LBI988:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 1756              		.loc 13 144 7 view .LVU505
 1757              	.LBB989:
 1758              	.LBI989:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1759              		.loc 12 79 7 view .LVU506
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1760              		.loc 12 79 7 is_stmt 0 view .LVU507
 1761              	.LBE989:
 1762              	.LBE988:
 1763              	.LBB990:
 1764              	.LBI990:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 1765              		.loc 10 97 2 is_stmt 1 view .LVU508
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 1766              		.loc 10 97 2 is_stmt 0 view .LVU509
 1767              	.LBE990:
 1768              	.LBE987:
 1769              	.LBE986:
 1770              	.LBE985:
 1771              	.LBB1006:
 1772              	.LBI1006:
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 1773              		.loc 10 487 7 is_stmt 1 view .LVU510
 1774              	.LBB1007:
 1775              	.LBI1007:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 1776              		.loc 10 288 7 view .LVU511
 1777              	.LBB1008:
 1778              	.LBI1008:
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 1779              		.loc 10 131 2 view .LVU512
 1780              	.LBB1009:
 1781              	.LBI1009:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 1782              		.loc 13 144 7 view .LVU513
 1783              	.LBB1010:
 1784              	.LBI1010:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1785              		.loc 12 79 7 view .LVU514
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1786              		.loc 12 79 7 is_stmt 0 view .LVU515
 1787              	.LBE1010:
 1788              	.LBE1009:
 1789              	.LBB1011:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 83


 1790              	.LBI1011:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 1791              		.loc 10 97 2 is_stmt 1 view .LVU516
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 1792              		.loc 10 97 2 is_stmt 0 view .LVU517
 1793              	.LBE1011:
 1794              	.LBE1008:
 1795              	.LBE1007:
 1796              	.LBE1006:
 1797              	.LBB1017:
 1798              	.LBI1017:
  31:daisy_common.h **** 
  32:daisy_common.h ****     std::vector<struct cv> cvs;
  33:daisy_common.h ****     std::vector<struct jack_gpio> jack_gpios;
  34:daisy_common.h **** 
  35:daisy_common.h ****     enum jacks
  36:daisy_common.h ****     {
  37:daisy_common.h **** 	    in_1 = 0, in_2, in_3, gate_1_in_4, in_5, in_6, in_7, gate_2_in_8
  38:daisy_common.h ****     };
  39:daisy_common.h ****     enum mux
  40:daisy_common.h ****     {
  41:daisy_common.h ****         mux_x = 0, mux_y
  42:daisy_common.h ****     };
  43:daisy_common.h ****     enum mux_x_channel
  44:daisy_common.h ****     {
  45:daisy_common.h ****         knob_1_chan = 0, knob_3_chan, knob_5_chan, knob_4_chan
  46:daisy_common.h ****     };
  47:daisy_common.h ****     enum mux_y_channel
  48:daisy_common.h ****     {
  49:daisy_common.h ****         knob_2_chan = 0, knob_8_chan, knob_6_chan, knob_7_chan
  50:daisy_common.h ****     };
  51:daisy_common.h ****     enum knobs
  52:daisy_common.h ****     {
  53:daisy_common.h ****         knob_1 = 0, knob_2, knob_3, knob_4, knob_5, knob_6, knob_7, knob_8
  54:daisy_common.h ****     };
  55:daisy_common.h ****     enum jack_gpio_direction
  56:daisy_common.h ****     {
  57:daisy_common.h ****         input = 0, output
  58:daisy_common.h ****     };
  59:daisy_common.h ****     enum jack_config
  60:daisy_common.h ****     {
  61:daisy_common.h ****         audio_enable = 0,
  62:daisy_common.h ****         dac_enable,
  63:daisy_common.h ****         gate_enable,
  64:daisy_common.h ****         gpio_enable,
  65:daisy_common.h ****         adc_enable
  66:daisy_common.h ****     };
  67:daisy_common.h **** 
  68:daisy_common.h ****     struct jack_configs
 1799              		.loc 2 68 12 is_stmt 1 view .LVU518
 1800              		.loc 2 68 12 is_stmt 0 view .LVU519
 1801              	.LBE1017:
 1802              	.LBB1021:
 1803              	.LBI1021:
 1804              		.file 18 "../../DaisyExamples/libDaisy//src/per/gpio.h"
   1:../../DaisyExamples/libDaisy//src/per/gpio.h **** #pragma once
   2:../../DaisyExamples/libDaisy//src/per/gpio.h **** #ifndef DSY_GPIO_H
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 84


   3:../../DaisyExamples/libDaisy//src/per/gpio.h **** #define DSY_GPIO_H
   4:../../DaisyExamples/libDaisy//src/per/gpio.h **** #include "daisy_core.h"
   5:../../DaisyExamples/libDaisy//src/per/gpio.h **** 
   6:../../DaisyExamples/libDaisy//src/per/gpio.h **** #ifdef __cplusplus
   7:../../DaisyExamples/libDaisy//src/per/gpio.h **** 
   8:../../DaisyExamples/libDaisy//src/per/gpio.h **** namespace daisy
   9:../../DaisyExamples/libDaisy//src/per/gpio.h **** {
  10:../../DaisyExamples/libDaisy//src/per/gpio.h **** /** @brief General Purpose I/O control 
  11:../../DaisyExamples/libDaisy//src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../../DaisyExamples/libDaisy//src/per/gpio.h ****  *  @ingroup peripheral
  13:../../DaisyExamples/libDaisy//src/per/gpio.h ****  *   
  14:../../DaisyExamples/libDaisy//src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
  15:../../DaisyExamples/libDaisy//src/per/gpio.h ****  *  @include GPIO_Input.cpp 
  16:../../DaisyExamples/libDaisy//src/per/gpio.h ****  * 
  17:../../DaisyExamples/libDaisy//src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../../DaisyExamples/libDaisy//src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../../DaisyExamples/libDaisy//src/per/gpio.h ****  * 
  20:../../DaisyExamples/libDaisy//src/per/gpio.h **** */
  21:../../DaisyExamples/libDaisy//src/per/gpio.h **** class GPIO
  22:../../DaisyExamples/libDaisy//src/per/gpio.h **** {
  23:../../DaisyExamples/libDaisy//src/per/gpio.h ****   public:
  24:../../DaisyExamples/libDaisy//src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../../DaisyExamples/libDaisy//src/per/gpio.h ****     enum class Mode
  26:../../DaisyExamples/libDaisy//src/per/gpio.h ****     {
  27:../../DaisyExamples/libDaisy//src/per/gpio.h ****         INPUT,     /**< Input for reading state of pin */
  28:../../DaisyExamples/libDaisy//src/per/gpio.h ****         OUTPUT,    /**< Output w/ push-pull configuration */
  29:../../DaisyExamples/libDaisy//src/per/gpio.h ****         OUTPUT_OD, /**< Output w/ open-drain configuration */
  30:../../DaisyExamples/libDaisy//src/per/gpio.h ****         ANALOG,    /**< Analog for connection to ADC or DAC peripheral */
  31:../../DaisyExamples/libDaisy//src/per/gpio.h ****     };
  32:../../DaisyExamples/libDaisy//src/per/gpio.h **** 
  33:../../DaisyExamples/libDaisy//src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../../DaisyExamples/libDaisy//src/per/gpio.h ****      *  
  35:../../DaisyExamples/libDaisy//src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
  36:../../DaisyExamples/libDaisy//src/per/gpio.h ****      * 30k and 50k
  37:../../DaisyExamples/libDaisy//src/per/gpio.h ****      * 
  38:../../DaisyExamples/libDaisy//src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../../DaisyExamples/libDaisy//src/per/gpio.h ****      * disabled by hardware. 
  40:../../DaisyExamples/libDaisy//src/per/gpio.h ****      */
  41:../../DaisyExamples/libDaisy//src/per/gpio.h ****     enum class Pull
  42:../../DaisyExamples/libDaisy//src/per/gpio.h ****     {
  43:../../DaisyExamples/libDaisy//src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
  44:../../DaisyExamples/libDaisy//src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
  45:../../DaisyExamples/libDaisy//src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
  46:../../DaisyExamples/libDaisy//src/per/gpio.h ****     };
  47:../../DaisyExamples/libDaisy//src/per/gpio.h **** 
  48:../../DaisyExamples/libDaisy//src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../../DaisyExamples/libDaisy//src/per/gpio.h ****     enum class Speed
  50:../../DaisyExamples/libDaisy//src/per/gpio.h ****     {
  51:../../DaisyExamples/libDaisy//src/per/gpio.h ****         LOW,
  52:../../DaisyExamples/libDaisy//src/per/gpio.h ****         MEDIUM,
  53:../../DaisyExamples/libDaisy//src/per/gpio.h ****         HIGH,
  54:../../DaisyExamples/libDaisy//src/per/gpio.h ****         VERY_HIGH,
  55:../../DaisyExamples/libDaisy//src/per/gpio.h ****     };
  56:../../DaisyExamples/libDaisy//src/per/gpio.h **** 
  57:../../DaisyExamples/libDaisy//src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../../DaisyExamples/libDaisy//src/per/gpio.h ****     struct Config
  59:../../DaisyExamples/libDaisy//src/per/gpio.h ****     {
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 85


  60:../../DaisyExamples/libDaisy//src/per/gpio.h ****         Pin   pin;
  61:../../DaisyExamples/libDaisy//src/per/gpio.h ****         Mode  mode;
  62:../../DaisyExamples/libDaisy//src/per/gpio.h ****         Pull  pull;
  63:../../DaisyExamples/libDaisy//src/per/gpio.h ****         Speed speed;
  64:../../DaisyExamples/libDaisy//src/per/gpio.h **** 
  65:../../DaisyExamples/libDaisy//src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../../DaisyExamples/libDaisy//src/per/gpio.h ****          *  an input, with no pullup. 
  67:../../DaisyExamples/libDaisy//src/per/gpio.h ****          */
  68:../../DaisyExamples/libDaisy//src/per/gpio.h ****         Config()
  69:../../DaisyExamples/libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
  70:../../DaisyExamples/libDaisy//src/per/gpio.h ****         {
  71:../../DaisyExamples/libDaisy//src/per/gpio.h ****         }
  72:../../DaisyExamples/libDaisy//src/per/gpio.h ****     };
  73:../../DaisyExamples/libDaisy//src/per/gpio.h **** 
  74:../../DaisyExamples/libDaisy//src/per/gpio.h ****     GPIO() {}
 1805              		.loc 18 74 5 is_stmt 1 view .LVU520
 1806              	.LBB1022:
 1807              	.LBB1023:
 1808              	.LBI1023:
  68:../../DaisyExamples/libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1809              		.loc 18 68 9 view .LVU521
 1810              	.LBB1024:
 1811              	.LBB1025:
 1812              	.LBB1026:
 1813              	.LBI1026:
 1814              		.file 19 "../../DaisyExamples/libDaisy//src/daisy_core.h"
   1:../../DaisyExamples/libDaisy//src/daisy_core.h **** #pragma once
   2:../../DaisyExamples/libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../DaisyExamples/libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../DaisyExamples/libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
   7:../../DaisyExamples/libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../DaisyExamples/libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../DaisyExamples/libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../DaisyExamples/libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../DaisyExamples/libDaisy//src/daisy_core.h **** #else
  15:../../DaisyExamples/libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../../DaisyExamples/libDaisy//src/daisy_core.h **** #endif
  17:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
  18:../../DaisyExamples/libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../DaisyExamples/libDaisy//src/daisy_core.h ****     @{
  20:../../DaisyExamples/libDaisy//src/daisy_core.h **** */
  21:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
  22:../../DaisyExamples/libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../DaisyExamples/libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../DaisyExamples/libDaisy//src/daisy_core.h **** */
  25:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../DaisyExamples/libDaisy//src/daisy_core.h **** /** 
  27:../../DaisyExamples/libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../DaisyExamples/libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../DaisyExamples/libDaisy//src/daisy_core.h **** cache enabled.
  30:../../DaisyExamples/libDaisy//src/daisy_core.h **** */
  31:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 86


  32:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
  33:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
  47:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
  48:../../DaisyExamples/libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
  52:../../DaisyExamples/libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
  56:../../DaisyExamples/libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
  60:../../DaisyExamples/libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../DaisyExamples/libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
  64:../../DaisyExamples/libDaisy//src/daisy_core.h **** /** 
  65:../../DaisyExamples/libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../DaisyExamples/libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../DaisyExamples/libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../DaisyExamples/libDaisy//src/daisy_core.h **** */
  69:../../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../DaisyExamples/libDaisy//src/daisy_core.h **** {
  71:../../DaisyExamples/libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../DaisyExamples/libDaisy//src/daisy_core.h **** }
  73:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
  74:../../DaisyExamples/libDaisy//src/daisy_core.h **** /** 
  75:../../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../DaisyExamples/libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../DaisyExamples/libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../DaisyExamples/libDaisy//src/daisy_core.h **** */
  79:../../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../DaisyExamples/libDaisy//src/daisy_core.h **** {
  81:../../DaisyExamples/libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../DaisyExamples/libDaisy//src/daisy_core.h **** }
  83:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
  84:../../DaisyExamples/libDaisy//src/daisy_core.h **** /**
  85:../../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../DaisyExamples/libDaisy//src/daisy_core.h **** */
  87:../../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../DaisyExamples/libDaisy//src/daisy_core.h **** {
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 87


  89:../../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../DaisyExamples/libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../DaisyExamples/libDaisy//src/daisy_core.h **** }
  93:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
  94:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
  95:../../DaisyExamples/libDaisy//src/daisy_core.h **** /** 
  96:../../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../DaisyExamples/libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../DaisyExamples/libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../DaisyExamples/libDaisy//src/daisy_core.h **** */
 100:../../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../DaisyExamples/libDaisy//src/daisy_core.h **** {
 102:../../DaisyExamples/libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../DaisyExamples/libDaisy//src/daisy_core.h **** }
 104:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
 105:../../DaisyExamples/libDaisy//src/daisy_core.h **** /**
 106:../../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../DaisyExamples/libDaisy//src/daisy_core.h **** */
 108:../../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../DaisyExamples/libDaisy//src/daisy_core.h **** {
 110:../../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../DaisyExamples/libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../DaisyExamples/libDaisy//src/daisy_core.h **** }
 114:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
 115:../../DaisyExamples/libDaisy//src/daisy_core.h **** /** 
 116:../../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../DaisyExamples/libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../DaisyExamples/libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../DaisyExamples/libDaisy//src/daisy_core.h **** */
 120:../../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../DaisyExamples/libDaisy//src/daisy_core.h **** {
 122:../../DaisyExamples/libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../DaisyExamples/libDaisy//src/daisy_core.h **** }
 124:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
 125:../../DaisyExamples/libDaisy//src/daisy_core.h **** /**
 126:../../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../DaisyExamples/libDaisy//src/daisy_core.h **** */
 128:../../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../DaisyExamples/libDaisy//src/daisy_core.h **** {
 130:../../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../DaisyExamples/libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../DaisyExamples/libDaisy//src/daisy_core.h **** }
 134:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
 135:../../DaisyExamples/libDaisy//src/daisy_core.h **** /**
 136:../../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../DaisyExamples/libDaisy//src/daisy_core.h ****  */
 138:../../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../DaisyExamples/libDaisy//src/daisy_core.h **** {
 140:../../DaisyExamples/libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../DaisyExamples/libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../DaisyExamples/libDaisy//src/daisy_core.h **** }
 143:../../DaisyExamples/libDaisy//src/daisy_core.h **** /**
 144:../../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../DaisyExamples/libDaisy//src/daisy_core.h ****  */
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 88


 146:../../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../DaisyExamples/libDaisy//src/daisy_core.h **** {
 148:../../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../DaisyExamples/libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../DaisyExamples/libDaisy//src/daisy_core.h **** }
 152:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
 153:../../DaisyExamples/libDaisy//src/daisy_core.h **** /**
 154:../../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../DaisyExamples/libDaisy//src/daisy_core.h ****  */
 156:../../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../DaisyExamples/libDaisy//src/daisy_core.h **** {
 158:../../DaisyExamples/libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../DaisyExamples/libDaisy//src/daisy_core.h **** }
 160:../../DaisyExamples/libDaisy//src/daisy_core.h **** /**
 161:../../DaisyExamples/libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../DaisyExamples/libDaisy//src/daisy_core.h ****  */
 163:../../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../DaisyExamples/libDaisy//src/daisy_core.h **** {
 165:../../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../DaisyExamples/libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../DaisyExamples/libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../DaisyExamples/libDaisy//src/daisy_core.h **** }
 169:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
 170:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
 171:../../DaisyExamples/libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../../DaisyExamples/libDaisy//src/daisy_core.h ****  * 
 175:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../DaisyExamples/libDaisy//src/daisy_core.h ****  * 
 178:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../DaisyExamples/libDaisy//src/daisy_core.h ****  */
 180:../../DaisyExamples/libDaisy//src/daisy_core.h **** typedef enum
 181:../../DaisyExamples/libDaisy//src/daisy_core.h **** {
 182:../../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../DaisyExamples/libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../DaisyExamples/libDaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
 197:../../DaisyExamples/libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  
 199:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../DaisyExamples/libDaisy//src/daisy_core.h ****  * 
 202:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 89


 203:../../DaisyExamples/libDaisy//src/daisy_core.h ****  */
 204:../../DaisyExamples/libDaisy//src/daisy_core.h **** typedef struct
 205:../../DaisyExamples/libDaisy//src/daisy_core.h **** {
 206:../../DaisyExamples/libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../DaisyExamples/libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../DaisyExamples/libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
 210:../../DaisyExamples/libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../DaisyExamples/libDaisy//src/daisy_core.h ****  * 
 212:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../DaisyExamples/libDaisy//src/daisy_core.h ****  * 
 215:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../DaisyExamples/libDaisy//src/daisy_core.h **** */
 217:../../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../DaisyExamples/libDaisy//src/daisy_core.h **** {
 219:../../DaisyExamples/libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../DaisyExamples/libDaisy//src/daisy_core.h ****     p.port = port;
 221:../../DaisyExamples/libDaisy//src/daisy_core.h ****     p.pin  = pin;
 222:../../DaisyExamples/libDaisy//src/daisy_core.h ****     return p;
 223:../../DaisyExamples/libDaisy//src/daisy_core.h **** }
 224:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
 225:../../DaisyExamples/libDaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../DaisyExamples/libDaisy//src/daisy_core.h ****  * 
 228:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../DaisyExamples/libDaisy//src/daisy_core.h ****  * 
 231:../../DaisyExamples/libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../DaisyExamples/libDaisy//src/daisy_core.h ****  */
 233:../../DaisyExamples/libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../DaisyExamples/libDaisy//src/daisy_core.h **** {
 235:../../DaisyExamples/libDaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../DaisyExamples/libDaisy//src/daisy_core.h **** }
 237:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
 238:../../DaisyExamples/libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
 240:../../DaisyExamples/libDaisy//src/daisy_core.h **** namespace daisy
 241:../../DaisyExamples/libDaisy//src/daisy_core.h **** {
 242:../../DaisyExamples/libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../DaisyExamples/libDaisy//src/daisy_core.h **** enum GPIOPort
 244:../../DaisyExamples/libDaisy//src/daisy_core.h **** {
 245:../../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../DaisyExamples/libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../DaisyExamples/libDaisy//src/daisy_core.h **** };
 258:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
 259:../../DaisyExamples/libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 90


 260:../../DaisyExamples/libDaisy//src/daisy_core.h **** struct Pin
 261:../../DaisyExamples/libDaisy//src/daisy_core.h **** {
 262:../../DaisyExamples/libDaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../DaisyExamples/libDaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
 265:../../DaisyExamples/libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../DaisyExamples/libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../DaisyExamples/libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../DaisyExamples/libDaisy//src/daisy_core.h ****     */
 269:../../DaisyExamples/libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../DaisyExamples/libDaisy//src/daisy_core.h **** 
 271:../../DaisyExamples/libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../DaisyExamples/libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 1815              		.loc 19 272 15 view .LVU522
 1816              		.loc 19 272 15 is_stmt 0 view .LVU523
 1817              	.LBE1026:
 1818              	.LBE1025:
 1819              	.LBE1024:
 1820              	.LBE1023:
 1821              	.LBE1022:
 1822              	.LBE1021:
 1823              	.LBB1035:
 1824              	.LBI1035:
 1825              		.loc 18 74 5 is_stmt 1 view .LVU524
 1826              	.LBB1036:
 1827              	.LBB1037:
 1828              	.LBI1037:
  68:../../DaisyExamples/libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1829              		.loc 18 68 9 view .LVU525
 1830              	.LBB1038:
 1831              	.LBB1039:
 1832              	.LBB1040:
 1833              	.LBI1040:
 1834              		.loc 19 272 15 view .LVU526
 1835              		.loc 19 272 15 is_stmt 0 view .LVU527
 1836              	.LBE1040:
 1837              	.LBE1039:
 1838              	.LBE1038:
 1839              	.LBE1037:
 1840              	.LBE1036:
 1841              	.LBE1035:
 1842              	.LBB1049:
 1843              	.LBI1049:
 1844              		.loc 18 74 5 is_stmt 1 view .LVU528
 1845              	.LBB1050:
 1846              	.LBB1051:
 1847              	.LBI1051:
  68:../../DaisyExamples/libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1848              		.loc 18 68 9 view .LVU529
 1849              	.LBB1052:
 1850              	.LBB1053:
 1851              	.LBB1054:
 1852              	.LBI1054:
 1853              		.loc 19 272 15 view .LVU530
 1854              		.loc 19 272 15 is_stmt 0 view .LVU531
 1855              	.LBE1054:
 1856              	.LBE1053:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 91


 1857              	.LBE1052:
 1858              	.LBE1051:
 1859              	.LBE1050:
 1860              	.LBE1049:
 1861              	.LBB1063:
 1862              	.LBI1063:
 1863              		.loc 18 74 5 is_stmt 1 view .LVU532
 1864              	.LBB1064:
 1865              	.LBB1065:
 1866              	.LBI1065:
  68:../../DaisyExamples/libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1867              		.loc 18 68 9 view .LVU533
 1868              	.LBB1066:
 1869              	.LBB1067:
 1870              	.LBB1068:
 1871              	.LBI1068:
 1872              		.loc 19 272 15 view .LVU534
 1873              		.loc 19 272 15 is_stmt 0 view .LVU535
 1874              	.LBE1068:
 1875              	.LBE1067:
 1876              	.LBE1066:
 1877              	.LBE1065:
 1878              	.LBE1064:
 1879              	.LBE1063:
 1880              	.LBB1077:
 1881              	.LBI1077:
 1882              		.loc 18 74 5 is_stmt 1 view .LVU536
 1883              	.LBB1078:
 1884              	.LBB1079:
 1885              	.LBI1079:
  68:../../DaisyExamples/libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1886              		.loc 18 68 9 view .LVU537
 1887              	.LBB1080:
 1888              	.LBB1081:
 1889              	.LBB1082:
 1890              	.LBI1082:
 1891              		.loc 19 272 15 view .LVU538
 1892              		.loc 19 272 15 is_stmt 0 view .LVU539
 1893              	.LBE1082:
 1894              	.LBE1081:
 1895              	.LBE1080:
 1896              	.LBE1079:
 1897              	.LBE1078:
 1898              	.LBE1077:
 1899              	.LBB1091:
 1900              	.LBI1091:
 1901              		.loc 18 74 5 is_stmt 1 view .LVU540
 1902              	.LBB1092:
 1903              	.LBB1093:
 1904              	.LBI1093:
  68:../../DaisyExamples/libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1905              		.loc 18 68 9 view .LVU541
 1906              	.LBB1094:
 1907              	.LBB1095:
 1908              	.LBB1096:
 1909              	.LBI1096:
 1910              		.loc 19 272 15 view .LVU542
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 92


 1911              	.LBE1096:
 1912              	.LBE1095:
 1913              	.LBE1094:
 1914              	.LBE1093:
 1915              	.LBE1092:
 1916              	.LBE1091:
 1917              	.LBB1105:
 1918              	.LBB1003:
 1919              	.LBB1000:
 1920              	.LBB997:
 1921              	.LBB991:
 1922              	.LBB992:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 1923              		.loc 10 98 47 is_stmt 0 view .LVU543
 1924 0000 3E48     		ldr	r0, .L61
 1925              	.LBE992:
 1926              	.LBE991:
 1927              	.LBE997:
 1928              	.LBE1000:
 1929              	.LBE1003:
 1930              	.LBE1105:
 1931              	.LBB1106:
 1932              	.LBB1018:
 1933              		.loc 2 68 12 view .LVU544
 1934 0002 0421     		movs	r1, #4
 1935              	.LBE1018:
 1936              	.LBE1106:
 1937              	.LBE984:
  29:daisy_common.h ****     ~daisyCommon() {}
 1938              		.loc 2 29 19 view .LVU545
 1939 0004 4FF60B73 		movw	r3, #65291
 1940              	.LBE983:
 1941              	.LBE982:
   9:helloTest.cpp **** 
 1942              		.loc 1 9 13 view .LVU546
 1943 0008 3D4A     		ldr	r2, .L61+4
 1944              	.LBE981:
 1945              	.LBE980:
 1946              		.loc 1 117 1 view .LVU547
 1947 000a 10B5     		push	{r4, lr}
 1948              		.cfi_def_cfa_offset 8
 1949              		.cfi_offset 4, -8
 1950              		.cfi_offset 14, -4
 1951              	.LBB1307:
 1952              	.LBB1305:
 1953              	.LBB1304:
 1954              	.LBB1303:
 1955              	.LBB1302:
 1956              	.LBB1107:
 1957              	.LBB1004:
 1958              	.LBB1001:
 1959              	.LBB998:
 1960              	.LBB995:
 1961              	.LBB993:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 1962              		.loc 10 98 47 view .LVU548
 1963 000c 0024     		movs	r4, #0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 93


 1964              	.LBE993:
 1965              	.LBE995:
 1966              	.LBE998:
 1967              	.LBE1001:
 1968              	.LBE1004:
 1969              	.LBE1107:
 1970              	.LBB1108:
 1971              	.LBB1019:
 1972              		.loc 2 68 12 view .LVU549
 1973 000e C0E90811 		strd	r1, r1, [r0, #32]
 1974 0012 C0E90A11 		strd	r1, r1, [r0, #40]
 1975 0016 C0E90C11 		strd	r1, r1, [r0, #48]
 1976 001a C0E90E11 		strd	r1, r1, [r0, #56]
 1977              	.LBE1019:
 1978              	.LBE1108:
  29:daisy_common.h ****     ~daisyCommon() {}
 1979              		.loc 2 29 19 view .LVU550
 1980 001e 4FF0FF31 		mov	r1, #-1
 1981              	.LBB1109:
 1982              	.LBB1033:
 1983              	.LBB1031:
 1984              	.LBB1029:
 1985              	.LBB1027:
  69:../../DaisyExamples/libDaisy//src/per/gpio.h ****         {
 1986              		.loc 18 69 73 view .LVU551
 1987 0022 C0E91134 		strd	r3, r4, [r0, #68]
 1988              	.LBE1027:
 1989              	.LBE1029:
 1990              	.LBE1031:
 1991              	.LBE1033:
 1992              	.LBE1109:
 1993              	.LBB1110:
 1994              	.LBB1047:
 1995              	.LBB1045:
 1996              	.LBB1043:
 1997              	.LBB1041:
 1998 0026 C0E91634 		strd	r3, r4, [r0, #88]
 1999              	.LBE1041:
 2000              	.LBE1043:
 2001              	.LBE1045:
 2002              	.LBE1047:
 2003              	.LBE1110:
 2004              	.LBB1111:
 2005              	.LBB1061:
 2006              	.LBB1059:
 2007              	.LBB1057:
 2008              	.LBB1055:
 2009 002a C0E91B34 		strd	r3, r4, [r0, #108]
 2010              	.LBE1055:
 2011              	.LBE1057:
 2012              	.LBE1059:
 2013              	.LBE1061:
 2014              	.LBE1111:
 2015              	.LBB1112:
 2016              	.LBB1075:
 2017              	.LBB1073:
 2018              	.LBB1071:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 94


 2019              	.LBB1069:
 2020 002e C0E92034 		strd	r3, r4, [r0, #128]
 2021              	.LBE1069:
 2022              	.LBE1071:
 2023              	.LBE1073:
 2024              	.LBE1075:
 2025              	.LBE1112:
 2026              	.LBB1113:
 2027              	.LBB1005:
 2028              	.LBB1002:
 2029              	.LBB999:
 2030              	.LBB996:
 2031              	.LBB994:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 2032              		.loc 10 98 47 view .LVU552
 2033 0032 C0E90044 		strd	r4, r4, [r0]
 2034              	.LBE994:
 2035              	.LBE996:
 2036              	.LBE999:
 2037              	.LBE1002:
 2038              	.LBE1005:
 2039              	.LBE1113:
 2040              	.LBB1114:
 2041              	.LBB1016:
 2042              	.LBB1015:
 2043              	.LBB1014:
 2044              	.LBB1012:
 2045              	.LBB1013:
 2046 0036 C0E90244 		strd	r4, r4, [r0, #8]
 2047 003a C0E90444 		strd	r4, r4, [r0, #16]
 2048              	.LBE1013:
 2049              	.LBE1012:
 2050              	.LBE1014:
 2051              	.LBE1015:
 2052              	.LBE1016:
 2053              	.LBE1114:
 2054              	.LBB1115:
 2055              	.LBB1020:
 2056              		.loc 2 68 12 view .LVU553
 2057 003e C0E90644 		strd	r4, r4, [r0, #24]
 2058              	.LBE1020:
 2059              	.LBE1115:
 2060              	.LBB1116:
 2061              	.LBB1034:
 2062              	.LBB1032:
 2063              	.LBB1030:
 2064              	.LBB1028:
  69:../../DaisyExamples/libDaisy//src/per/gpio.h ****         {
 2065              		.loc 18 69 73 view .LVU554
 2066 0042 C0E91344 		strd	r4, r4, [r0, #76]
 2067              	.LBE1028:
 2068              	.LBE1030:
 2069              	.LBE1032:
 2070              	.LBE1034:
 2071              	.LBE1116:
 2072              	.LBB1117:
 2073              	.LBB1048:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 95


 2074              	.LBB1046:
 2075              	.LBB1044:
 2076              	.LBB1042:
 2077 0046 C0E91844 		strd	r4, r4, [r0, #96]
 2078              	.LBE1042:
 2079              	.LBE1044:
 2080              	.LBE1046:
 2081              	.LBE1048:
 2082              	.LBE1117:
 2083              	.LBB1118:
 2084              	.LBB1062:
 2085              	.LBB1060:
 2086              	.LBB1058:
 2087              	.LBB1056:
 2088 004a C0E91D44 		strd	r4, r4, [r0, #116]
 2089              	.LBE1056:
 2090              	.LBE1058:
 2091              	.LBE1060:
 2092              	.LBE1062:
 2093              	.LBE1118:
 2094              	.LBB1119:
 2095              	.LBB1076:
 2096              	.LBB1074:
 2097              	.LBB1072:
 2098              	.LBB1070:
 2099 004e C0E92244 		strd	r4, r4, [r0, #136]
 2100              	.LBE1070:
 2101              	.LBE1072:
 2102              	.LBE1074:
 2103              	.LBE1076:
 2104              	.LBE1119:
 2105              	.LBB1120:
 2106              	.LBB1089:
 2107              	.LBB1087:
 2108              	.LBB1085:
 2109              	.LBB1083:
 2110 0052 C0E92534 		strd	r3, r4, [r0, #148]
 2111              	.LBE1083:
 2112              	.LBE1085:
 2113              	.LBE1087:
 2114              	.LBE1089:
 2115              	.LBE1120:
 2116              	.LBB1121:
 2117              	.LBB1103:
 2118              	.LBB1101:
 2119              	.LBB1099:
 2120              	.LBB1097:
 2121 0056 C0E92A34 		strd	r3, r4, [r0, #168]
 2122              	.LBE1097:
 2123              	.LBE1099:
 2124              	.LBE1101:
 2125              	.LBE1103:
 2126              	.LBE1121:
 2127              	.LBB1122:
 2128              	.LBB1123:
 2129              	.LBB1124:
 2130              	.LBB1125:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 96


 2131              	.LBB1126:
 2132 005a C0E92F34 		strd	r3, r4, [r0, #188]
 2133              	.LBE1126:
 2134              	.LBE1125:
 2135              	.LBE1124:
 2136              	.LBE1123:
 2137              	.LBE1122:
 2138              	.LBB1136:
 2139              	.LBB1137:
 2140              	.LBB1138:
 2141              	.LBB1139:
 2142              	.LBB1140:
 2143 005e C0E93434 		strd	r3, r4, [r0, #208]
 2144              	.LBE1140:
 2145              	.LBE1139:
 2146              	.LBE1138:
 2147              	.LBE1137:
 2148              	.LBE1136:
 2149              	.LBB1150:
 2150              	.LBB1151:
 2151              	.LBB1152:
 2152              	.LBB1153:
 2153              	.LBB1154:
 2154 0062 C0E93934 		strd	r3, r4, [r0, #228]
 2155              	.LBE1154:
 2156              	.LBE1153:
 2157              	.LBE1152:
 2158              	.LBE1151:
 2159              	.LBE1150:
 2160              	.LBB1164:
 2161              	.LBB1165:
 2162              	.LBB1166:
 2163              	.LBB1167:
 2164              	.LBB1168:
 2165 0066 C0E93E34 		strd	r3, r4, [r0, #248]
 2166              	.LBE1168:
 2167              	.LBE1167:
 2168              	.LBE1166:
 2169              	.LBE1165:
 2170              	.LBE1164:
 2171              	.LBB1178:
 2172              	.LBB1179:
 2173              	.LBB1180:
 2174              	.LBB1181:
 2175              	.LBB1182:
 2176 006a C0E94334 		strd	r3, r4, [r0, #268]
 2177              	.LBE1182:
 2178              	.LBE1181:
 2179              	.LBE1180:
 2180              	.LBE1179:
 2181              	.LBE1178:
 2182              	.LBB1192:
 2183              	.LBB1193:
 2184              	.LBB1194:
 2185              	.LBB1195:
 2186              	.LBB1196:
 2187 006e C0E94834 		strd	r3, r4, [r0, #288]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 97


 2188              	.LBE1196:
 2189              	.LBE1195:
 2190              	.LBE1194:
 2191              	.LBE1193:
 2192              	.LBE1192:
 2193              	.LBB1206:
 2194              	.LBB1090:
 2195              	.LBB1088:
 2196              	.LBB1086:
 2197              	.LBB1084:
 2198 0072 C0E92744 		strd	r4, r4, [r0, #156]
 2199              	.LBE1084:
 2200              	.LBE1086:
 2201              	.LBE1088:
 2202              	.LBE1090:
 2203              	.LBE1206:
 2204              	.LBB1207:
 2205              	.LBB1104:
 2206              	.LBB1102:
 2207              	.LBB1100:
 2208              	.LBB1098:
 2209 0076 C0E92C44 		strd	r4, r4, [r0, #176]
 2210              	.LVL117:
  69:../../DaisyExamples/libDaisy//src/per/gpio.h ****         {
 2211              		.loc 18 69 73 view .LVU555
 2212              	.LBE1098:
 2213              	.LBE1100:
 2214              	.LBE1102:
 2215              	.LBE1104:
 2216              	.LBE1207:
 2217              	.LBB1208:
 2218              	.LBI1122:
 2219              		.loc 18 74 5 is_stmt 1 view .LVU556
 2220              	.LBB1134:
 2221              	.LBB1132:
 2222              	.LBI1124:
  68:../../DaisyExamples/libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2223              		.loc 18 68 9 view .LVU557
 2224              	.LBB1130:
 2225              	.LBB1128:
 2226              	.LBB1127:
 2227              	.LBI1127:
 2228              		.loc 19 272 15 view .LVU558
 2229              		.loc 19 272 15 is_stmt 0 view .LVU559
 2230              	.LBE1127:
 2231              	.LBE1128:
 2232              	.LBE1130:
 2233              	.LBE1132:
 2234              	.LBE1134:
 2235              	.LBE1208:
 2236              	.LBB1209:
 2237              	.LBI1136:
 2238              		.loc 18 74 5 is_stmt 1 view .LVU560
 2239              	.LBB1148:
 2240              	.LBB1146:
 2241              	.LBI1138:
  68:../../DaisyExamples/libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 98


 2242              		.loc 18 68 9 view .LVU561
 2243              	.LBB1144:
 2244              	.LBB1142:
 2245              	.LBB1141:
 2246              	.LBI1141:
 2247              		.loc 19 272 15 view .LVU562
 2248              		.loc 19 272 15 is_stmt 0 view .LVU563
 2249              	.LBE1141:
 2250              	.LBE1142:
 2251              	.LBE1144:
 2252              	.LBE1146:
 2253              	.LBE1148:
 2254              	.LBE1209:
 2255              	.LBB1210:
 2256              	.LBI1150:
 2257              		.loc 18 74 5 is_stmt 1 view .LVU564
 2258              	.LBB1162:
 2259              	.LBB1160:
 2260              	.LBI1152:
  68:../../DaisyExamples/libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2261              		.loc 18 68 9 view .LVU565
 2262              	.LBB1158:
 2263              	.LBB1156:
 2264              	.LBB1155:
 2265              	.LBI1155:
 2266              		.loc 19 272 15 view .LVU566
 2267              		.loc 19 272 15 is_stmt 0 view .LVU567
 2268              	.LBE1155:
 2269              	.LBE1156:
 2270              	.LBE1158:
 2271              	.LBE1160:
 2272              	.LBE1162:
 2273              	.LBE1210:
 2274              	.LBB1211:
 2275              	.LBB1135:
 2276              	.LBB1133:
 2277              	.LBB1131:
 2278              	.LBB1129:
  69:../../DaisyExamples/libDaisy//src/per/gpio.h ****         {
 2279              		.loc 18 69 73 view .LVU568
 2280 007a C0E93144 		strd	r4, r4, [r0, #196]
 2281              	.LBE1129:
 2282              	.LBE1131:
 2283              	.LBE1133:
 2284              	.LBE1135:
 2285              	.LBE1211:
 2286              	.LBB1212:
 2287              	.LBB1149:
 2288              	.LBB1147:
 2289              	.LBB1145:
 2290              	.LBB1143:
 2291 007e C0E93644 		strd	r4, r4, [r0, #216]
 2292              	.LBE1143:
 2293              	.LBE1145:
 2294              	.LBE1147:
 2295              	.LBE1149:
 2296              	.LBE1212:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 99


 2297              	.LBB1213:
 2298              	.LBB1163:
 2299              	.LBB1161:
 2300              	.LBB1159:
 2301              	.LBB1157:
 2302 0082 C0E93B44 		strd	r4, r4, [r0, #236]
 2303              	.LVL118:
  69:../../DaisyExamples/libDaisy//src/per/gpio.h ****         {
 2304              		.loc 18 69 73 view .LVU569
 2305              	.LBE1157:
 2306              	.LBE1159:
 2307              	.LBE1161:
 2308              	.LBE1163:
 2309              	.LBE1213:
 2310              	.LBB1214:
 2311              	.LBI1164:
 2312              		.loc 18 74 5 is_stmt 1 view .LVU570
 2313              	.LBB1176:
 2314              	.LBB1174:
 2315              	.LBI1166:
  68:../../DaisyExamples/libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2316              		.loc 18 68 9 view .LVU571
 2317              	.LBB1172:
 2318              	.LBB1170:
 2319              	.LBB1169:
 2320              	.LBI1169:
 2321              		.loc 19 272 15 view .LVU572
 2322              		.loc 19 272 15 is_stmt 0 view .LVU573
 2323              	.LBE1169:
 2324              	.LBE1170:
 2325              	.LBE1172:
 2326              	.LBE1174:
 2327              	.LBE1176:
 2328              	.LBE1214:
 2329              	.LBB1215:
 2330              	.LBI1178:
 2331              		.loc 18 74 5 is_stmt 1 view .LVU574
 2332              	.LBB1190:
 2333              	.LBB1188:
 2334              	.LBI1180:
  68:../../DaisyExamples/libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2335              		.loc 18 68 9 view .LVU575
 2336              	.LBB1186:
 2337              	.LBB1184:
 2338              	.LBB1183:
 2339              	.LBI1183:
 2340              		.loc 19 272 15 view .LVU576
 2341              		.loc 19 272 15 is_stmt 0 view .LVU577
 2342              	.LBE1183:
 2343              	.LBE1184:
 2344              	.LBE1186:
 2345              	.LBE1188:
 2346              	.LBE1190:
 2347              	.LBE1215:
 2348              	.LBB1216:
 2349              	.LBI1192:
 2350              		.loc 18 74 5 is_stmt 1 view .LVU578
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 100


 2351              	.LBB1204:
 2352              	.LBB1202:
 2353              	.LBI1194:
  68:../../DaisyExamples/libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2354              		.loc 18 68 9 view .LVU579
 2355              	.LBB1200:
 2356              	.LBB1198:
 2357              	.LBB1197:
 2358              	.LBI1197:
 2359              		.loc 19 272 15 view .LVU580
 2360              		.loc 19 272 15 is_stmt 0 view .LVU581
 2361              	.LBE1197:
 2362              	.LBE1198:
 2363              	.LBE1200:
 2364              	.LBE1202:
 2365              	.LBE1204:
 2366              	.LBE1216:
 2367              	.LBB1217:
 2368              	.LBI1217:
 2369              		.loc 18 74 5 is_stmt 1 view .LVU582
 2370              	.LBB1218:
 2371              	.LBB1219:
 2372              	.LBI1219:
  68:../../DaisyExamples/libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2373              		.loc 18 68 9 view .LVU583
 2374              	.LBB1220:
 2375              	.LBB1221:
 2376              	.LBB1222:
 2377              	.LBI1222:
 2378              		.loc 19 272 15 view .LVU584
 2379              		.loc 19 272 15 is_stmt 0 view .LVU585
 2380              	.LBE1222:
 2381              	.LBE1221:
 2382              	.LBE1220:
 2383              	.LBE1219:
 2384              	.LBE1218:
 2385              	.LBE1217:
 2386              	.LBB1231:
 2387              	.LBI1231:
 2388              		.loc 18 74 5 is_stmt 1 view .LVU586
 2389              	.LBB1232:
 2390              	.LBB1233:
 2391              	.LBI1233:
  68:../../DaisyExamples/libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2392              		.loc 18 68 9 view .LVU587
 2393              	.LBB1234:
 2394              	.LBB1235:
 2395              	.LBB1236:
 2396              	.LBI1236:
 2397              		.loc 19 272 15 view .LVU588
 2398              		.loc 19 272 15 is_stmt 0 view .LVU589
 2399              	.LBE1236:
 2400              	.LBE1235:
 2401              	.LBE1234:
 2402              	.LBE1233:
 2403              	.LBE1232:
 2404              	.LBE1231:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 101


 2405              	.LBB1245:
 2406              	.LBI1245:
 2407              		.loc 18 74 5 is_stmt 1 view .LVU590
 2408              	.LBB1246:
 2409              	.LBB1247:
 2410              	.LBI1247:
  68:../../DaisyExamples/libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2411              		.loc 18 68 9 view .LVU591
 2412              	.LBB1248:
 2413              	.LBB1249:
 2414              	.LBB1250:
 2415              	.LBI1250:
 2416              		.loc 19 272 15 view .LVU592
 2417              		.loc 19 272 15 is_stmt 0 view .LVU593
 2418              	.LBE1250:
 2419              	.LBE1249:
 2420              	.LBE1248:
 2421              	.LBE1247:
 2422              	.LBE1246:
 2423              	.LBE1245:
 2424              	.LBB1259:
 2425              	.LBI1259:
 2426              		.loc 18 74 5 is_stmt 1 view .LVU594
 2427              	.LBB1260:
 2428              	.LBB1261:
 2429              	.LBI1261:
  68:../../DaisyExamples/libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2430              		.loc 18 68 9 view .LVU595
 2431              	.LBB1262:
 2432              	.LBB1263:
 2433              	.LBB1264:
 2434              	.LBI1264:
 2435              		.loc 19 272 15 view .LVU596
 2436              	.LBE1264:
 2437              	.LBE1263:
 2438              	.LBE1262:
 2439              	.LBE1261:
 2440              	.LBE1260:
 2441              	.LBE1259:
 2442              	.LBB1273:
 2443              	.LBB1177:
 2444              	.LBB1175:
 2445              	.LBB1173:
 2446              	.LBB1171:
  69:../../DaisyExamples/libDaisy//src/per/gpio.h ****         {
 2447              		.loc 18 69 73 is_stmt 0 view .LVU597
 2448 0086 C0E94044 		strd	r4, r4, [r0, #256]
 2449              	.LBE1171:
 2450              	.LBE1173:
 2451              	.LBE1175:
 2452              	.LBE1177:
 2453              	.LBE1273:
 2454              	.LBB1274:
 2455              	.LBB1191:
 2456              	.LBB1189:
 2457              	.LBB1187:
 2458              	.LBB1185:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 102


 2459 008a C0E94544 		strd	r4, r4, [r0, #276]
 2460              	.LBE1185:
 2461              	.LBE1187:
 2462              	.LBE1189:
 2463              	.LBE1191:
 2464              	.LBE1274:
 2465              	.LBB1275:
 2466              	.LBB1205:
 2467              	.LBB1203:
 2468              	.LBB1201:
 2469              	.LBB1199:
 2470 008e C0E94A44 		strd	r4, r4, [r0, #296]
 2471              	.LBE1199:
 2472              	.LBE1201:
 2473              	.LBE1203:
 2474              	.LBE1205:
 2475              	.LBE1275:
 2476              	.LBB1276:
 2477              	.LBB1229:
 2478              	.LBB1227:
 2479              	.LBB1225:
 2480              	.LBB1223:
 2481 0092 C0E94D34 		strd	r3, r4, [r0, #308]
 2482              	.LBE1223:
 2483              	.LBE1225:
 2484              	.LBE1227:
 2485              	.LBE1229:
 2486              	.LBE1276:
 2487              	.LBB1277:
 2488              	.LBB1243:
 2489              	.LBB1241:
 2490              	.LBB1239:
 2491              	.LBB1237:
 2492 0096 C0E95234 		strd	r3, r4, [r0, #328]
 2493              	.LBE1237:
 2494              	.LBE1239:
 2495              	.LBE1241:
 2496              	.LBE1243:
 2497              	.LBE1277:
 2498              	.LBB1278:
 2499              	.LBB1257:
 2500              	.LBB1255:
 2501              	.LBB1253:
 2502              	.LBB1251:
 2503 009a C0E95734 		strd	r3, r4, [r0, #348]
 2504              	.LBE1251:
 2505              	.LBE1253:
 2506              	.LBE1255:
 2507              	.LBE1257:
 2508              	.LBE1278:
 2509              	.LBB1279:
 2510              	.LBB1271:
 2511              	.LBB1269:
 2512              	.LBB1267:
 2513              	.LBB1265:
 2514 009e C0E95C34 		strd	r3, r4, [r0, #368]
 2515              	.LBE1265:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 103


 2516              	.LBE1267:
 2517              	.LBE1269:
 2518              	.LBE1271:
 2519              	.LBE1279:
  29:daisy_common.h ****     ~daisyCommon() {}
 2520              		.loc 2 29 19 view .LVU598
 2521 00a2 C0E97941 		strd	r4, r1, [r0, #484]
 2522              	.LBB1280:
 2523              	.LBB1230:
 2524              	.LBB1228:
 2525              	.LBB1226:
 2526              	.LBB1224:
  69:../../DaisyExamples/libDaisy//src/per/gpio.h ****         {
 2527              		.loc 18 69 73 view .LVU599
 2528 00a6 C0E94F44 		strd	r4, r4, [r0, #316]
 2529              	.LBE1224:
 2530              	.LBE1226:
 2531              	.LBE1228:
 2532              	.LBE1230:
 2533              	.LBE1280:
 2534              	.LBB1281:
 2535              	.LBB1244:
 2536              	.LBB1242:
 2537              	.LBB1240:
 2538              	.LBB1238:
 2539 00aa C0E95444 		strd	r4, r4, [r0, #336]
 2540              	.LBE1238:
 2541              	.LBE1240:
 2542              	.LBE1242:
 2543              	.LBE1244:
 2544              	.LBE1281:
 2545              	.LBB1282:
 2546              	.LBB1258:
 2547              	.LBB1256:
 2548              	.LBB1254:
 2549              	.LBB1252:
 2550 00ae C0E95944 		strd	r4, r4, [r0, #356]
 2551              	.LVL119:
  69:../../DaisyExamples/libDaisy//src/per/gpio.h ****         {
 2552              		.loc 18 69 73 view .LVU600
 2553              	.LBE1252:
 2554              	.LBE1254:
 2555              	.LBE1256:
 2556              	.LBE1258:
 2557              	.LBE1282:
 2558              	.LBB1283:
 2559              	.LBB1272:
 2560              	.LBB1270:
 2561              	.LBB1268:
 2562              	.LBB1266:
 2563 00b2 C0E95E44 		strd	r4, r4, [r0, #376]
 2564              	.LVL120:
  69:../../DaisyExamples/libDaisy//src/per/gpio.h ****         {
 2565              		.loc 18 69 73 view .LVU601
 2566              	.LBE1266:
 2567              	.LBE1268:
 2568              	.LBE1270:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 104


 2569              	.LBE1272:
 2570              	.LBE1283:
 2571              	.LBB1284:
 2572              	.LBI1284:
  20:../../DaisyExamples/libDaisy//src/hid/switch3.h ****     ~Switch3() {}
 2573              		.loc 9 20 5 is_stmt 1 view .LVU602
  20:../../DaisyExamples/libDaisy//src/hid/switch3.h ****     ~Switch3() {}
 2574              		.loc 9 20 5 is_stmt 0 view .LVU603
 2575              	.LBE1284:
 2576              	.LBB1285:
 2577              	.LBI1285:
  20:../../DaisyExamples/libDaisy//src/hid/switch3.h ****     ~Switch3() {}
 2578              		.loc 9 20 5 is_stmt 1 view .LVU604
  20:../../DaisyExamples/libDaisy//src/hid/switch3.h ****     ~Switch3() {}
 2579              		.loc 9 20 5 is_stmt 0 view .LVU605
 2580              	.LBE1285:
 2581              	.LBB1286:
 2582              	.LBI1286:
  41:../../DaisyExamples/libDaisy//src/hid/switch.h ****     ~Switch() {}
 2583              		.loc 8 41 5 is_stmt 1 view .LVU606
  41:../../DaisyExamples/libDaisy//src/hid/switch.h ****     ~Switch() {}
 2584              		.loc 8 41 5 is_stmt 0 view .LVU607
 2585              	.LBE1286:
 2586              	.LBB1287:
 2587              	.LBI1287:
  21:../../DaisyExamples/libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 2588              		.loc 3 21 5 is_stmt 1 view .LVU608
 2589              	.LBB1288:
 2590              	.LBB1289:
 2591              	.LBI1289:
 2592              		.file 20 "../../DaisyExamples/libDaisy//src/per/qspi.h"
   1:../../DaisyExamples/libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
   4:../../DaisyExamples/libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
   6:../../DaisyExamples/libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../DaisyExamples/libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
   9:../../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../DaisyExamples/libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../DaisyExamples/libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../DaisyExamples/libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../DaisyExamples/libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../DaisyExamples/libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../DaisyExamples/libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
  19:../../DaisyExamples/libDaisy//src/per/qspi.h **** namespace daisy
  20:../../DaisyExamples/libDaisy//src/per/qspi.h **** {
  21:../../DaisyExamples/libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../DaisyExamples/libDaisy//src/per/qspi.h **** @{
  23:../../DaisyExamples/libDaisy//src/per/qspi.h **** */
  24:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
  25:../../DaisyExamples/libDaisy//src/per/qspi.h **** /** 
  26:../../DaisyExamples/libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 105


  27:../../DaisyExamples/libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../DaisyExamples/libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../DaisyExamples/libDaisy//src/per/qspi.h **** */
  30:../../DaisyExamples/libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../DaisyExamples/libDaisy//src/per/qspi.h **** {
  32:../../DaisyExamples/libDaisy//src/per/qspi.h ****   public:
  33:../../DaisyExamples/libDaisy//src/per/qspi.h ****     enum Result
  34:../../DaisyExamples/libDaisy//src/per/qspi.h ****     {
  35:../../DaisyExamples/libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../DaisyExamples/libDaisy//src/per/qspi.h ****         ERR
  37:../../DaisyExamples/libDaisy//src/per/qspi.h ****     };
  38:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
  39:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../DaisyExamples/libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../DaisyExamples/libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../DaisyExamples/libDaisy//src/per/qspi.h ****          * 
  43:../../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../DaisyExamples/libDaisy//src/per/qspi.h ****          */
  48:../../DaisyExamples/libDaisy//src/per/qspi.h ****     enum Status
  49:../../DaisyExamples/libDaisy//src/per/qspi.h ****     {
  50:../../DaisyExamples/libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../DaisyExamples/libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../DaisyExamples/libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../DaisyExamples/libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../DaisyExamples/libDaisy//src/per/qspi.h ****     };
  55:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
  56:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../DaisyExamples/libDaisy//src/per/qspi.h ****     struct Config
  58:../../DaisyExamples/libDaisy//src/per/qspi.h ****     {
  59:../../DaisyExamples/libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../DaisyExamples/libDaisy//src/per/qspi.h ****         enum Device
  61:../../DaisyExamples/libDaisy//src/per/qspi.h ****         {
  62:../../DaisyExamples/libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../DaisyExamples/libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../DaisyExamples/libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../DaisyExamples/libDaisy//src/per/qspi.h ****         };
  66:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
  67:../../DaisyExamples/libDaisy//src/per/qspi.h ****         /** 
  68:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../DaisyExamples/libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../DaisyExamples/libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../DaisyExamples/libDaisy//src/per/qspi.h ****         */
  74:../../DaisyExamples/libDaisy//src/per/qspi.h ****         enum Mode
  75:../../DaisyExamples/libDaisy//src/per/qspi.h ****         {
  76:../../DaisyExamples/libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../DaisyExamples/libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../DaisyExamples/libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../DaisyExamples/libDaisy//src/per/qspi.h ****         };
  80:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
  81:../../DaisyExamples/libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../DaisyExamples/libDaisy//src/per/qspi.h ****         struct
  83:../../DaisyExamples/libDaisy//src/per/qspi.h ****         {
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 106


  84:../../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../DaisyExamples/libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
  92:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Device device;
  93:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../DaisyExamples/libDaisy//src/per/qspi.h ****     };
  95:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
  96:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
  97:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 101:../../DaisyExamples/libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
 103:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../DaisyExamples/libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
 106:../../DaisyExamples/libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../DaisyExamples/libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 109:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../DaisyExamples/libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 113:../../DaisyExamples/libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
 115:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 116:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../DaisyExamples/libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 123:../../DaisyExamples/libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
 125:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 126:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 132:../../DaisyExamples/libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
 134:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 135:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../DaisyExamples/libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 107


 141:../../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 142:../../DaisyExamples/libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
 144:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /**  
 145:../../DaisyExamples/libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../DaisyExamples/libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 150:../../DaisyExamples/libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
 152:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../DaisyExamples/libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../DaisyExamples/libDaisy//src/per/qspi.h ****      */
 155:../../DaisyExamples/libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
 157:../../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../DaisyExamples/libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../DaisyExamples/libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../DaisyExamples/libDaisy//src/per/qspi.h ****      * 
 161:../../DaisyExamples/libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../DaisyExamples/libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../DaisyExamples/libDaisy//src/per/qspi.h ****     */
 164:../../DaisyExamples/libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../DaisyExamples/libDaisy//src/per/qspi.h **** 
 166:../../DaisyExamples/libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 2593              		.loc 20 166 5 view .LVU609
 2594              	.LBB1290:
 2595              	.LBB1291:
 2596              		.loc 20 166 34 is_stmt 0 view .LVU610
 2597 00b6 C0F8A841 		str	r4, [r0, #424]
 2598              	.LVL121:
 2599              		.loc 20 166 34 view .LVU611
 2600              	.LBE1291:
 2601              	.LBE1290:
 2602              	.LBE1289:
 2603              	.LBB1292:
 2604              	.LBI1292:
  95:../../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 2605              		.loc 7 95 5 is_stmt 1 view .LVU612
 2606              	.LBB1293:
 2607              	.LBB1294:
  95:../../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 2608              		.loc 7 95 35 is_stmt 0 view .LVU613
 2609 00ba C0F8BC41 		str	r4, [r0, #444]
 2610              	.LVL122:
  95:../../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 2611              		.loc 7 95 35 view .LVU614
 2612              	.LBE1294:
 2613              	.LBE1293:
 2614              	.LBE1292:
 2615              	.LBB1295:
 2616              	.LBI1295:
 109:../../DaisyExamples/libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 2617              		.loc 6 109 5 is_stmt 1 view .LVU615
 109:../../DaisyExamples/libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 2618              		.loc 6 109 5 is_stmt 0 view .LVU616
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 108


 2619              	.LBE1295:
 2620              	.LBB1296:
 2621              	.LBI1296:
 2622              		.file 21 "../../DaisyExamples/libDaisy//src/per/dac.h"
   1:../../DaisyExamples/libDaisy//src/per/dac.h **** #pragma once
   2:../../DaisyExamples/libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../DaisyExamples/libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../DaisyExamples/libDaisy//src/per/dac.h **** 
   5:../../DaisyExamples/libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../DaisyExamples/libDaisy//src/per/dac.h **** 
   7:../../DaisyExamples/libDaisy//src/per/dac.h **** namespace daisy
   8:../../DaisyExamples/libDaisy//src/per/dac.h **** {
   9:../../DaisyExamples/libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../DaisyExamples/libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../DaisyExamples/libDaisy//src/per/dac.h ****  ** 
  12:../../DaisyExamples/libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../DaisyExamples/libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../DaisyExamples/libDaisy//src/per/dac.h ****  **
  15:../../DaisyExamples/libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../DaisyExamples/libDaisy//src/per/dac.h ****  **
  17:../../DaisyExamples/libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../DaisyExamples/libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../DaisyExamples/libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../DaisyExamples/libDaisy//src/per/dac.h ****  ***/
  21:../../DaisyExamples/libDaisy//src/per/dac.h **** class DacHandle
  22:../../DaisyExamples/libDaisy//src/per/dac.h **** {
  23:../../DaisyExamples/libDaisy//src/per/dac.h ****   public:
  24:../../DaisyExamples/libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../DaisyExamples/libDaisy//src/per/dac.h ****     enum class Result
  26:../../DaisyExamples/libDaisy//src/per/dac.h ****     {
  27:../../DaisyExamples/libDaisy//src/per/dac.h ****         OK,
  28:../../DaisyExamples/libDaisy//src/per/dac.h ****         ERR,
  29:../../DaisyExamples/libDaisy//src/per/dac.h ****     };
  30:../../DaisyExamples/libDaisy//src/per/dac.h **** 
  31:../../DaisyExamples/libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../DaisyExamples/libDaisy//src/per/dac.h ****     enum class Channel
  33:../../DaisyExamples/libDaisy//src/per/dac.h ****     {
  34:../../DaisyExamples/libDaisy//src/per/dac.h ****         ONE,
  35:../../DaisyExamples/libDaisy//src/per/dac.h ****         TWO,
  36:../../DaisyExamples/libDaisy//src/per/dac.h ****         BOTH,
  37:../../DaisyExamples/libDaisy//src/per/dac.h ****     };
  38:../../DaisyExamples/libDaisy//src/per/dac.h **** 
  39:../../DaisyExamples/libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../DaisyExamples/libDaisy//src/per/dac.h ****      **
  41:../../DaisyExamples/libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../DaisyExamples/libDaisy//src/per/dac.h ****      **
  43:../../DaisyExamples/libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../DaisyExamples/libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../DaisyExamples/libDaisy//src/per/dac.h ****      ***/
  46:../../DaisyExamples/libDaisy//src/per/dac.h ****     enum class Mode
  47:../../DaisyExamples/libDaisy//src/per/dac.h ****     {
  48:../../DaisyExamples/libDaisy//src/per/dac.h ****         POLLING,
  49:../../DaisyExamples/libDaisy//src/per/dac.h ****         DMA,
  50:../../DaisyExamples/libDaisy//src/per/dac.h ****     };
  51:../../DaisyExamples/libDaisy//src/per/dac.h **** 
  52:../../DaisyExamples/libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../DaisyExamples/libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 109


  54:../../DaisyExamples/libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../DaisyExamples/libDaisy//src/per/dac.h ****      ***/
  56:../../DaisyExamples/libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../DaisyExamples/libDaisy//src/per/dac.h ****     {
  58:../../DaisyExamples/libDaisy//src/per/dac.h ****         BITS_8,
  59:../../DaisyExamples/libDaisy//src/per/dac.h ****         BITS_12
  60:../../DaisyExamples/libDaisy//src/per/dac.h ****     };
  61:../../DaisyExamples/libDaisy//src/per/dac.h **** 
  62:../../DaisyExamples/libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../DaisyExamples/libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../DaisyExamples/libDaisy//src/per/dac.h ****     {
  65:../../DaisyExamples/libDaisy//src/per/dac.h ****         ENABLED,
  66:../../DaisyExamples/libDaisy//src/per/dac.h ****         DISABLED,
  67:../../DaisyExamples/libDaisy//src/per/dac.h ****     };
  68:../../DaisyExamples/libDaisy//src/per/dac.h **** 
  69:../../DaisyExamples/libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../DaisyExamples/libDaisy//src/per/dac.h ****     struct Config
  71:../../DaisyExamples/libDaisy//src/per/dac.h ****     {
  72:../../DaisyExamples/libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../DaisyExamples/libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../DaisyExamples/libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../DaisyExamples/libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../DaisyExamples/libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../DaisyExamples/libDaisy//src/per/dac.h **** 
  78:../../DaisyExamples/libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../DaisyExamples/libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../DaisyExamples/libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../DaisyExamples/libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../DaisyExamples/libDaisy//src/per/dac.h ****     };
  83:../../DaisyExamples/libDaisy//src/per/dac.h **** 
  84:../../DaisyExamples/libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 2623              		.loc 21 84 5 is_stmt 1 view .LVU617
 2624              	.LBB1297:
 2625              	.LBB1298:
 2626              		.loc 21 84 33 is_stmt 0 view .LVU618
 2627 00be C0F8C841 		str	r4, [r0, #456]
 2628              	.LVL123:
 2629              		.loc 21 84 33 view .LVU619
 2630              	.LBE1298:
 2631              	.LBE1297:
 2632              	.LBE1296:
 2633              	.LBB1299:
 2634              	.LBI1299:
  40:../../DaisyExamples/libDaisy//src/hid/usb.h **** 
 2635              		.loc 5 40 5 is_stmt 1 view .LVU620
  40:../../DaisyExamples/libDaisy//src/hid/usb.h **** 
 2636              		.loc 5 40 5 is_stmt 0 view .LVU621
 2637              	.LBE1299:
 2638              	.LBB1300:
 2639              	.LBI1300:
  96:../../DaisyExamples/libDaisy//src/sys/system.h ****     ~System() {}
 2640              		.loc 4 96 5 is_stmt 1 view .LVU622
  96:../../DaisyExamples/libDaisy//src/sys/system.h ****     ~System() {}
 2641              		.loc 4 96 5 is_stmt 0 view .LVU623
 2642              	.LBE1300:
 2643              	.LBB1301:
 2644              	.LBI1301:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 110


 2645              		.file 22 "../../DaisyExamples/libDaisy//src/per/sai.h"
   1:../../DaisyExamples/libDaisy//src/per/sai.h **** #pragma once
   2:../../DaisyExamples/libDaisy//src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../DaisyExamples/libDaisy//src/per/sai.h **** #define DSY_SAI_H
   4:../../DaisyExamples/libDaisy//src/per/sai.h **** 
   5:../../DaisyExamples/libDaisy//src/per/sai.h **** #include "daisy_core.h"
   6:../../DaisyExamples/libDaisy//src/per/sai.h **** 
   7:../../DaisyExamples/libDaisy//src/per/sai.h **** namespace daisy
   8:../../DaisyExamples/libDaisy//src/per/sai.h **** {
   9:../../DaisyExamples/libDaisy//src/per/sai.h **** /** 
  10:../../DaisyExamples/libDaisy//src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../DaisyExamples/libDaisy//src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../DaisyExamples/libDaisy//src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../DaisyExamples/libDaisy//src/per/sai.h ****  * 
  14:../../DaisyExamples/libDaisy//src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../DaisyExamples/libDaisy//src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../DaisyExamples/libDaisy//src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../DaisyExamples/libDaisy//src/per/sai.h ****  *
  18:../../DaisyExamples/libDaisy//src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../DaisyExamples/libDaisy//src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../DaisyExamples/libDaisy//src/per/sai.h ****  * 
  21:../../DaisyExamples/libDaisy//src/per/sai.h ****  * Use SAI Handle like this:
  22:../../DaisyExamples/libDaisy//src/per/sai.h ****  * 
  23:../../DaisyExamples/libDaisy//src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../DaisyExamples/libDaisy//src/per/sai.h ****  *  // Then Initialize
  37:../../DaisyExamples/libDaisy//src/per/sai.h ****  *  SaiHandle sai;
  38:../../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../DaisyExamples/libDaisy//src/per/sai.h ****  *  // Now you can use it:
  40:../../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../DaisyExamples/libDaisy//src/per/sai.h ****  */
  42:../../DaisyExamples/libDaisy//src/per/sai.h **** class SaiHandle
  43:../../DaisyExamples/libDaisy//src/per/sai.h **** {
  44:../../DaisyExamples/libDaisy//src/per/sai.h ****   public:
  45:../../DaisyExamples/libDaisy//src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../DaisyExamples/libDaisy//src/per/sai.h ****     struct Config
  47:../../DaisyExamples/libDaisy//src/per/sai.h ****     {
  48:../../DaisyExamples/libDaisy//src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../DaisyExamples/libDaisy//src/per/sai.h ****         enum class Peripheral
  50:../../DaisyExamples/libDaisy//src/per/sai.h ****         {
  51:../../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_1,
  52:../../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_2,
  53:../../DaisyExamples/libDaisy//src/per/sai.h ****         };
  54:../../DaisyExamples/libDaisy//src/per/sai.h **** 
  55:../../DaisyExamples/libDaisy//src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../DaisyExamples/libDaisy//src/per/sai.h ****         enum class SampleRate
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 111


  57:../../DaisyExamples/libDaisy//src/per/sai.h ****         {
  58:../../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_8KHZ,
  59:../../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_16KHZ,
  60:../../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_32KHZ,
  61:../../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_48KHZ,
  62:../../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_96KHZ,
  63:../../DaisyExamples/libDaisy//src/per/sai.h ****         };
  64:../../DaisyExamples/libDaisy//src/per/sai.h **** 
  65:../../DaisyExamples/libDaisy//src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../DaisyExamples/libDaisy//src/per/sai.h ****         enum class BitDepth
  67:../../DaisyExamples/libDaisy//src/per/sai.h ****         {
  68:../../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_16BIT,
  69:../../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_24BIT,
  70:../../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_32BIT,
  71:../../DaisyExamples/libDaisy//src/per/sai.h ****         };
  72:../../DaisyExamples/libDaisy//src/per/sai.h **** 
  73:../../DaisyExamples/libDaisy//src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../DaisyExamples/libDaisy//src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../DaisyExamples/libDaisy//src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../DaisyExamples/libDaisy//src/per/sai.h ****          */
  77:../../DaisyExamples/libDaisy//src/per/sai.h ****         enum class Sync
  78:../../DaisyExamples/libDaisy//src/per/sai.h ****         {
  79:../../DaisyExamples/libDaisy//src/per/sai.h ****             MASTER,
  80:../../DaisyExamples/libDaisy//src/per/sai.h ****             SLAVE,
  81:../../DaisyExamples/libDaisy//src/per/sai.h ****         };
  82:../../DaisyExamples/libDaisy//src/per/sai.h **** 
  83:../../DaisyExamples/libDaisy//src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../DaisyExamples/libDaisy//src/per/sai.h ****         enum class Direction
  85:../../DaisyExamples/libDaisy//src/per/sai.h ****         {
  86:../../DaisyExamples/libDaisy//src/per/sai.h ****             TRANSMIT,
  87:../../DaisyExamples/libDaisy//src/per/sai.h ****             RECEIVE,
  88:../../DaisyExamples/libDaisy//src/per/sai.h ****         };
  89:../../DaisyExamples/libDaisy//src/per/sai.h **** 
  90:../../DaisyExamples/libDaisy//src/per/sai.h ****         Peripheral periph;
  91:../../DaisyExamples/libDaisy//src/per/sai.h ****         struct
  92:../../DaisyExamples/libDaisy//src/per/sai.h ****         {
  93:../../DaisyExamples/libDaisy//src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../DaisyExamples/libDaisy//src/per/sai.h ****         } pin_config;
  95:../../DaisyExamples/libDaisy//src/per/sai.h ****         SampleRate sr;
  96:../../DaisyExamples/libDaisy//src/per/sai.h ****         BitDepth   bit_depth;
  97:../../DaisyExamples/libDaisy//src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../DaisyExamples/libDaisy//src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../DaisyExamples/libDaisy//src/per/sai.h ****     };
 100:../../DaisyExamples/libDaisy//src/per/sai.h **** 
 101:../../DaisyExamples/libDaisy//src/per/sai.h ****     /** Return values for SAI functions */
 102:../../DaisyExamples/libDaisy//src/per/sai.h ****     enum class Result
 103:../../DaisyExamples/libDaisy//src/per/sai.h ****     {
 104:../../DaisyExamples/libDaisy//src/per/sai.h ****         OK,
 105:../../DaisyExamples/libDaisy//src/per/sai.h ****         ERR,
 106:../../DaisyExamples/libDaisy//src/per/sai.h ****     };
 107:../../DaisyExamples/libDaisy//src/per/sai.h **** 
 108:../../DaisyExamples/libDaisy//src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 2646              		.loc 22 108 5 is_stmt 1 view .LVU624
 2647              	.LBE1301:
 2648              	.LBE1288:
 2649              	.LBE1287:
  29:daisy_common.h ****     ~daisyCommon() {}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 112


 2650              		.loc 2 29 19 is_stmt 0 view .LVU625
 2651 00c2 C0F80412 		str	r1, [r0, #516]
 2652              	.LVL124:
  29:daisy_common.h ****     ~daisyCommon() {}
 2653              		.loc 2 29 19 view .LVU626
 2654 00c6 C0E97B11 		strd	r1, r1, [r0, #492]
 2655 00ca C0E97D11 		strd	r1, r1, [r0, #500]
 2656 00ce C0E97F11 		strd	r1, r1, [r0, #508]
 2657              	.LBE1302:
 2658              	.LBE1303:
 2659              	.LBE1304:
   9:helloTest.cpp **** 
 2660              		.loc 1 9 13 view .LVU627
 2661 00d2 0C49     		ldr	r1, .L61+8
 2662 00d4 FFF7FEFF 		bl	__aeabi_atexit
 2663              	.LVL125:
  11:helloTest.cpp **** OnePole filter[2];
 2664              		.loc 1 11 17 is_stmt 1 view .LVU628
  11:helloTest.cpp **** OnePole filter[2];
 2665              		.loc 1 11 12 is_stmt 0 view .LVU629
 2666 00d8 094A     		ldr	r2, .L61+4
 2667 00da 0B49     		ldr	r1, .L61+12
 2668 00dc 2046     		mov	r0, r4
 2669 00de FFF7FEFF 		bl	__aeabi_atexit
 2670              	.LVL126:
  12:helloTest.cpp **** Wavefolder folder[2];
 2671              		.loc 1 12 17 is_stmt 1 view .LVU630
  12:helloTest.cpp **** Wavefolder folder[2];
 2672              		.loc 1 12 9 is_stmt 0 view .LVU631
 2673 00e2 074A     		ldr	r2, .L61+4
 2674 00e4 0949     		ldr	r1, .L61+16
 2675 00e6 2046     		mov	r0, r4
 2676 00e8 FFF7FEFF 		bl	__aeabi_atexit
 2677              	.LVL127:
  13:helloTest.cpp **** 
 2678              		.loc 1 13 20 is_stmt 1 view .LVU632
  13:helloTest.cpp **** 
 2679              		.loc 1 13 12 is_stmt 0 view .LVU633
 2680 00ec 2046     		mov	r0, r4
 2681 00ee 044A     		ldr	r2, .L61+4
 2682 00f0 0749     		ldr	r1, .L61+20
 2683              	.LBE1305:
 2684              	.LBE1307:
 2685              		.loc 1 117 1 view .LVU634
 2686 00f2 BDE81040 		pop	{r4, lr}
 2687              		.cfi_restore 14
 2688              		.cfi_restore 4
 2689              		.cfi_def_cfa_offset 0
 2690              	.LBB1308:
 2691              	.LBB1306:
  13:helloTest.cpp **** 
 2692              		.loc 1 13 12 view .LVU635
 2693 00f6 FFF7FEBF 		b	__aeabi_atexit
 2694              	.LVL128:
 2695              	.L62:
 2696 00fa 00BF     		.align	2
 2697              	.L61:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 113


 2698 00fc 00000000 		.word	.LANCHOR3
 2699 0100 00000000 		.word	__dso_handle
 2700 0104 00000000 		.word	_ZN5daisy11daisyCommonD1Ev
 2701 0108 00000000 		.word	__tcf_0
 2702 010c 00000000 		.word	__tcf_1
 2703 0110 00000000 		.word	__tcf_2
 2704              	.LBE1306:
 2705              	.LBE1308:
 2706              		.cfi_endproc
 2707              	.LFE5341:
 2709              		.section	.init_array,"aw",%init_array
 2710              		.align	2
 2711 0000 00000000 		.word	_GLOBAL__sub_I_board(target1)
 2712              		.global	folder
 2713              		.global	filter
 2714              		.global	osc
 2715              		.global	board
 2716              		.section	.bss.board,"aw",%nobits
 2717              		.align	2
 2718              		.set	.LANCHOR3,. + 0
 2721              	board:
 2722 0000 00000000 		.space	520
 2722      00000000 
 2722      00000000 
 2722      00000000 
 2722      00000000 
 2723              		.section	.bss.filter,"aw",%nobits
 2724              		.align	2
 2725              		.set	.LANCHOR2,. + 0
 2728              	filter:
 2729 0000 00000000 		.space	32
 2729      00000000 
 2729      00000000 
 2729      00000000 
 2729      00000000 
 2730              		.section	.bss.folder,"aw",%nobits
 2731              		.align	2
 2732              		.set	.LANCHOR1,. + 0
 2735              	folder:
 2736 0000 00000000 		.space	16
 2736      00000000 
 2736      00000000 
 2736      00000000 
 2737              		.section	.bss.osc,"aw",%nobits
 2738              		.align	2
 2739              		.set	.LANCHOR0,. + 0
 2742              	osc:
 2743 0000 00000000 		.space	88
 2743      00000000 
 2743      00000000 
 2743      00000000 
 2743      00000000 
 2744              		.text
 2745              	.Letext0:
 2746              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 2747              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 2748              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 114


 2749              		.file 26 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 2750              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 2751              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 2752              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 2753              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 2754              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 2755              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 2756              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 2757              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 2758              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 2759              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 2760              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_constr
 2761              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 2762              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 2763              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 2764              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 2765              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 2766              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 2767              		.file 44 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_tempbu
 2768              		.file 45 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\vector.tcc
 2769              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 2770              		.file 47 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\alloc_trait
 2771              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 2772              		.file 49 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 2773              		.file 50 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 2774              		.file 51 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 2775              		.file 52 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 2776              		.file 53 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 2777              		.file 54 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 2778              		.file 55 "../../DaisyExamples/libDaisy//src/per/tim.h"
 2779              		.file 56 "../../DaisyExamples/libDaisy//src/util/wav_format.h"
 2780              		.file 57 "../../DaisyExamples/libDaisy//src/dev/max11300.h"
 2781              		.file 58 "../../DaisyExamples/libDaisy//src/dev/sdram.h"
 2782              		.file 59 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 2783              		.file 60 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 2784              		.file 61 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 2785              		.file 62 "../../DaisyExamples/DaisySP//Source/Control/adenv.h"
 2786              		.file 63 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 2787              		.file 64 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 2788              		.file 65 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\new"
 2789              		.file 66 "<built-in>"
 2790              		.file 67 "../../DaisyExamples/libDaisy//src/dev/sr_595.h"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s 			page 115


DEFINED SYMBOLS
                            *ABS*:00000000 helloTest.cpp
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:17     .text.__tcf_0:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:25     .text.__tcf_0:00000000 __tcf_0
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:39     .text._ZN5daisy11daisyCommonD2Ev:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:47     .text._ZN5daisy11daisyCommonD2Ev:00000000 _ZN5daisy11daisyCommonD2Ev
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:47     .text._ZN5daisy11daisyCommonD2Ev:00000000 _ZN5daisy11daisyCommonD1Ev
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:273    .text.__tcf_2:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:280    .text.__tcf_2:00000000 __tcf_2
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:291    .text.__tcf_1:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:298    .text.__tcf_1:00000000 __tcf_1
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:309    .text._Z13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:317    .text._Z13AudioCallbackPKPKfPPfj:00000000 _Z13AudioCallbackPKPKfPPfj
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:518    .text._Z13AudioCallbackPKPKfPPfj:000000b0 $d
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:528    .text.startup.main:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:536    .text.startup.main:00000000 main
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:1695   .text.startup.main:00000338 $d
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:1722   .text.startup._GLOBAL__sub_I_board:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:1729   .text.startup._GLOBAL__sub_I_board:00000000 _GLOBAL__sub_I_board
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:2698   .text.startup._GLOBAL__sub_I_board:000000fc $d
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:2710   .init_array:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:2735   .bss.folder:00000000 folder
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:2728   .bss.filter:00000000 filter
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:2742   .bss.osc:00000000 osc
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:2721   .bss.board:00000000 board
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:2717   .bss.board:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:2724   .bss.filter:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:2731   .bss.folder:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccUDFmiW.s:2738   .bss.osc:00000000 $d
                           .group:00000000 _ZN5daisy11daisyCommonD5Ev

UNDEFINED SYMBOLS
_ZdlPvj
_ZN7daisysp10Oscillator7ProcessEv
_ZN7daisysp10Wavefolder7ProcessEf
_ZN5daisy11daisyCommon4InitEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
_ZN5daisy11daisyCommon8add_knobEii
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Wavefolder4InitEv
_ZN5daisy6System6GetNowEv
_ZN5daisy9DaisySeed6SetLedEb
_ZN5daisy11daisyCommon14get_knob_valueEi
powf
tanf
dsy_gpio_read
__aeabi_atexit
__dso_handle
